---
swagger: "2.0"
info:
  description: ""
  version: 2020-09-11
  title: REST API for Oracle Sales Cloud
  x-summary: This REST AP
tags:
- name: Accounts
  description: The account resource is used to view, create, and update accounts.
- name: Accounts/Account Attachments
  description: The attachment resource is used to view, create, and update attachments of an account. An attachment includes additional information about an account.
- name: Accounts/Account Resources
  description: The sales team member resource represents a resource party and is assigned to a sales account team. A sales account team member has a defined access role for the sales account.
- name: Accounts/Addresses
  description: The address resource is used to view, create, and update addresses of an account. An address represents the location information of an account.
- name: Accounts/Addresses/Address Purposes
  description: The address purpose resource is used to view, create, or modify the address purpose. The address purpose describes the use of an address, such as shipping address or billing address.
- name: Accounts/Aux Classifications
  description: The customer classifications resoure is used to view, created, and update the auxillary classifications for Accounts.
- name: Accounts/Notes
  description: The note resource is used to capture comments, information, or instructions for an account.
- name: Accounts/Primary Addresses
  description: The primary address resource is used to view, create, and update primary address of an account. A primary address is the default communication address of an account.
- name: Accounts/Relationships
  description: The relationship resource is used to view, create, and update account relationships.
- name: Contacts
  description: The contact resource is used to view, create, or modify a contact. A contact is a person in a defined relationship with either an account or contact.
- name: Contacts/Attachments
  description: The contact picture attachment resource is used to view, create, and update the contact's picture.
- name: Contacts/Aux Classifications
  description: The customer classifications resource is used to view, create, and update auxillary classifications for a contact.
- name: Contacts/Contact Addresses
  description: The address resource is used to view, create, or modify an address. An address represents the location information of an account, contact, or household.
- name: Contacts/Contact Addresses/Contact Address Purposes
  description: The address purpose resource is used to view, create, or modify the address purpose. The address purpose describes the use of an address, such as shipping address or billing address.
- name: Contacts/Contact Attachments
  description: The attachment resource is used to view, create, and update attachments of a contact. An attachment includes additional information about a contact.
- name: Contacts/Contact Primary Addresses
  description: The primary address resource is used to view, create, or modify a primary address of a contact. A primary address is the default communication address of an entity.
- name: Contacts/Notes
  description: The note resource is used to capture comments, information, or instructions for a contact.
- name: Contacts/Relationships
  description: The relationship resource includes attributes that are used to store values while viewing, creating, or updating a relationship.
- name: Contacts/Sales Account Resources
  description: The sales team member resource represents a resource party and is assigned to a sales account team. A sales account team member has a defined access role for the sales account.
- name: Partner Programs
  description: The service used to manage partner programs.
- name: Partner Programs/Countries
  description: The child of a partner program that allows for management of countries.
- name: Partner Programs/Program Benefit Details
  description: The child of a partner program that allows for management of program benefits.
- name: Partner Programs/Tiers
  description: The child of a partner program that allows for management of tiers for a given program.
- name: Partner Tiers
  description: The service used to manage partner tiers in preparation for assignment to partners and partner programs.
- name: Partners
  description: A partner resource is used to view, create, or modify a channel partner. A channel partner company works with your organization to sell products and services. In Oracle Sales Cloud, a partner resource is different from an account resource.
- name: Partners/Attachments
  description: An attachments resource is used to view, create, modify or delete the partner's attachments.
- name: Partners/Expertises
  description: An expertises resource is used to view, create, or modify the partner's expertises.
- name: Partners/Focus Areas
  description: A focus area resource is used to view, create, or modify the partner's focus areas. For example, a partner's focus area can be green servers.
- name: Partners/Geographies
  description: A partner geography resource is used to view, create, or modify the geographies that the partner operates in, such as, US or CA.
- name: Partners/Industries
  description: An industry resource is used to view, create, or modify the industries that a channel partner works with. For example, a partner's industry can be manufactory or automotive.
- name: Partners/Notes
  description: A notes resource is used to view, create, or modify the notes captured regarding the partner. For example, you can have notes for comments, information, or instructions.
- name: Partners/Partner Account Team Members
  description: A partner account team members resource is used to view, create, or modify the group of team members who will work with the partner. The team members are responsible for a partner account, and have access to edit the partner account information.
- name: Partners/Partner Certifications
  description: A certification resource is used to view, create, or modify the certifications of a partner, such as Specialist.
- name: Partners/Partner Contacts
  description: A partner contact resource is used to view, create, or modify the contacts of the partner company. For example, partner sales rep, partner sales manager, partner administrator.
- name: Partners/Partner Contacts/User Account Details
  description: A user account detail resource is used to view, create, or modify the user account details for the partner contact.
- name: Partners/Partner Types
  description: A partner type resource is used to view, create, or modify the relationships you have with the partner. For example, a partner can be reseller, distributor, or both.
- name: Product Groups
  description: The Product Groups resource is used to create, modify, delete, and view the product groups. It is also used to lock, unlock and publish a product group. A product group is a business object that groups related products. For example, you might create a product group named Consumer Electronics that includes all of your consumer electronics products so that customers can browse through all the products in this group in your product catalog. Locking a product group makes it inaccessible or non editable by other users while you are making some changes. Unlocking releases the lock and rolls the changes back. Publishing the product group makes the changes available to the users at runtime.
- name: Product Groups/Attachments
  description: The Attachments resource is used to add, delete, update and view the attachments associated with a product group. The attachments are typically used to associate images to the product groups so that you can identify the product groups visually in browse sales catalog.
- name: Product Groups/Filter Attributes
  description: The Filter Attributes resource is used to create, update, delete, and view the filter attributes associated with a product group. The examples of Filter Attributes are Color, Texture, and other such material properties.
- name: Product Groups/Filter Attributes/Filter Attribute Values
  description: The Filter Attribute Values resource is used to create, update, delete, and view the values of filter attributes associated with a product group. The examples of Filter Attribute values are Blue, Red for Color filter attribute.
- name: Product Groups/Products
  description: The Products resource is used to create, update, delete, and view the product association to a product group. Typically products are associated to the leaf most nodes of the product group hierarchy. These products are sourced from items defined in Product Information Management.
- name: Product Groups/Related Groups
  description: The Related Groups resource is used to create, update, delete, and view the association between sub product groups and parent product groups. While the Subgroups resource can be used to create or update the product group to sub group association, the deletion of such association can only be done using the Related Groups resource.
- name: Product Groups/Subgroups
  description: The Subgroups resources is used to create, delete, update, and view the association of a sub product group to a parent product group so that a hierarchy of product groups can be built. Additionally this resource can also be used to create a sub product group and associate the same to an existing parent group.
- name: Products
  description: The product resource is used to view, create, or modify a product. A product is an item that an organization or company intends to sell.
- name: Resources
  description: The resources resoure is used to view, create, and update a resource. A resource is a person within the deploying company who can be assigned work to accomplish business objectives, such as sales persons or partner members.
- name: Resources/Attachments
  description: The contact picture attachment resource is used to view, create, and update the resource's picture.
- name: Service Requests
  description: Service request is a document to track a request from a customer for service from the time the customer makes the request until the request is resolved. For example, a customer calls in to log a request that the laptop battery drains faster.
- name: Service Requests/Attachments
  description: Attachments are a list of files or URLs associated with a service request.
- name: Service Requests/Channel Communications
  description: Channel communication is Information about the communication between support agents and their customers. For example, the type of information recorded about communications include message identifiers, contact identifiers, and contact point identifiers.
- name: Service Requests/Contact Members
  description: Contacts are a list of customer contacts associated with a service request. For example, the contact for a corporate customer requesting support for software installation may be the organization's IT manager. Agents communicate service request resolutions or other information with contacts. Communication channels include e-mail, Twitter accounts, and telephone.
- name: Service Requests/Messages
  description: Messages contain information about every communication update to the service request, both from the internal agent and from the customer. For example, "We have credited your account for the value of the call. You should see a credit in your next monthly bill." or  "We have notified the billing department about the issue. This issue should not recur." are messages.
- name: Service Requests/Messages/Attachments
  description: Attachments are a list of files or URLs associated with a service request.
- name: Service Requests/Messages/Channel Communications
  description: Channel communication is Information about the communication between support agents and their customers. For example, the type of information recorded about communications include message identifiers, contact identifiers, and contact point identifiers.
- name: Service Requests/Resources
  description: Resource members are a list of employees or partners, such as service representatives, service managers, or product managers, who can take ownership of items, such as service or knowledge authoring requests, in a queue.
- name: Service Requests/Service Request References
  description: Service Requests references are a list of objects linked to the service request. For example, a list of knowledge articles linked to the service request.
- name: Source Codes
  description: The source code resource is used to track responses and leads generated by each marketing campaign execution, which helps gauge the effectiveness of each initiative. A marketing source code is a unique identifier representing a marketing campaign and its underlying execution.
schemes:
- https
paths:
  /serviceApi/resources/latest/serviceRequests:
    get:
      tags:
      - Service Requests
      summary: Get all service requests
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>SRsCreatedByMeFinder: Find a service request created by a user. Finder Variables:<ul><li>CreatedBy; string; The user ID passed as parameter to the service request finder service.</li></ul></li><li>MyCriticalSRsFinder: Finds critical service requests assigned to a user. Finder Variables:<ul><li>AssigneeResourceId; string; The resource ID passed as parameter to the service request finder service.</li></ul></li><li>ServiceRequestByNumber: Finds a service request by SR number. Finder Variables:<ul><li>SrNumber; string; The service request number passed as parameter to the finder service.</li></ul></li><li>MySRsFinder: Finds service requests assigned to me. Finder Variables:<ul><li>AssigneeResourceId; string; The resource ID passed as parameter to the service request finder service.</li></ul></li><li>MySRsByStatusFinder: Finds service requests with a specific status that are assigned to a user. Finder Variables:<ul><li>AssigneeResourceId; string; The resource ID passed as parameter to the service request finder service.</li><li>StatusCd; string; The status code passed as parameter to the service request finder service.</li></ul></li><li>PrimaryKey: Finds a service request by ID number. Finder Variables:<ul><li>SrId; integer; The service request Id passed as parameter to the finder service.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-get
    post:
      tags:
      - Service Requests
      summary: Create a service request
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/serviceRequests-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-post
  /serviceApi/resources/latest/serviceRequests/{SrNumber}:
    get:
      tags:
      - Service Requests
      summary: Get a service request
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-get
    delete:
      tags:
      - Service Requests
      summary: Delete a service request
      description: ""
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-delete
    patch:
      tags:
      - Service Requests
      summary: Update a service request
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/serviceRequests-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-patch
  /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/Attachment:
    get:
      tags:
      - Service Requests/Attachments
      summary: Get all attachments
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-Attachment'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-Attachment-get
    post:
      tags:
      - Service Requests/Attachments
      summary: Create an attachment
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/serviceRequests-Attachment-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-Attachment-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-Attachment-post
  /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/Attachment/{AttachmentUniqID}:
    get:
      tags:
      - Service Requests/Attachments
      summary: Get an attachment
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: AttachmentUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Attachments resource and used to uniquely identify an instance of Attachments. The client should not generate the hash key value.  Instead, the client should query on the Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Attachments.<br><br>For example: Attachment?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-Attachment-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-Attachment-{AttachmentUniqID}-get
    delete:
      tags:
      - Service Requests/Attachments
      summary: Delete an attachment
      description: ""
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: AttachmentUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Attachments resource and used to uniquely identify an instance of Attachments. The client should not generate the hash key value.  Instead, the client should query on the Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Attachments.<br><br>For example: Attachment?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-Attachment-{AttachmentUniqID}-delete
    patch:
      tags:
      - Service Requests/Attachments
      summary: Update an attachment
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: AttachmentUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Attachments resource and used to uniquely identify an instance of Attachments. The client should not generate the hash key value.  Instead, the client should query on the Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Attachments.<br><br>For example: Attachment?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/serviceRequests-Attachment-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-Attachment-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-Attachment-{AttachmentUniqID}-patch
  /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/channelCommunication:
    get:
      tags:
      - Service Requests/Channel Communications
      summary: Get all channel communications
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-channelCommunication'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-channelCommunication-get
    post:
      tags:
      - Service Requests/Channel Communications
      summary: Create a channel communication
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/serviceRequests-channelCommunication-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-channelCommunication-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-channelCommunication-post
  /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/channelCommunication/{channelCommunicationUniqID}:
    get:
      tags:
      - Service Requests/Channel Communications
      summary: Get a channel communication
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: channelCommunicationUniqID
        in: path
        description: Identifier to Channel Communications
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-channelCommunication-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-channelCommunication-{channelCommunicationUniqID}-get
    delete:
      tags:
      - Service Requests/Channel Communications
      summary: Delete a channel communication
      description: ""
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: channelCommunicationUniqID
        in: path
        description: Identifier to Channel Communications
        required: true
        type: string
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-channelCommunication-{channelCommunicationUniqID}-delete
    patch:
      tags:
      - Service Requests/Channel Communications
      summary: Update a channel communication
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: channelCommunicationUniqID
        in: path
        description: Identifier to Channel Communications
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/serviceRequests-channelCommunication-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-channelCommunication-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-channelCommunication-{channelCommunicationUniqID}-patch
  /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/contacts:
    get:
      tags:
      - Service Requests/Contact Members
      summary: Get all contacts
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds the service request contacts using the member id. Finder Variables:<ul><li>MemberId; integer; The service request contact member id passed as parameter to the finder service.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-contacts'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-contacts-get
    post:
      tags:
      - Service Requests/Contact Members
      summary: Create a contact
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/serviceRequests-contacts-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-contacts-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-contacts-post
  /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/contacts/{MemberId}:
    get:
      tags:
      - Service Requests/Contact Members
      summary: Get a contact
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: MemberId
        in: path
        description: The unique identifier of the contact.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-contacts-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-contacts-{MemberId}-get
    delete:
      tags:
      - Service Requests/Contact Members
      summary: Delete a contact
      description: ""
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: MemberId
        in: path
        description: The unique identifier of the contact.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-contacts-{MemberId}-delete
    patch:
      tags:
      - Service Requests/Contact Members
      summary: Update a contact
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: MemberId
        in: path
        description: The unique identifier of the contact.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/serviceRequests-contacts-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-contacts-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-contacts-{MemberId}-patch
  /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/messages:
    get:
      tags:
      - Service Requests/Messages
      summary: Get all messages
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds the service request message using the message ID. Finder Variables:<ul><li>MessageId; integer; The service request message ID passed as parameter to the finder service.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-messages'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-messages-get
    post:
      tags:
      - Service Requests/Messages
      summary: Create a message
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/serviceRequests-messages-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-messages-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-messages-post
  /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/messages/{MessageId}:
    get:
      tags:
      - Service Requests/Messages
      summary: Get a message
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: MessageId
        in: path
        description: The unique identifier of the service request message.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-messages-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-messages-{MessageId}-get
    delete:
      tags:
      - Service Requests/Messages
      summary: Delete a message
      description: ""
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: MessageId
        in: path
        description: The unique identifier of the service request message.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-messages-{MessageId}-delete
    patch:
      tags:
      - Service Requests/Messages
      summary: Update a message
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: MessageId
        in: path
        description: The unique identifier of the service request message.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/serviceRequests-messages-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-messages-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-messages-{MessageId}-patch
  /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/messages/{MessageId}/child/Attachment:
    get:
      tags:
      - Service Requests/Messages/Attachments
      summary: Get all attachments
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: MessageId
        in: path
        description: The unique identifier of the service request message.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-messages-Attachment'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-messages-{MessageId}-child-Attachment-get
    post:
      tags:
      - Service Requests/Messages/Attachments
      summary: Create an attachment
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: MessageId
        in: path
        description: The unique identifier of the service request message.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/serviceRequests-messages-Attachment-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-messages-Attachment-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-messages-{MessageId}-child-Attachment-post
  /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/messages/{MessageId}/child/Attachment/{AttachmentUniqID}:
    get:
      tags:
      - Service Requests/Messages/Attachments
      summary: Get an attachment
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: MessageId
        in: path
        description: The unique identifier of the service request message.
        required: true
        type: integer
      - name: AttachmentUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Attachments resource and used to uniquely identify an instance of Attachments. The client should not generate the hash key value.  Instead, the client should query on the Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Attachments.<br><br>For example: Attachment?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-messages-Attachment-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-messages-{MessageId}-child-Attachment-{AttachmentUniqID}-get
    delete:
      tags:
      - Service Requests/Messages/Attachments
      summary: Delete an attachment
      description: ""
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: MessageId
        in: path
        description: The unique identifier of the service request message.
        required: true
        type: integer
      - name: AttachmentUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Attachments resource and used to uniquely identify an instance of Attachments. The client should not generate the hash key value.  Instead, the client should query on the Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Attachments.<br><br>For example: Attachment?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-messages-{MessageId}-child-Attachment-{AttachmentUniqID}-delete
    patch:
      tags:
      - Service Requests/Messages/Attachments
      summary: Update an attachment
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: MessageId
        in: path
        description: The unique identifier of the service request message.
        required: true
        type: integer
      - name: AttachmentUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Attachments resource and used to uniquely identify an instance of Attachments. The client should not generate the hash key value.  Instead, the client should query on the Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Attachments.<br><br>For example: Attachment?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/serviceRequests-messages-Attachment-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-messages-Attachment-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-messages-{MessageId}-child-Attachment-{AttachmentUniqID}-patch
  /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/messages/{MessageId}/child/channelCommunication:
    get:
      tags:
      - Service Requests/Messages/Channel Communications
      summary: Get all channel communications
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: MessageId
        in: path
        description: The unique identifier of the service request message.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-messages-channelCommunication'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-messages-{MessageId}-child-channelCommunication-get
    post:
      tags:
      - Service Requests/Messages/Channel Communications
      summary: Create a channel communication
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: MessageId
        in: path
        description: The unique identifier of the service request message.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/serviceRequests-messages-channelCommunication-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-messages-channelCommunication-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-messages-{MessageId}-child-channelCommunication-post
  ? /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/messages/{MessageId}/child/channelCommunication/{channelCommunicationUniqID}
  : get:
      tags:
      - Service Requests/Messages/Channel Communications
      summary: Get a channel communication
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: MessageId
        in: path
        description: The unique identifier of the service request message.
        required: true
        type: integer
      - name: channelCommunicationUniqID
        in: path
        description: Identifier to Channel Communications
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-messages-channelCommunication-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-messages-{MessageId}-child-channelCommunication-{channelCommunicationUniqID}-get
    delete:
      tags:
      - Service Requests/Messages/Channel Communications
      summary: Delete a channel communication
      description: ""
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: MessageId
        in: path
        description: The unique identifier of the service request message.
        required: true
        type: integer
      - name: channelCommunicationUniqID
        in: path
        description: Identifier to Channel Communications
        required: true
        type: string
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-messages-{MessageId}-child-channelCommunication-{channelCommunicationUniqID}-delete
    patch:
      tags:
      - Service Requests/Messages/Channel Communications
      summary: Update a channel communication
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: MessageId
        in: path
        description: The unique identifier of the service request message.
        required: true
        type: integer
      - name: channelCommunicationUniqID
        in: path
        description: Identifier to Channel Communications
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/serviceRequests-messages-channelCommunication-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-messages-channelCommunication-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-messages-{MessageId}-child-channelCommunication-{channelCommunicationUniqID}-patch
  /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/resourceMembers:
    get:
      tags:
      - Service Requests/Resources
      summary: Get all resource members
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds the service request resources using the member ID. Finder Variables:<ul><li>MemberId; integer; The member Id passed as parameter to the finder service.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-resourceMembers'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-resourceMembers-get
    post:
      tags:
      - Service Requests/Resources
      summary: Create a resource member
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/serviceRequests-resourceMembers-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-resourceMembers-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-resourceMembers-post
  /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/resourceMembers/{MemberId}:
    get:
      tags:
      - Service Requests/Resources
      summary: Get a resource member
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: MemberId
        in: path
        description: A unique identifier service request resource member record.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-resourceMembers-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-resourceMembers-{MemberId}-get
    delete:
      tags:
      - Service Requests/Resources
      summary: Delete a resource member
      description: ""
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: MemberId
        in: path
        description: A unique identifier service request resource member record.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-resourceMembers-{MemberId}-delete
    patch:
      tags:
      - Service Requests/Resources
      summary: Update a resource member
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: MemberId
        in: path
        description: A unique identifier service request resource member record.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/serviceRequests-resourceMembers-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-resourceMembers-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-resourceMembers-{MemberId}-patch
  /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/srReferences:
    get:
      tags:
      - Service Requests/Service Request References
      summary: Get all service request references
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds the service request references using the reference ID. Finder Variables:<ul><li>ReferenceId; integer; The service request reference ID passed as parameter to the finder service.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-srReferences'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-srReferences-get
    post:
      tags:
      - Service Requests/Service Request References
      summary: Create a service request reference
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/serviceRequests-srReferences-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-srReferences-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-srReferences-post
  /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/srReferences/{ReferenceId}:
    get:
      tags:
      - Service Requests/Service Request References
      summary: Get a service request reference
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: ReferenceId
        in: path
        description: The unique identifier of the service request reference record.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/serviceRequests-srReferences-item'
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-srReferences-{ReferenceId}-get
    delete:
      tags:
      - Service Requests/Service Request References
      summary: Delete a service request reference
      description: ""
      parameters:
      - name: SrNumber
        in: path
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        required: true
        type: string
      - name: ReferenceId
        in: path
        description: The unique identifier of the service request reference record.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: serviceApi-resources-11.12.1.0-serviceRequests-{SrNumber}-child-srReferences-{ReferenceId}-delete
  /crmCommonApi/resources/latest/resources:
    get:
      tags:
      - Resources
      summary: Get all resources
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>ResourcePartyNumberRF: Finds a resource by the specified party number. Finder Variables:<ul><li>PartyNumber; string; The unique identifier for the resource party.</li></ul></li><li>PrimaryKey: Finds a resource by the specified primary key. Finder Variables:<ul><li>ResourceProfileId; integer; The unique primary key identifier for the resource profile.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/resources'
      x-internal-id: crmCommonApi-resources-11.12.1.0-resources-get
  /crmCommonApi/resources/latest/resources/{PartyNumber}:
    get:
      tags:
      - Resources
      summary: Get a resource
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique identifier for the resource party.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/resources-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-resources-{PartyNumber}-get
  /crmCommonApi/resources/latest/resources/{PartyNumber}/child/PictureAttachment:
    get:
      tags:
      - Resources/Attachments
      summary: Get all resources' pictures
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique identifier for the resource party.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/resources-PictureAttachment'
      x-internal-id: crmCommonApi-resources-11.12.1.0-resources-{PartyNumber}-child-PictureAttachment-get
  /crmCommonApi/resources/latest/resources/{PartyNumber}/child/PictureAttachment/{PictureAttachmentUniqID}:
    get:
      tags:
      - Resources/Attachments
      summary: Get a resource's picture
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique identifier for the resource party.
        required: true
        type: string
      - name: PictureAttachmentUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Attachments resource and used to uniquely identify an instance of Attachments. The client should not generate the hash key value.  Instead, the client should query on the Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Attachments.<br><br>For example: PictureAttachment?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/resources-PictureAttachment-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-resources-{PartyNumber}-child-PictureAttachment-{PictureAttachmentUniqID}-get
  /crmCommonApi/resources/latest/accounts:
    get:
      tags:
      - Accounts
      summary: Get all accounts
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>MyAccounts: Finds an account from My Accounts. Finder Variables:<ul><li>BindUserPartyId; integer; The unique identifier of the party.</li></ul></li><li>AccountPartyNumberRF: Finds an account with the specified party number. Finder Variables:<ul><li>PartyNumber; string; The unique alternate identifier for the account party.</li></ul></li><li>PrimaryKey: Finds an account with the specified primary key. Finder Variables:<ul><li>OrganizationProfileId; integer; The unique identifier of the organization.</li><li>PartyId; integer; The unique identifier of the account.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-get
    post:
      tags:
      - Accounts
      summary: Create an account
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/accounts-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-post
  /crmCommonApi/resources/latest/accounts/{PartyNumber}:
    get:
      tags:
      - Accounts
      summary: Get an account
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-get
    delete:
      tags:
      - Accounts
      summary: Delete an account
      description: ""
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-delete
    patch:
      tags:
      - Accounts
      summary: Update an account
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/accounts-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-patch
  /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/Address:
    get:
      tags:
      - Accounts/Addresses
      summary: Get all addresses
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>AddressNumberRF: Finds an address with the unique identifier for address. Finder Variables:<ul><li>AddressNumber; string; The address internal unique identifier that is internally generated during create.</li></ul></li><li>PrimaryKey: Finds an address with the address primary key information. Finder Variables:<ul><li>AddressId; integer; The unique identifier of the address.</li><li>LocationId; integer; The unique identifier for the location.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Address'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Address-get
    post:
      tags:
      - Accounts/Addresses
      summary: Create an address
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/accounts-Address-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Address-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Address-post
  /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/Address/{AddressNumber}:
    get:
      tags:
      - Accounts/Addresses
      summary: Get an address
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The address internal unique identifier that is internally generated during create. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Address-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Address-{AddressNumber}-get
    delete:
      tags:
      - Accounts/Addresses
      summary: Delete an address
      description: ""
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The address internal unique identifier that is internally generated during create. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update.
        required: true
        type: string
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Address-{AddressNumber}-delete
    patch:
      tags:
      - Accounts/Addresses
      summary: Update an address
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The address internal unique identifier that is internally generated during create. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/accounts-Address-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Address-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Address-{AddressNumber}-patch
  /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/Address/{AddressNumber}/child/AddressPurpose:
    get:
      tags:
      - Accounts/Addresses/Address Purposes
      summary: Get all address purposes
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The address internal unique identifier that is internally generated during create. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds an address with the address primary key. Finder Variables:<ul><li>AddressPurposeId; integer; The unique identifier of the address purpose.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Address-AddressPurpose'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Address-{AddressNumber}-child-AddressPurpose-get
    post:
      tags:
      - Accounts/Addresses/Address Purposes
      summary: Create an address purpose
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The address internal unique identifier that is internally generated during create. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/accounts-Address-AddressPurpose-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Address-AddressPurpose-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Address-{AddressNumber}-child-AddressPurpose-post
  /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/Address/{AddressNumber}/child/AddressPurpose/{AddressPurposeId}:
    get:
      tags:
      - Accounts/Addresses/Address Purposes
      summary: Get an address purpose
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The address internal unique identifier that is internally generated during create. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update.
        required: true
        type: string
      - name: AddressPurposeId
        in: path
        description: The unique identifier of the address purpose.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Address-AddressPurpose-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Address-{AddressNumber}-child-AddressPurpose-{AddressPurposeId}-get
    delete:
      tags:
      - Accounts/Addresses/Address Purposes
      summary: Delete an address purpose
      description: ""
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The address internal unique identifier that is internally generated during create. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update.
        required: true
        type: string
      - name: AddressPurposeId
        in: path
        description: The unique identifier of the address purpose.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Address-{AddressNumber}-child-AddressPurpose-{AddressPurposeId}-delete
    patch:
      tags:
      - Accounts/Addresses/Address Purposes
      summary: Update an address purpose
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The address internal unique identifier that is internally generated during create. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update.
        required: true
        type: string
      - name: AddressPurposeId
        in: path
        description: The unique identifier of the address purpose.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/accounts-Address-AddressPurpose-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Address-AddressPurpose-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Address-{AddressNumber}-child-AddressPurpose-{AddressPurposeId}-patch
  /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/Attachment:
    get:
      tags:
      - Accounts/Account Attachments
      summary: Get all attachments
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Attachment'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Attachment-get
    post:
      tags:
      - Accounts/Account Attachments
      summary: Upload an attachment
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/accounts-Attachment-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Attachment-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Attachment-post
  /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/Attachment/{AttachmentUniqID}:
    get:
      tags:
      - Accounts/Account Attachments
      summary: Get an attachment
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: AttachmentUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Account Attachments resource and used to uniquely identify an instance of Account Attachments. The client should not generate the hash key value.  Instead, the client should query on the Account Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Account Attachments.<br><br>For example: Attachment?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Attachment-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Attachment-{AttachmentUniqID}-get
    delete:
      tags:
      - Accounts/Account Attachments
      summary: Remove an attachment
      description: ""
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: AttachmentUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Account Attachments resource and used to uniquely identify an instance of Account Attachments. The client should not generate the hash key value.  Instead, the client should query on the Account Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Account Attachments.<br><br>For example: Attachment?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Attachment-{AttachmentUniqID}-delete
    patch:
      tags:
      - Accounts/Account Attachments
      summary: Replace an attachment
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: AttachmentUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Account Attachments resource and used to uniquely identify an instance of Account Attachments. The client should not generate the hash key value.  Instead, the client should query on the Account Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Account Attachments.<br><br>For example: Attachment?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/accounts-Attachment-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Attachment-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Attachment-{AttachmentUniqID}-patch
  /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/CustomerClassification:
    get:
      tags:
      - Accounts/Aux Classifications
      summary: Get all customer classifications
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a customer classification with the primary key information. Finder Variables:<ul><li>CodeAssignmentId; integer; The unique identifier for the customer classification assignment.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-CustomerClassification'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-CustomerClassification-get
    post:
      tags:
      - Accounts/Aux Classifications
      summary: Create a customer classification
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/accounts-CustomerClassification-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-CustomerClassification-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-CustomerClassification-post
  /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/CustomerClassification/{CodeAssignmentId}:
    get:
      tags:
      - Accounts/Aux Classifications
      summary: Get a customer classification
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: CodeAssignmentId
        in: path
        description: The unique identifier for the customer classification assignment.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-CustomerClassification-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-CustomerClassification-{CodeAssignmentId}-get
    delete:
      tags:
      - Accounts/Aux Classifications
      summary: Delete a customer classification
      description: ""
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: CodeAssignmentId
        in: path
        description: The unique identifier for the customer classification assignment.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-CustomerClassification-{CodeAssignmentId}-delete
    patch:
      tags:
      - Accounts/Aux Classifications
      summary: Update a customer classification
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: CodeAssignmentId
        in: path
        description: The unique identifier for the customer classification assignment.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/accounts-CustomerClassification-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-CustomerClassification-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-CustomerClassification-{CodeAssignmentId}-patch
  /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/Note:
    get:
      tags:
      - Accounts/Notes
      summary: Get all notes
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find a note with specified note identifier Finder Variables:<ul><li>NoteId; integer; Unique Note Identifier</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Note'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Note-get
    post:
      tags:
      - Accounts/Notes
      summary: Create a note
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/accounts-Note-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Note-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Note-post
  /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/Note/{NoteId}:
    get:
      tags:
      - Accounts/Notes
      summary: Get a note
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: NoteId
        in: path
        description: Unique Note Identifier. This is the primary key of the notes table.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Note-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Note-{NoteId}-get
    delete:
      tags:
      - Accounts/Notes
      summary: Delete a note
      description: ""
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: NoteId
        in: path
        description: Unique Note Identifier. This is the primary key of the notes table.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Note-{NoteId}-delete
    patch:
      tags:
      - Accounts/Notes
      summary: Update a note
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: NoteId
        in: path
        description: Unique Note Identifier. This is the primary key of the notes table.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/accounts-Note-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Note-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Note-{NoteId}-patch
  /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/PrimaryAddress:
    get:
      tags:
      - Accounts/Primary Addresses
      summary: Get all primary addresses
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryAddressNumberRF: Find a primary address with specified party site Finder Variables:<ul><li>AddressNumber; string; Party Site Number</li></ul></li><li>PrimaryKey: Find a primary address with Address identifier Finder Variables:<ul><li>AddressId; integer; Unique address identifier</li><li>LocationLocationId; integer; The unique identifier of the location.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-PrimaryAddress'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-PrimaryAddress-get
    post:
      tags:
      - Accounts/Primary Addresses
      summary: Create a primary address
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/accounts-PrimaryAddress-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-PrimaryAddress-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-PrimaryAddress-post
  /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/PrimaryAddress/{AddressNumber}:
    get:
      tags:
      - Accounts/Primary Addresses
      summary: Get a primary address
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The primary address's internal unique identifier that is internally generated during creation. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-PrimaryAddress-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-PrimaryAddress-{AddressNumber}-get
    delete:
      tags:
      - Accounts/Primary Addresses
      summary: Delete a primary address
      description: ""
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The primary address's internal unique identifier that is internally generated during creation. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update.
        required: true
        type: string
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-PrimaryAddress-{AddressNumber}-delete
    patch:
      tags:
      - Accounts/Primary Addresses
      summary: Update a primary address
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The primary address's internal unique identifier that is internally generated during creation. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/accounts-PrimaryAddress-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-PrimaryAddress-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-PrimaryAddress-{AddressNumber}-patch
  /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/Relationship:
    get:
      tags:
      - Accounts/Relationships
      summary: Get all relationships
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a relationship with the specified primary key. Finder Variables:<ul><li>RelationshipRecId; integer; The identifier of the relationship.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Relationship'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Relationship-get
    post:
      tags:
      - Accounts/Relationships
      summary: Create a relationship
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/accounts-Relationship-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Relationship-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Relationship-post
  /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/Relationship/{RelationshipRecId}:
    get:
      tags:
      - Accounts/Relationships
      summary: Get a relationship
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: RelationshipRecId
        in: path
        description: The unique identifier of the relationship record.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Relationship-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Relationship-{RelationshipRecId}-get
    delete:
      tags:
      - Accounts/Relationships
      summary: Delete a relationship
      description: ""
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: RelationshipRecId
        in: path
        description: The unique identifier of the relationship record.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Relationship-{RelationshipRecId}-delete
    patch:
      tags:
      - Accounts/Relationships
      summary: Update a relationship
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: RelationshipRecId
        in: path
        description: The unique identifier of the relationship record.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/accounts-Relationship-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-Relationship-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-Relationship-{RelationshipRecId}-patch
  /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/SalesTeamMember:
    get:
      tags:
      - Accounts/Account Resources
      summary: Get all sales team members
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Find sales team member with the primary key. Finder Variables:<ul><li>TeamMemberId; integer; The surrogate primary key for the member of the sales account resource team.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-SalesTeamMember'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-SalesTeamMember-get
    post:
      tags:
      - Accounts/Account Resources
      summary: Create a sales team member
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/accounts-SalesTeamMember-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-SalesTeamMember-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-SalesTeamMember-post
  /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/SalesTeamMember/{TeamMemberId}:
    get:
      tags:
      - Accounts/Account Resources
      summary: Get a sales team member
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: TeamMemberId
        in: path
        description: The surrogate primary key for the member of the sales account resource team.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-SalesTeamMember-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-SalesTeamMember-{TeamMemberId}-get
    delete:
      tags:
      - Accounts/Account Resources
      summary: Delete a sales team member
      description: ""
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: TeamMemberId
        in: path
        description: The surrogate primary key for the member of the sales account resource team.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-SalesTeamMember-{TeamMemberId}-delete
    patch:
      tags:
      - Accounts/Account Resources
      summary: Update a sales team member
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        required: true
        type: string
      - name: TeamMemberId
        in: path
        description: The surrogate primary key for the member of the sales account resource team.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/accounts-SalesTeamMember-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/accounts-SalesTeamMember-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-accounts-{PartyNumber}-child-SalesTeamMember-{TeamMemberId}-patch
  /crmCommonApi/resources/latest/contacts:
    get:
      tags:
      - Contacts
      summary: Get all contacts
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>ContactPartyNumberRF: Finds contacts by party number. Finder Variables:<ul><li>PartyNumber; string; The unique primary identifier for the contact party.</li></ul></li><li>MyContacts: Finds a contact from My Contacts. Finder Variables:<ul><li>BindUserPartyId; integer; The unique identifier of the contact.</li></ul></li><li>MyBusinessContacts: Finds a contact from My Business Contacts.</li><li>MyFavoriteContacts: Finds a contact from My Favourite Contacts.</li><li>PrimaryKey: Finds a contact with the specified primary key. Finder Variables:<ul><li>PartyId; integer; The Oracle Sales Cloud record ID for the contact.</li><li>PersonProfileId; integer; The  unique identifier of the contact.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-get
    post:
      tags:
      - Contacts
      summary: Create a contact
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-post
  /crmCommonApi/resources/latest/contacts/{PartyNumber}:
    get:
      tags:
      - Contacts
      summary: Get a contact
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-get
    delete:
      tags:
      - Contacts
      summary: Delete a contact
      description: ""
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-delete
    patch:
      tags:
      - Contacts
      summary: Update a contact
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-patch
  /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/Address:
    get:
      tags:
      - Contacts/Contact Addresses
      summary: Get all addresses
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>AddressNumberRF: Finds an address by the unique address identifier. Finder Variables:<ul><li>AddressNumber; string; The primary unique identifier for the address.</li></ul></li><li>PrimaryKey: Finds an address by the primary key information. Finder Variables:<ul><li>AddressId; integer; The unique identifier that is generated internally during create.</li><li>LocationId; integer; The unique identifier for this location.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Address'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Address-get
    post:
      tags:
      - Contacts/Contact Addresses
      summary: Create an address
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-Address-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Address-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Address-post
  /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/Address/{AddressNumber}:
    get:
      tags:
      - Contacts/Contact Addresses
      summary: Get an address
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The unique alternate identifier for the address. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update. If not specified, then it is automatically generated. A list of accepted values is defined in the profile option ZCA_PUID_PREFIX concatenated with an internally generated unique sequence number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Address-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Address-{AddressNumber}-get
    delete:
      tags:
      - Contacts/Contact Addresses
      summary: Delete an address
      description: ""
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The unique alternate identifier for the address. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update. If not specified, then it is automatically generated. A list of accepted values is defined in the profile option ZCA_PUID_PREFIX concatenated with an internally generated unique sequence number.
        required: true
        type: string
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Address-{AddressNumber}-delete
    patch:
      tags:
      - Contacts/Contact Addresses
      summary: Update an address
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The unique alternate identifier for the address. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update. If not specified, then it is automatically generated. A list of accepted values is defined in the profile option ZCA_PUID_PREFIX concatenated with an internally generated unique sequence number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-Address-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Address-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Address-{AddressNumber}-patch
  /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/Address/{AddressNumber}/child/AddressPurpose:
    get:
      tags:
      - Contacts/Contact Addresses/Contact Address Purposes
      summary: Get all purposes of an address
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The unique alternate identifier for the address. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update. If not specified, then it is automatically generated. A list of accepted values is defined in the profile option ZCA_PUID_PREFIX concatenated with an internally generated unique sequence number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds an address purpose by the primary key of the address. Finder Variables:<ul><li>AddressPurposeId; integer; The unique identifier for the address purpose of an address.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Address-AddressPurpose'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Address-{AddressNumber}-child-AddressPurpose-get
    post:
      tags:
      - Contacts/Contact Addresses/Contact Address Purposes
      summary: Create an address purpose
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The unique alternate identifier for the address. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update. If not specified, then it is automatically generated. A list of accepted values is defined in the profile option ZCA_PUID_PREFIX concatenated with an internally generated unique sequence number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-Address-AddressPurpose-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Address-AddressPurpose-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Address-{AddressNumber}-child-AddressPurpose-post
  /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/Address/{AddressNumber}/child/AddressPurpose/{AddressPurposeId}:
    get:
      tags:
      - Contacts/Contact Addresses/Contact Address Purposes
      summary: Get an address purpose
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The unique alternate identifier for the address. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update. If not specified, then it is automatically generated. A list of accepted values is defined in the profile option ZCA_PUID_PREFIX concatenated with an internally generated unique sequence number.
        required: true
        type: string
      - name: AddressPurposeId
        in: path
        description: The unique identifier for the address purpose of an address.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Address-AddressPurpose-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Address-{AddressNumber}-child-AddressPurpose-{AddressPurposeId}-get
    delete:
      tags:
      - Contacts/Contact Addresses/Contact Address Purposes
      summary: Delete an address purpose
      description: ""
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The unique alternate identifier for the address. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update. If not specified, then it is automatically generated. A list of accepted values is defined in the profile option ZCA_PUID_PREFIX concatenated with an internally generated unique sequence number.
        required: true
        type: string
      - name: AddressPurposeId
        in: path
        description: The unique identifier for the address purpose of an address.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Address-{AddressNumber}-child-AddressPurpose-{AddressPurposeId}-delete
    patch:
      tags:
      - Contacts/Contact Addresses/Contact Address Purposes
      summary: Update an address purpose
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The unique alternate identifier for the address. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update. If not specified, then it is automatically generated. A list of accepted values is defined in the profile option ZCA_PUID_PREFIX concatenated with an internally generated unique sequence number.
        required: true
        type: string
      - name: AddressPurposeId
        in: path
        description: The unique identifier for the address purpose of an address.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-Address-AddressPurpose-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Address-AddressPurpose-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Address-{AddressNumber}-child-AddressPurpose-{AddressPurposeId}-patch
  /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/Attachment:
    get:
      tags:
      - Contacts/Contact Attachments
      summary: Get all attachments
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Attachment'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Attachment-get
    post:
      tags:
      - Contacts/Contact Attachments
      summary: Upload an attachment
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-Attachment-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Attachment-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Attachment-post
  /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/Attachment/{AttachmentUniqID}:
    get:
      tags:
      - Contacts/Contact Attachments
      summary: Get an attachment
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: AttachmentUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Contact Attachments resource and used to uniquely identify an instance of Contact Attachments. The client should not generate the hash key value.  Instead, the client should query on the Contact Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Contact Attachments.<br><br>For example: Attachment?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Attachment-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Attachment-{AttachmentUniqID}-get
    delete:
      tags:
      - Contacts/Contact Attachments
      summary: Remove an attachment
      description: ""
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: AttachmentUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Contact Attachments resource and used to uniquely identify an instance of Contact Attachments. The client should not generate the hash key value.  Instead, the client should query on the Contact Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Contact Attachments.<br><br>For example: Attachment?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Attachment-{AttachmentUniqID}-delete
    patch:
      tags:
      - Contacts/Contact Attachments
      summary: Replace an attachment
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: AttachmentUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Contact Attachments resource and used to uniquely identify an instance of Contact Attachments. The client should not generate the hash key value.  Instead, the client should query on the Contact Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Contact Attachments.<br><br>For example: Attachment?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-Attachment-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Attachment-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Attachment-{AttachmentUniqID}-patch
  /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/CustomerClassification:
    get:
      tags:
      - Contacts/Aux Classifications
      summary: Get all customer classifications
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a customer classification by the primary key. Finder Variables:<ul><li>CodeAssignmentId; integer; The unique identifier for the customer classification assignment.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-CustomerClassification'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-CustomerClassification-get
    post:
      tags:
      - Contacts/Aux Classifications
      summary: Create a customer classification
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-CustomerClassification-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-CustomerClassification-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-CustomerClassification-post
  /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/CustomerClassification/{CodeAssignmentId}:
    get:
      tags:
      - Contacts/Aux Classifications
      summary: Get a customer classification
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: CodeAssignmentId
        in: path
        description: The unique identifier for the customer classification assignment.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-CustomerClassification-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-CustomerClassification-{CodeAssignmentId}-get
    delete:
      tags:
      - Contacts/Aux Classifications
      summary: Delete a customer classification
      description: ""
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: CodeAssignmentId
        in: path
        description: The unique identifier for the customer classification assignment.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-CustomerClassification-{CodeAssignmentId}-delete
    patch:
      tags:
      - Contacts/Aux Classifications
      summary: Update a customer classification
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: CodeAssignmentId
        in: path
        description: The unique identifier for the customer classification assignment.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-CustomerClassification-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-CustomerClassification-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-CustomerClassification-{CodeAssignmentId}-patch
  /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/Note:
    get:
      tags:
      - Contacts/Notes
      summary: Get all notes
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a note by the specified note identifier. Finder Variables:<ul><li>NoteId; integer; The unique identifier of a note for a contact.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Note'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Note-get
    post:
      tags:
      - Contacts/Notes
      summary: Create a note
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-Note-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Note-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Note-post
  /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/Note/{NoteId}:
    get:
      tags:
      - Contacts/Notes
      summary: Get a note
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: NoteId
        in: path
        description: The unique Identifier of the note associated with the contact. This is the primary key of the notes table.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Note-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Note-{NoteId}-get
    delete:
      tags:
      - Contacts/Notes
      summary: Delete a note
      description: ""
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: NoteId
        in: path
        description: The unique Identifier of the note associated with the contact. This is the primary key of the notes table.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Note-{NoteId}-delete
    patch:
      tags:
      - Contacts/Notes
      summary: Update a note
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: NoteId
        in: path
        description: The unique Identifier of the note associated with the contact. This is the primary key of the notes table.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-Note-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Note-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Note-{NoteId}-patch
  /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/PictureAttachment:
    get:
      tags:
      - Contacts/Attachments
      summary: Get all contacts' pictures
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-PictureAttachment'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-PictureAttachment-get
    post:
      tags:
      - Contacts/Attachments
      summary: Upload a contact's picture
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-PictureAttachment-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-PictureAttachment-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-PictureAttachment-post
  /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/PictureAttachment/{PictureAttachmentUniqID}:
    get:
      tags:
      - Contacts/Attachments
      summary: Get a contact's picture
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: PictureAttachmentUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Attachments resource and used to uniquely identify an instance of Attachments. The client should not generate the hash key value.  Instead, the client should query on the Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Attachments.<br><br>For example: PictureAttachment?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-PictureAttachment-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-PictureAttachment-{PictureAttachmentUniqID}-get
    delete:
      tags:
      - Contacts/Attachments
      summary: Remove a contact's picture
      description: ""
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: PictureAttachmentUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Attachments resource and used to uniquely identify an instance of Attachments. The client should not generate the hash key value.  Instead, the client should query on the Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Attachments.<br><br>For example: PictureAttachment?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-PictureAttachment-{PictureAttachmentUniqID}-delete
    patch:
      tags:
      - Contacts/Attachments
      summary: Replace a contact's picture
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: PictureAttachmentUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Attachments resource and used to uniquely identify an instance of Attachments. The client should not generate the hash key value.  Instead, the client should query on the Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Attachments.<br><br>For example: PictureAttachment?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-PictureAttachment-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-PictureAttachment-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-PictureAttachment-{PictureAttachmentUniqID}-patch
  /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/PrimaryAddress:
    get:
      tags:
      - Contacts/Contact Primary Addresses
      summary: Get all primary addresses
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryAddressNumberRF: Finds a primary address by party site number. Finder Variables:<ul><li>AddressNumber; string; The unique primary identifier for the address.</li></ul></li><li>PrimaryKey: Finds a primary address by the specified address identifier. Finder Variables:<ul><li>AddressId; integer; The unique identifier for the address that is generated internally during create.</li><li>LocationLocationId; integer; The unique identifier of the location.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-PrimaryAddress'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-PrimaryAddress-get
    post:
      tags:
      - Contacts/Contact Primary Addresses
      summary: Create a primary address
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-PrimaryAddress-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-PrimaryAddress-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-PrimaryAddress-post
  /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/PrimaryAddress/{AddressNumber}:
    get:
      tags:
      - Contacts/Contact Primary Addresses
      summary: Get a primary address
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The unique primary identifier for the address. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update. If not specified, then it is automatically generated. A list of accepted values is defined in the profile option ZCA_PUID_PREFIX concatenated with an internally generated unique sequence number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-PrimaryAddress-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-PrimaryAddress-{AddressNumber}-get
    delete:
      tags:
      - Contacts/Contact Primary Addresses
      summary: Delete a primary address
      description: ""
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The unique primary identifier for the address. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update. If not specified, then it is automatically generated. A list of accepted values is defined in the profile option ZCA_PUID_PREFIX concatenated with an internally generated unique sequence number.
        required: true
        type: string
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-PrimaryAddress-{AddressNumber}-delete
    patch:
      tags:
      - Contacts/Contact Primary Addresses
      summary: Update a primary address
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: AddressNumber
        in: path
        description: The unique primary identifier for the address. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update. If not specified, then it is automatically generated. A list of accepted values is defined in the profile option ZCA_PUID_PREFIX concatenated with an internally generated unique sequence number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-PrimaryAddress-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-PrimaryAddress-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-PrimaryAddress-{AddressNumber}-patch
  /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/Relationship:
    get:
      tags:
      - Contacts/Relationships
      summary: Get all relationships
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a relationship with the specified primary key. Finder Variables:<ul><li>RelationshipRecId; integer; The unique identifier of the relationship.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Relationship'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Relationship-get
    post:
      tags:
      - Contacts/Relationships
      summary: Create a relationship
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-Relationship-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Relationship-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Relationship-post
  /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/Relationship/{RelationshipRecId}:
    get:
      tags:
      - Contacts/Relationships
      summary: Get a relationship
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: RelationshipRecId
        in: path
        description: The unique identifier of the relationship record.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Relationship-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Relationship-{RelationshipRecId}-get
    delete:
      tags:
      - Contacts/Relationships
      summary: Delete a relationship
      description: ""
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: RelationshipRecId
        in: path
        description: The unique identifier of the relationship record.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Relationship-{RelationshipRecId}-delete
    patch:
      tags:
      - Contacts/Relationships
      summary: Update a relationship
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: RelationshipRecId
        in: path
        description: The unique identifier of the relationship record.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-Relationship-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-Relationship-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-Relationship-{RelationshipRecId}-patch
  /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/SalesTeamMember:
    get:
      tags:
      - Contacts/Sales Account Resources
      summary: Get all sales team members
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a sales team member by the specified team member identifier. Finder Variables:<ul><li>TeamMemberId; integer; The surrogate primary key for the member of the sales account resource team.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-SalesTeamMember'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-SalesTeamMember-get
    post:
      tags:
      - Contacts/Sales Account Resources
      summary: Create a sales team member
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-SalesTeamMember-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-SalesTeamMember-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-SalesTeamMember-post
  /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/SalesTeamMember/{TeamMemberId}:
    get:
      tags:
      - Contacts/Sales Account Resources
      summary: Get a sales team member
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: TeamMemberId
        in: path
        description: The unique alternate identifier of the sales team member.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-SalesTeamMember-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-SalesTeamMember-{TeamMemberId}-get
    delete:
      tags:
      - Contacts/Sales Account Resources
      summary: Delete a sales team member
      description: ""
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: TeamMemberId
        in: path
        description: The unique alternate identifier of the sales team member.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-SalesTeamMember-{TeamMemberId}-delete
    patch:
      tags:
      - Contacts/Sales Account Resources
      summary: Update a sales team member
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: PartyNumber
        in: path
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        required: true
        type: string
      - name: TeamMemberId
        in: path
        description: The unique alternate identifier of the sales team member.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/contacts-SalesTeamMember-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/contacts-SalesTeamMember-item'
      x-internal-id: crmCommonApi-resources-11.12.1.0-contacts-{PartyNumber}-child-SalesTeamMember-{TeamMemberId}-patch
  /salesApi/resources/latest/partners:
    get:
      tags:
      - Partners
      summary: Get all partners
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>CompanyNumberRF: Finds the partner resource by partner number. Finder Variables:<ul><li>CompanyNumber; string; The company number of the&lt;br&gt;partner.</li></ul></li><li>MyPartners: Finds the partner resource by record set. Finder Variables:<ul><li>RecordSet; string; The value of the record set.</li></ul></li><li>PrimaryKey: Finds the partner resource by primary key. Finder Variables:<ul><li>OrganizationProfileId; integer; Find a partner''s organization profile by ID.</li><li>PartyId; integer; Find a partner''s party by ID.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners'
      x-internal-id: salesApi-resources-11.12.1.0-partners-get
    post:
      tags:
      - Partners
      summary: Create a partner
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partners-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-post
  /salesApi/resources/latest/partners/{CompanyNumber}:
    get:
      tags:
      - Partners
      summary: Get a partner
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-get
    patch:
      tags:
      - Partners
      summary: Update a partner
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partners-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-patch
  /salesApi/resources/latest/partners/{CompanyNumber}/child/accountTeamMembers:
    get:
      tags:
      - Partners/Partner Account Team Members
      summary: Get all partner account team members for a partner
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a partner account team member by ID. Finder Variables:<ul><li>PartnerAccountResourceId; integer; The ID field of account team.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-accountTeamMembers'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-accountTeamMembers-get
    post:
      tags:
      - Partners/Partner Account Team Members
      summary: Create a partner account team member for a partner
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partners-accountTeamMembers-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-accountTeamMembers-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-accountTeamMembers-post
  /salesApi/resources/latest/partners/{CompanyNumber}/child/accountTeamMembers/{PartnerAccountResourceId}:
    get:
      tags:
      - Partners/Partner Account Team Members
      summary: Get a partner account team member for a partner
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartnerAccountResourceId
        in: path
        description: The unique identifier of the party that owns the partner.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-accountTeamMembers-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-accountTeamMembers-{PartnerAccountResourceId}-get
    delete:
      tags:
      - Partners/Partner Account Team Members
      summary: Delete a partner account team member for a partner
      description: ""
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartnerAccountResourceId
        in: path
        description: The unique identifier of the party that owns the partner.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-accountTeamMembers-{PartnerAccountResourceId}-delete
    patch:
      tags:
      - Partners/Partner Account Team Members
      summary: Update a partner account team member for a partner
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartnerAccountResourceId
        in: path
        description: The unique identifier of the party that owns the partner.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partners-accountTeamMembers-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-accountTeamMembers-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-accountTeamMembers-{PartnerAccountResourceId}-patch
  /salesApi/resources/latest/partners/{CompanyNumber}/child/attachments:
    get:
      tags:
      - Partners/Attachments
      summary: Get all partner attachments
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-attachments'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-attachments-get
    post:
      tags:
      - Partners/Attachments
      summary: Create a partner attachment
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partners-attachments-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-attachments-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-attachments-post
  /salesApi/resources/latest/partners/{CompanyNumber}/child/attachments/{attachmentsUniqID}:
    get:
      tags:
      - Partners/Attachments
      summary: Get a partner attachment
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: attachmentsUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Attachments resource and used to uniquely identify an instance of Attachments. The client should not generate the hash key value.  Instead, the client should query on the Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Attachments.<br><br>For example: attachments?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-attachments-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-attachments-{attachmentsUniqID}-get
    delete:
      tags:
      - Partners/Attachments
      summary: Delete a partner attachment
      description: ""
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: attachmentsUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Attachments resource and used to uniquely identify an instance of Attachments. The client should not generate the hash key value.  Instead, the client should query on the Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Attachments.<br><br>For example: attachments?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-attachments-{attachmentsUniqID}-delete
    patch:
      tags:
      - Partners/Attachments
      summary: Update a partner attachment
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: attachmentsUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Attachments resource and used to uniquely identify an instance of Attachments. The client should not generate the hash key value.  Instead, the client should query on the Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Attachments.<br><br>For example: attachments?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partners-attachments-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-attachments-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-attachments-{attachmentsUniqID}-patch
  /salesApi/resources/latest/partners/{CompanyNumber}/child/certifications:
    get:
      tags:
      - Partners/Partner Certifications
      summary: Get all certifications for a partner
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a partner''s expertise by ID. Finder Variables:<ul><li>PartnerMultivalLovId; integer; The ID field associated with an expertise.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-certifications'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-certifications-get
    post:
      tags:
      - Partners/Partner Certifications
      summary: Create a certification for a partner
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partners-certifications-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-certifications-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-certifications-post
  /salesApi/resources/latest/partners/{CompanyNumber}/child/certifications/{PartnerMultivalLovId}:
    get:
      tags:
      - Partners/Partner Certifications
      summary: Get a certification for a partner
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartnerMultivalLovId
        in: path
        description: The unique identifier for partner certifications.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-certifications-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-certifications-{PartnerMultivalLovId}-get
    delete:
      tags:
      - Partners/Partner Certifications
      summary: Delete a certification for a partner
      description: ""
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartnerMultivalLovId
        in: path
        description: The unique identifier for partner certifications.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-certifications-{PartnerMultivalLovId}-delete
  /salesApi/resources/latest/partners/{CompanyNumber}/child/contacts:
    get:
      tags:
      - Partners/Partner Contacts
      summary: Get all partner contacts
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>ContactPartyNumberRF: Finds a partner contact by the party number. Finder Variables:<ul><li>PartyNumber; string; The unique primary public identifier for the partner contact party.</li></ul></li><li>PrimaryKey: Finds a partner contact by the party number. Finder Variables:<ul><li>PartyId; integer; The ID field associated with a Partner Contact</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-contacts'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-contacts-get
    post:
      tags:
      - Partners/Partner Contacts
      summary: Create a partner contact
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partners-contacts-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-contacts-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-contacts-post
  /salesApi/resources/latest/partners/{CompanyNumber}/child/contacts/{PartyNumber}:
    get:
      tags:
      - Partners/Partner Contacts
      summary: Get a partner contact
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartyNumber
        in: path
        description: The unique identifier for the partner contact party. Can be system-generated or user-provided during create, based on the profile option HZ_GENERATE_PARTY_NUMBER.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-contacts-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-contacts-{PartyNumber}-get
    delete:
      tags:
      - Partners/Partner Contacts
      summary: Delete a partner contact
      description: ""
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartyNumber
        in: path
        description: The unique identifier for the partner contact party. Can be system-generated or user-provided during create, based on the profile option HZ_GENERATE_PARTY_NUMBER.
        required: true
        type: string
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-contacts-{PartyNumber}-delete
    patch:
      tags:
      - Partners/Partner Contacts
      summary: Update a partner contact
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartyNumber
        in: path
        description: The unique identifier for the partner contact party. Can be system-generated or user-provided during create, based on the profile option HZ_GENERATE_PARTY_NUMBER.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partners-contacts-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-contacts-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-contacts-{PartyNumber}-patch
  /salesApi/resources/latest/partners/{CompanyNumber}/child/contacts/{PartyNumber}/child/userdetails:
    get:
      tags:
      - Partners/Partner Contacts/User Account Details
      summary: Get all partner contact user details
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartyNumber
        in: path
        description: The unique identifier for the partner contact party. Can be system-generated or user-provided during create, based on the profile option HZ_GENERATE_PARTY_NUMBER.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>RowFinder: Finds a partner contact user details by the user account name. Finder Variables:<ul><li>Username; string; The user account name of partner contact.</li></ul></li><li>PrimaryKey: Finds a partner contact user details by the user account name. Finder Variables:<ul><li>Username; string; The user account name of the partner contact.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-contacts-userdetails'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-contacts-{PartyNumber}-child-userdetails-get
    post:
      tags:
      - Partners/Partner Contacts/User Account Details
      summary: Create a partner contact user detail
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartyNumber
        in: path
        description: The unique identifier for the partner contact party. Can be system-generated or user-provided during create, based on the profile option HZ_GENERATE_PARTY_NUMBER.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partners-contacts-userdetails-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-contacts-userdetails-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-contacts-{PartyNumber}-child-userdetails-post
  /salesApi/resources/latest/partners/{CompanyNumber}/child/contacts/{PartyNumber}/child/userdetails/{Username}:
    get:
      tags:
      - Partners/Partner Contacts/User Account Details
      summary: Get a partner contact user details
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartyNumber
        in: path
        description: The unique identifier for the partner contact party. Can be system-generated or user-provided during create, based on the profile option HZ_GENERATE_PARTY_NUMBER.
        required: true
        type: string
      - name: Username
        in: path
        description: The user account name of partner contact.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-contacts-userdetails-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-contacts-{PartyNumber}-child-userdetails-{Username}-get
    delete:
      tags:
      - Partners/Partner Contacts/User Account Details
      summary: Delete a partner contact user detail
      description: ""
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartyNumber
        in: path
        description: The unique identifier for the partner contact party. Can be system-generated or user-provided during create, based on the profile option HZ_GENERATE_PARTY_NUMBER.
        required: true
        type: string
      - name: Username
        in: path
        description: The user account name of partner contact.
        required: true
        type: string
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-contacts-{PartyNumber}-child-userdetails-{Username}-delete
    patch:
      tags:
      - Partners/Partner Contacts/User Account Details
      summary: Update a partner contact user detail
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartyNumber
        in: path
        description: The unique identifier for the partner contact party. Can be system-generated or user-provided during create, based on the profile option HZ_GENERATE_PARTY_NUMBER.
        required: true
        type: string
      - name: Username
        in: path
        description: The user account name of partner contact.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partners-contacts-userdetails-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-contacts-userdetails-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-contacts-{PartyNumber}-child-userdetails-{Username}-patch
  /salesApi/resources/latest/partners/{CompanyNumber}/child/expertises:
    get:
      tags:
      - Partners/Expertises
      summary: Get all expertises for a partner
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a partner''s expertise by ID. Finder Variables:<ul><li>PartnerMultivalLovId; integer; The ID field associated with an expertise.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-expertises'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-expertises-get
    post:
      tags:
      - Partners/Expertises
      summary: Create an expertise for a partner
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partners-expertises-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-expertises-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-expertises-post
  /salesApi/resources/latest/partners/{CompanyNumber}/child/expertises/{PartnerMultivalLovId}:
    get:
      tags:
      - Partners/Expertises
      summary: Get an expertise for a partner
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartnerMultivalLovId
        in: path
        description: The unique identifier for partner expertise.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-expertises-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-expertises-{PartnerMultivalLovId}-get
    delete:
      tags:
      - Partners/Expertises
      summary: Delete an expertise for a partner
      description: ""
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartnerMultivalLovId
        in: path
        description: The unique identifier for partner expertise.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-expertises-{PartnerMultivalLovId}-delete
  /salesApi/resources/latest/partners/{CompanyNumber}/child/geographies:
    get:
      tags:
      - Partners/Geographies
      summary: Get all geographies for a partner
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a partner''s geography by ID. Finder Variables:<ul><li>PartnerDimMembersId; integer; The ID field associated with a geography.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-geographies'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-geographies-get
    post:
      tags:
      - Partners/Geographies
      summary: Create a geography for a partner
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partners-geographies-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-geographies-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-geographies-post
  /salesApi/resources/latest/partners/{CompanyNumber}/child/geographies/{PartnerDimMembersId}:
    get:
      tags:
      - Partners/Geographies
      summary: Get a geography for a partner
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartnerDimMembersId
        in: path
        description: The unique identifier for the partner geography .
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-geographies-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-geographies-{PartnerDimMembersId}-get
    delete:
      tags:
      - Partners/Geographies
      summary: Delete a geography for a partner
      description: ""
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartnerDimMembersId
        in: path
        description: The unique identifier for the partner geography .
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-geographies-{PartnerDimMembersId}-delete
  /salesApi/resources/latest/partners/{CompanyNumber}/child/industries:
    get:
      tags:
      - Partners/Industries
      summary: Get all industries for a partner
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a partner''s industry by ID. Finder Variables:<ul><li>PartnerDimMembersId; integer; The ID field associated with an industry.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-industries'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-industries-get
    post:
      tags:
      - Partners/Industries
      summary: Create an industry for a partner
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partners-industries-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-industries-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-industries-post
  /salesApi/resources/latest/partners/{CompanyNumber}/child/industries/{PartnerDimMembersId}:
    get:
      tags:
      - Partners/Industries
      summary: Get an industry for a partner
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartnerDimMembersId
        in: path
        description: The unique identifier of the industry with the partner.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-industries-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-industries-{PartnerDimMembersId}-get
    delete:
      tags:
      - Partners/Industries
      summary: Delete an industry for a partner
      description: ""
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartnerDimMembersId
        in: path
        description: The unique identifier of the industry with the partner.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-industries-{PartnerDimMembersId}-delete
  /salesApi/resources/latest/partners/{CompanyNumber}/child/notes:
    get:
      tags:
      - Partners/Notes
      summary: Get all notes for a partner
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a partner note by ID. Finder Variables:<ul><li>NoteId; integer; The ID associated with a note.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-notes'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-notes-get
    post:
      tags:
      - Partners/Notes
      summary: Create a note for a partner
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partners-notes-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-notes-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-notes-post
  /salesApi/resources/latest/partners/{CompanyNumber}/child/notes/{NoteId}:
    get:
      tags:
      - Partners/Notes
      summary: Get a note for a partner
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: NoteId
        in: path
        description: The unique note identifier.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-notes-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-notes-{NoteId}-get
    delete:
      tags:
      - Partners/Notes
      summary: Delete a note for a partner
      description: ""
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: NoteId
        in: path
        description: The unique note identifier.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-notes-{NoteId}-delete
    patch:
      tags:
      - Partners/Notes
      summary: Update a note for a partner
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: NoteId
        in: path
        description: The unique note identifier.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partners-notes-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-notes-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-notes-{NoteId}-patch
  /salesApi/resources/latest/partners/{CompanyNumber}/child/productSpecialities:
    get:
      tags:
      - Partners/Focus Areas
      summary: Get all product specialties for a partner
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a partner product specialty by ID. Finder Variables:<ul><li>PartnerDimMembersId; integer; The ID associated with a product specialty.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-productSpecialities'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-productSpecialities-get
    post:
      tags:
      - Partners/Focus Areas
      summary: Create a product specialty for a partner
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partners-productSpecialities-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-productSpecialities-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-productSpecialities-post
  /salesApi/resources/latest/partners/{CompanyNumber}/child/productSpecialities/{PartnerDimMembersId}:
    get:
      tags:
      - Partners/Focus Areas
      summary: Get a product specialty for a partner
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartnerDimMembersId
        in: path
        description: The unique identifier of the specialty with the partner.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-productSpecialities-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-productSpecialities-{PartnerDimMembersId}-get
    delete:
      tags:
      - Partners/Focus Areas
      summary: Delete a product specialty for a partner
      description: ""
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: PartnerDimMembersId
        in: path
        description: The unique identifier of the specialty with the partner.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-productSpecialities-{PartnerDimMembersId}-delete
  /salesApi/resources/latest/partners/{CompanyNumber}/child/types:
    get:
      tags:
      - Partners/Partner Types
      summary: Get all partner types
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-types'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-types-get
    post:
      tags:
      - Partners/Partner Types
      summary: Create a partner type
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partners-types-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-types-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-types-post
  /salesApi/resources/latest/partners/{CompanyNumber}/child/types/{typesUniqID}:
    get:
      tags:
      - Partners/Partner Types
      summary: Get a partner type
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: typesUniqID
        in: path
        description: Identifier to Partner Types
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partners-types-item'
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-types-{typesUniqID}-get
    delete:
      tags:
      - Partners/Partner Types
      summary: Delete a partner type
      description: ""
      parameters:
      - name: CompanyNumber
        in: path
        description: The partner's company number.
        required: true
        type: string
      - name: typesUniqID
        in: path
        description: Identifier to Partner Types
        required: true
        type: string
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-partners-{CompanyNumber}-child-types-{typesUniqID}-delete
  /salesApi/resources/latest/partnerPrograms:
    get:
      tags:
      - Partner Programs
      summary: Get all partner programs
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>ProgramNumberRF: Finds a partner program using the program number. Finder Variables:<ul><li>ProgramNumber; string; The unique number generated for each program.</li></ul></li><li>PrimaryKey: Finds a partner program using the partner program ID. Finder Variables:<ul><li>PartnerProgramId; integer; The system-generated unique identifier and primary key of the partner program.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerPrograms'
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-get
    post:
      tags:
      - Partner Programs
      summary: Create a partner program
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partnerPrograms-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerPrograms-item'
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-post
  /salesApi/resources/latest/partnerPrograms/{ProgramNumber}:
    get:
      tags:
      - Partner Programs
      summary: Get a partner program
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ProgramNumber
        in: path
        description: The unique number generated for each program.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerPrograms-item'
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-{ProgramNumber}-get
    delete:
      tags:
      - Partner Programs
      summary: Delete a partner program
      description: ""
      parameters:
      - name: ProgramNumber
        in: path
        description: The unique number generated for each program.
        required: true
        type: string
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-{ProgramNumber}-delete
    patch:
      tags:
      - Partner Programs
      summary: Update a partner program
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ProgramNumber
        in: path
        description: The unique number generated for each program.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partnerPrograms-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerPrograms-item'
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-{ProgramNumber}-patch
  /salesApi/resources/latest/partnerPrograms/{ProgramNumber}/child/PartnerProgramCountries:
    get:
      tags:
      - Partner Programs/Countries
      summary: Get all countries for a partner program
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: ProgramNumber
        in: path
        description: The unique number generated for each program.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a country assigned to a partner program using the program country ID. Finder Variables:<ul><li>ProgramCountryId; integer; The system-generated unique identifier and primary key for the program country.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerPrograms-PartnerProgramCountries'
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-{ProgramNumber}-child-PartnerProgramCountries-get
    post:
      tags:
      - Partner Programs/Countries
      summary: Create a country for a partner program
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ProgramNumber
        in: path
        description: The unique number generated for each program.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partnerPrograms-PartnerProgramCountries-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerPrograms-PartnerProgramCountries-item'
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-{ProgramNumber}-child-PartnerProgramCountries-post
  /salesApi/resources/latest/partnerPrograms/{ProgramNumber}/child/PartnerProgramCountries/{ProgramCountryId}:
    get:
      tags:
      - Partner Programs/Countries
      summary: Get a country for a partner program
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ProgramNumber
        in: path
        description: The unique number generated for each program.
        required: true
        type: string
      - name: ProgramCountryId
        in: path
        description: The system-generated unique identifier and primary key for the program country.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerPrograms-PartnerProgramCountries-item'
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-{ProgramNumber}-child-PartnerProgramCountries-{ProgramCountryId}-get
    delete:
      tags:
      - Partner Programs/Countries
      summary: Delete a country from a partner program
      description: ""
      parameters:
      - name: ProgramNumber
        in: path
        description: The unique number generated for each program.
        required: true
        type: string
      - name: ProgramCountryId
        in: path
        description: The system-generated unique identifier and primary key for the program country.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-{ProgramNumber}-child-PartnerProgramCountries-{ProgramCountryId}-delete
    patch:
      tags:
      - Partner Programs/Countries
      summary: Update a country for a partner program
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ProgramNumber
        in: path
        description: The unique number generated for each program.
        required: true
        type: string
      - name: ProgramCountryId
        in: path
        description: The system-generated unique identifier and primary key for the program country.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partnerPrograms-PartnerProgramCountries-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerPrograms-PartnerProgramCountries-item'
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-{ProgramNumber}-child-PartnerProgramCountries-{ProgramCountryId}-patch
  /salesApi/resources/latest/partnerPrograms/{ProgramNumber}/child/ProgramBenefitDetails:
    get:
      tags:
      - Partner Programs/Program Benefit Details
      summary: Get all program benefits for a partner program
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: ProgramNumber
        in: path
        description: The unique number generated for each program.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds details of a program tier benefit within a partner program using the program benefit detail ID. Finder Variables:<ul><li>ProgramBenefitDetailId; integer; The system-generated unique identifier and primary key of the program tier benefit.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerPrograms-ProgramBenefitDetails'
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-{ProgramNumber}-child-ProgramBenefitDetails-get
    post:
      tags:
      - Partner Programs/Program Benefit Details
      summary: Create a program benefit for a partner program
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ProgramNumber
        in: path
        description: The unique number generated for each program.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partnerPrograms-ProgramBenefitDetails-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerPrograms-ProgramBenefitDetails-item'
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-{ProgramNumber}-child-ProgramBenefitDetails-post
  /salesApi/resources/latest/partnerPrograms/{ProgramNumber}/child/ProgramBenefitDetails/{ProgramBenefitDetailId}:
    get:
      tags:
      - Partner Programs/Program Benefit Details
      summary: Get a program benefit for a partner program
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ProgramNumber
        in: path
        description: The unique number generated for each program.
        required: true
        type: string
      - name: ProgramBenefitDetailId
        in: path
        description: The system-generated unique identifier and primary key of the program tier benefit.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerPrograms-ProgramBenefitDetails-item'
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-{ProgramNumber}-child-ProgramBenefitDetails-{ProgramBenefitDetailId}-get
    delete:
      tags:
      - Partner Programs/Program Benefit Details
      summary: Delete a program benefit from a partner program
      description: ""
      parameters:
      - name: ProgramNumber
        in: path
        description: The unique number generated for each program.
        required: true
        type: string
      - name: ProgramBenefitDetailId
        in: path
        description: The system-generated unique identifier and primary key of the program tier benefit.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-{ProgramNumber}-child-ProgramBenefitDetails-{ProgramBenefitDetailId}-delete
    patch:
      tags:
      - Partner Programs/Program Benefit Details
      summary: Update a program benefit for a partner program
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ProgramNumber
        in: path
        description: The unique number generated for each program.
        required: true
        type: string
      - name: ProgramBenefitDetailId
        in: path
        description: The system-generated unique identifier and primary key of the program tier benefit.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partnerPrograms-ProgramBenefitDetails-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerPrograms-ProgramBenefitDetails-item'
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-{ProgramNumber}-child-ProgramBenefitDetails-{ProgramBenefitDetailId}-patch
  /salesApi/resources/latest/partnerPrograms/{ProgramNumber}/child/ProgramTiers:
    get:
      tags:
      - Partner Programs/Tiers
      summary: Get all tiers for a partner program
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: ProgramNumber
        in: path
        description: The unique number generated for each program.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a tier assigned to a partner program using the tier ID. Finder Variables:<ul><li>ProgramTierId; integer; The unique identifier for a program tier added to a program.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerPrograms-ProgramTiers'
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-{ProgramNumber}-child-ProgramTiers-get
    post:
      tags:
      - Partner Programs/Tiers
      summary: Create a tier for a partner program
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ProgramNumber
        in: path
        description: The unique number generated for each program.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partnerPrograms-ProgramTiers-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerPrograms-ProgramTiers-item'
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-{ProgramNumber}-child-ProgramTiers-post
  /salesApi/resources/latest/partnerPrograms/{ProgramNumber}/child/ProgramTiers/{ProgramTierId}:
    get:
      tags:
      - Partner Programs/Tiers
      summary: Get a tier for a partner program
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ProgramNumber
        in: path
        description: The unique number generated for each program.
        required: true
        type: string
      - name: ProgramTierId
        in: path
        description: The unique identifier for a program tier added to a program.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerPrograms-ProgramTiers-item'
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-{ProgramNumber}-child-ProgramTiers-{ProgramTierId}-get
    delete:
      tags:
      - Partner Programs/Tiers
      summary: Delete a tier from a partner program
      description: ""
      parameters:
      - name: ProgramNumber
        in: path
        description: The unique number generated for each program.
        required: true
        type: string
      - name: ProgramTierId
        in: path
        description: The unique identifier for a program tier added to a program.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-{ProgramNumber}-child-ProgramTiers-{ProgramTierId}-delete
    patch:
      tags:
      - Partner Programs/Tiers
      summary: Update a tier for a partner program
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ProgramNumber
        in: path
        description: The unique number generated for each program.
        required: true
        type: string
      - name: ProgramTierId
        in: path
        description: The unique identifier for a program tier added to a program.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partnerPrograms-ProgramTiers-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerPrograms-ProgramTiers-item'
      x-internal-id: salesApi-resources-11.12.1.0-partnerPrograms-{ProgramNumber}-child-ProgramTiers-{ProgramTierId}-patch
  /salesApi/resources/latest/activities:
    get:
      tags:
      - Activities
      summary: Get all activities
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>MyAppointmentsInDateRange: Finds appointments within a data range. Finder Variables:<ul><li>EndDtRFAttr; string; Finds the appointment end date.</li><li>StartDtRFAttr; string; Finds the appointment start date.</li></ul></li><li>MyOpenTasks: Finds tasks in an open status. Finder Variables:<ul><li>Bind_LoggedInUserId_BV; integer; The ID of the user who is logged into the application.</li><li>Bind_TaskActFuncCd_BV; string; The activities with a function code of task.</li><li>Bind_TaskStatus_BV; string; The status of the task.</li><li>Bind_TaskStatus_Cancel_BV; string; The tasks with a cancelled status.</li></ul></li><li>MyCallReportsInDateRange: Finds call reports within a date range. Finder Variables:<ul><li>EndDtRFAttr; string; The end date of the call reports.</li><li>StartDtRFAttr; string; The start date of the call report.</li><li>oracle.apps.crmCommon.activities.publicModel.activityManagement.util.ActivityUtil.getLoggedInUserId(); integer; The ID of the user who is logged into the application.</li></ul></li><li>MyOpenActivities: Finds all open activities owned by a specified user.</li><li>OverdueTasks: Finds tasks with a due date in the past. Finder Variables:<ul><li>Bind_CurrentDate; string; The date used to locate current activities.</li><li>Bind_CurrentUPTZDate; string; The date used to locate the Tasks whose due date is before the current date.</li><li>Bind_LoggedInUserId_BV; integer; The ID of the user who is logged into the application.</li><li>Bind_TaskActFuncCd_BV; string; The activities with a function code of task.</li><li>Bind_TaskStatus_BV; string; The status of the tasks.</li><li>Bind_TaskStatus_Cancel_BV; string; The tasks with a cancelled status.</li></ul></li><li>GetListOfCallReportsForPastAppt: Finds call reports related to a past appointment. Finder Variables:<ul><li>ParentActivityIdAttr; string; The parent activity ID related to the call reports.</li></ul></li><li>MyActivitiesAsResource: Finds activities where a specified user is a resource. Finder Variables:<ul><li>Bind_RecurSeriesType_BV; string; The recurring type code of an appointment</li><li>Bind_UserResourceId; integer; Finds the resource ID of the user.</li></ul></li><li>OpenTasksByHighPriority: Finds tasks with a priority value of high. Finder Variables:<ul><li>Bind_LoggedInUserId_BV; integer; The ID of the user who is logged into the application.</li><li>Bind_TaskActFuncCd_BV; string; The activities with a function code of task.</li><li>Bind_TaskPriority_BV; string; The priority of the task.</li><li>Bind_TaskStatus_BV; string; The status of the task.</li><li>Bind_TaskStatus_Cancel_BV; string; The tasks with a cancelled status.</li></ul></li><li>CompletedActivities: Finds activities in a completed status. Finder Variables:<ul><li>Bind_CurrentDate; string; Finds the date used to locate completed activities.</li><li>Bind_RecurSeriesType_BV; string; The recurring type code of an appointment</li><li>Bind_TaskActFuncCd_BV; string; The activities with a function code of task.</li><li>Bind_TaskStatus_BV; string; The status of the tasks.</li></ul></li><li>GetListOfCallReports: Finds call reports. Finder Variables:<ul><li>AccountIdAttr; integer; Finds the account ID related to the call reports.</li><li>EndDtRFAttr; string; Finds the end date of the call report.</li><li>LeadIdAttr; string; Finds the lead ID related to the call reports.</li><li>OpportunityIdAttr; string; Finds the opportunity ID related to the call reports.</li><li>StartDtRFAttr; string; Finds the start date of the call report.</li></ul></li><li>MyTasks: Finds tasks owned by a specified user. Finder Variables:<ul><li>Bind_LoggedInUserId_BV; integer; Finds the ID of the user who is logged into the application.</li><li>Bind_TaskActFuncCd_BV; string; The activities with a function code of task.</li></ul></li><li>OpenActivities: Finds all open activities. Finder Variables:<ul><li>Bind_CurrentDate; string; Finds the date used to locate current activities.</li><li>Bind_RecurSeriesType_BV; string; The recurring type code of an appointment</li><li>Bind_TaskActFuncCd_BV; string; The activities with a function code of task.</li><li>Bind_TaskStatus_BV; string; The status of the tasks.</li><li>Bind_TaskStatus_Cancel_BV; string; The tasks with a cancelled status.</li></ul></li><li>AppointmentsWithNoMyCallReport: Finds appointments not having an associated call report. Finder Variables:<ul><li>DateRange; integer; </li><li>EndDtRFAttr; string; The appointment end date.</li><li>StartDtRFAttr; string; The appointment start date.</li></ul></li><li>ActivitesByContactId: Finds activities where a specified contact is defined. Finder Variables:<ul><li>ContactIDAttr; integer; The contact ID related to the activities.</li></ul></li><li>GetActivitiesByActivityNumber: Finds activities with the specified activity number. Finder Variables:<ul><li>ActivityNumber; string; Finds the activity number use to locate the activity.</li></ul></li><li>PrimaryKey: Finds the activity with the specified primary key identifier. Finder Variables:<ul><li>ActivityId; integer; The unique identifier of the activity.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities'
      x-internal-id: salesApi-resources-11.12.1.0-activities-get
    post:
      tags:
      - Activities
      summary: Create an activity
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/activities-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-item'
      x-internal-id: salesApi-resources-11.12.1.0-activities-post
  /salesApi/resources/latest/activities/{ActivityNumber}:
    get:
      tags:
      - Activities
      summary: Get an activity
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-item'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-get
    delete:
      tags:
      - Activities
      summary: Delete an activity
      description: ""
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-delete
    patch:
      tags:
      - Activities
      summary: Update an activity
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/activities-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-item'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-patch
  /salesApi/resources/latest/activities/{ActivityNumber}/child/ActivityAssignee:
    get:
      tags:
      - Activities/Activity Assignees
      summary: Get all activity assignees
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds the Activity Assignee with the specified primary key identifier. Finder Variables:<ul><li>ActivityId; integer; The unique identifier of the Parent activity.</li><li>AssigneeId; integer; The unique identifier of the assignee associated with the activity.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-ActivityAssignee'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-ActivityAssignee-get
    post:
      tags:
      - Activities/Activity Assignees
      summary: Create an activity assignee
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/activities-ActivityAssignee-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-ActivityAssignee-item'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-ActivityAssignee-post
  /salesApi/resources/latest/activities/{ActivityNumber}/child/ActivityAssignee/{ActivityAssigneeUniqID}:
    get:
      tags:
      - Activities/Activity Assignees
      summary: Get an activity assignee
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: ActivityAssigneeUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- ActivityId and AssigneeId ---for the Activity Assignees resource and used to uniquely identify an instance of Activity Assignees. The client should not generate the hash key value.  Instead, the client should query on the Activity Assignees collection resource with a filter on the primary key values in order to navigate to a specific instance of Activity Assignees.<br><br>For example: ActivityAssignee?q=ActivityId=&lt;value1&gt;;AssigneeId=&lt;value2&gt;'
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-ActivityAssignee-item'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-ActivityAssignee-{ActivityAssigneeUniqID}-get
    delete:
      tags:
      - Activities/Activity Assignees
      summary: Delete an activity assignee
      description: ""
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: ActivityAssigneeUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- ActivityId and AssigneeId ---for the Activity Assignees resource and used to uniquely identify an instance of Activity Assignees. The client should not generate the hash key value.  Instead, the client should query on the Activity Assignees collection resource with a filter on the primary key values in order to navigate to a specific instance of Activity Assignees.<br><br>For example: ActivityAssignee?q=ActivityId=&lt;value1&gt;;AssigneeId=&lt;value2&gt;'
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-ActivityAssignee-{ActivityAssigneeUniqID}-delete
    patch:
      tags:
      - Activities/Activity Assignees
      summary: Update an activity assignee
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: ActivityAssigneeUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- ActivityId and AssigneeId ---for the Activity Assignees resource and used to uniquely identify an instance of Activity Assignees. The client should not generate the hash key value.  Instead, the client should query on the Activity Assignees collection resource with a filter on the primary key values in order to navigate to a specific instance of Activity Assignees.<br><br>For example: ActivityAssignee?q=ActivityId=&lt;value1&gt;;AssigneeId=&lt;value2&gt;'
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/activities-ActivityAssignee-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-ActivityAssignee-item'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-ActivityAssignee-{ActivityAssigneeUniqID}-patch
  /salesApi/resources/latest/activities/{ActivityNumber}/child/ActivityContact:
    get:
      tags:
      - Activities/Activity Contacts
      summary: Get all activity contacts
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds the Activity Contact with the specified primary key identifier. Finder Variables:<ul><li>ActivityId; integer; The unique identifier of the Parent activity.</li><li>ContactId; integer; The unique identifier of the contact associated with the activity.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-ActivityContact'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-ActivityContact-get
    post:
      tags:
      - Activities/Activity Contacts
      summary: Create an activity contact
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/activities-ActivityContact-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-ActivityContact-item'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-ActivityContact-post
  /salesApi/resources/latest/activities/{ActivityNumber}/child/ActivityContact/{ActivityContactUniqID}:
    get:
      tags:
      - Activities/Activity Contacts
      summary: Get an activity contact
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: ActivityContactUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- ActivityId and ContactId ---for the Activity Contacts resource and used to uniquely identify an instance of Activity Contacts. The client should not generate the hash key value.  Instead, the client should query on the Activity Contacts collection resource with a filter on the primary key values in order to navigate to a specific instance of Activity Contacts.<br><br>For example: ActivityContact?q=ActivityId=&lt;value1&gt;;ContactId=&lt;value2&gt;'
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-ActivityContact-item'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-ActivityContact-{ActivityContactUniqID}-get
    delete:
      tags:
      - Activities/Activity Contacts
      summary: Delete an activity contact
      description: ""
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: ActivityContactUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- ActivityId and ContactId ---for the Activity Contacts resource and used to uniquely identify an instance of Activity Contacts. The client should not generate the hash key value.  Instead, the client should query on the Activity Contacts collection resource with a filter on the primary key values in order to navigate to a specific instance of Activity Contacts.<br><br>For example: ActivityContact?q=ActivityId=&lt;value1&gt;;ContactId=&lt;value2&gt;'
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-ActivityContact-{ActivityContactUniqID}-delete
    patch:
      tags:
      - Activities/Activity Contacts
      summary: Update an activity contact
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: ActivityContactUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- ActivityId and ContactId ---for the Activity Contacts resource and used to uniquely identify an instance of Activity Contacts. The client should not generate the hash key value.  Instead, the client should query on the Activity Contacts collection resource with a filter on the primary key values in order to navigate to a specific instance of Activity Contacts.<br><br>For example: ActivityContact?q=ActivityId=&lt;value1&gt;;ContactId=&lt;value2&gt;'
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/activities-ActivityContact-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-ActivityContact-item'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-ActivityContact-{ActivityContactUniqID}-patch
  /salesApi/resources/latest/activities/{ActivityNumber}/child/ActivityObjectives:
    get:
      tags:
      - Activities/Activity Objectives
      summary: Get all activity objectives
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds the Activity Objective with the specified primary key identifier. Finder Variables:<ul><li>ObjectiveId; integer; The unique identifier of the objective.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-ActivityObjectives'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-ActivityObjectives-get
    post:
      tags:
      - Activities/Activity Objectives
      summary: Create an activity objective
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/activities-ActivityObjectives-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-ActivityObjectives-item'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-ActivityObjectives-post
  /salesApi/resources/latest/activities/{ActivityNumber}/child/ActivityObjectives/{ObjectiveId}:
    get:
      tags:
      - Activities/Activity Objectives
      summary: Get an activity objective
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: ObjectiveId
        in: path
        description: The unique identifier of the objective.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-ActivityObjectives-item'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-ActivityObjectives-{ObjectiveId}-get
    delete:
      tags:
      - Activities/Activity Objectives
      summary: Delete an activity objective
      description: ""
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: ObjectiveId
        in: path
        description: The unique identifier of the objective.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-ActivityObjectives-{ObjectiveId}-delete
    patch:
      tags:
      - Activities/Activity Objectives
      summary: Update an activity objective
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: ObjectiveId
        in: path
        description: The unique identifier of the objective.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/activities-ActivityObjectives-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-ActivityObjectives-item'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-ActivityObjectives-{ObjectiveId}-patch
  /salesApi/resources/latest/activities/{ActivityNumber}/child/Attachments:
    get:
      tags:
      - Activities/Activity Attachments
      summary: Get all activity attachments
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-Attachments'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-Attachments-get
    post:
      tags:
      - Activities/Activity Attachments
      summary: Create an activity attachment
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/activities-Attachments-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-Attachments-item'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-Attachments-post
  /salesApi/resources/latest/activities/{ActivityNumber}/child/Attachments/{AttachmentsUniqID}:
    get:
      tags:
      - Activities/Activity Attachments
      summary: Get an activity attachment
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: AttachmentsUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Activity Attachments resource and used to uniquely identify an instance of Activity Attachments. The client should not generate the hash key value.  Instead, the client should query on the Activity Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Activity Attachments.<br><br>For example: Attachments?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-Attachments-item'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-Attachments-{AttachmentsUniqID}-get
    delete:
      tags:
      - Activities/Activity Attachments
      summary: Delete an activity attachment
      description: ""
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: AttachmentsUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Activity Attachments resource and used to uniquely identify an instance of Activity Attachments. The client should not generate the hash key value.  Instead, the client should query on the Activity Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Activity Attachments.<br><br>For example: Attachments?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-Attachments-{AttachmentsUniqID}-delete
    patch:
      tags:
      - Activities/Activity Attachments
      summary: Update an activity attachment
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: AttachmentsUniqID
        in: path
        description: 'This is the hash key of the attributes which make up the composite key--- AttachedDocumentId and DocumentId1 ---for the Activity Attachments resource and used to uniquely identify an instance of Activity Attachments. The client should not generate the hash key value.  Instead, the client should query on the Activity Attachments collection resource with a filter on the primary key values in order to navigate to a specific instance of Activity Attachments.<br><br>For example: Attachments?q=AttachedDocumentId=&lt;value1&gt;;DocumentId1=&lt;value2&gt;'
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/activities-Attachments-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-Attachments-item'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-Attachments-{AttachmentsUniqID}-patch
  /salesApi/resources/latest/activities/{ActivityNumber}/child/Note:
    get:
      tags:
      - Activities/Notes
      summary: Get all activity notes
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds the note with the specified primary key identifier. Finder Variables:<ul><li>NoteId; integer; The unique identifier of the note.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-Note'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-Note-get
    post:
      tags:
      - Activities/Notes
      summary: Create an activity note
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/activities-Note-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-Note-item'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-Note-post
  /salesApi/resources/latest/activities/{ActivityNumber}/child/Note/{NoteId}:
    get:
      tags:
      - Activities/Notes
      summary: Get an activity note
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: NoteId
        in: path
        description: The unique note identifier.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-Note-item'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-Note-{NoteId}-get
    delete:
      tags:
      - Activities/Notes
      summary: Delete an activity note
      description: ""
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: NoteId
        in: path
        description: The unique note identifier.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-Note-{NoteId}-delete
    patch:
      tags:
      - Activities/Notes
      summary: Update an activity note
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ActivityNumber
        in: path
        description: The unique number of the activity. The number can also be generated from an external source.
        required: true
        type: string
      - name: NoteId
        in: path
        description: The unique note identifier.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/activities-Note-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/activities-Note-item'
      x-internal-id: salesApi-resources-11.12.1.0-activities-{ActivityNumber}-child-Note-{NoteId}-patch
  /serviceApi/resources/latest/categories:
    get:
      tags:
      - Categories
      summary: Get all catagories
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds a category by category number. Finder Variables:<ul><li>CategoryId; integer; The unique identifier of the category.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/categories'
      x-internal-id: serviceApi-resources-11.12.1.0-categories-get
    post:
      tags:
      - Categories
      summary: Create a category
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/categories-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/categories-item'
      x-internal-id: serviceApi-resources-11.12.1.0-categories-post
  /serviceApi/resources/latest/categories/{CategoryId}:
    get:
      tags:
      - Categories
      summary: Get a category
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CategoryId
        in: path
        description: The unique identifier of the category.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/categories-item'
      x-internal-id: serviceApi-resources-11.12.1.0-categories-{CategoryId}-get
    delete:
      tags:
      - Categories
      summary: Delete a category
      description: ""
      parameters:
      - name: CategoryId
        in: path
        description: The unique identifier of the category.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: serviceApi-resources-11.12.1.0-categories-{CategoryId}-delete
    patch:
      tags:
      - Categories
      summary: Update a category
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: CategoryId
        in: path
        description: The unique identifier of the category.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/categories-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/categories-item'
      x-internal-id: serviceApi-resources-11.12.1.0-categories-{CategoryId}-patch
  /salesApi/resources/latest/partnerProgramBenefits:
    get:
      tags:
      - Program Benefits
      summary: Get all program benefits
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds the program benefit by the specified primary key. Finder Variables:<ul><li>ProgramBenefitId; integer; The system-generated unique identifier and primary key of the benefit.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerProgramBenefits'
      x-internal-id: salesApi-resources-11.12.1.0-partnerProgramBenefits-get
    post:
      tags:
      - Program Benefits
      summary: Create a program benefit
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partnerProgramBenefits-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerProgramBenefits-item'
      x-internal-id: salesApi-resources-11.12.1.0-partnerProgramBenefits-post
  /salesApi/resources/latest/partnerProgramBenefits/{ProgramBenefitId}:
    get:
      tags:
      - Program Benefits
      summary: Get a program benefit
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ProgramBenefitId
        in: path
        description: The system-generated unique identifier and primary key of the benefit.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerProgramBenefits-item'
      x-internal-id: salesApi-resources-11.12.1.0-partnerProgramBenefits-{ProgramBenefitId}-get
    delete:
      tags:
      - Program Benefits
      summary: Delete a program benefit
      description: ""
      parameters:
      - name: ProgramBenefitId
        in: path
        description: The system-generated unique identifier and primary key of the benefit.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-partnerProgramBenefits-{ProgramBenefitId}-delete
    patch:
      tags:
      - Program Benefits
      summary: Update a program benefit
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ProgramBenefitId
        in: path
        description: The system-generated unique identifier and primary key of the benefit.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partnerProgramBenefits-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerProgramBenefits-item'
      x-internal-id: salesApi-resources-11.12.1.0-partnerProgramBenefits-{ProgramBenefitId}-patch
  /salesApi/resources/latest/partnerProgramBenefits/{ProgramBenefitId}/child/BenefitListTypeValues:
    get:
      tags:
      - Program Benefits/Benefit List Values
      summary: Get all benefit list type values
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: ProgramBenefitId
        in: path
        description: The system-generated unique identifier and primary key of the benefit.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;<br><br>The following are the available finder names and corresponding finder variables:<br><br><ul><li>PrimaryKey: Finds the benefit list type values for a program benefit by the specified primary key. Finder Variables:<ul><li>BenefitListTypeValId; integer; The system-generated unique identifier and primary key of the benefit.</li></ul></li></ul>'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerProgramBenefits-BenefitListTypeValues'
      x-internal-id: salesApi-resources-11.12.1.0-partnerProgramBenefits-{ProgramBenefitId}-child-BenefitListTypeValues-get
    post:
      tags:
      - Program Benefits/Benefit List Values
      summary: Create a benefit list type value
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ProgramBenefitId
        in: path
        description: The system-generated unique identifier and primary key of the benefit.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partnerProgramBenefits-BenefitListTypeValues-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerProgramBenefits-BenefitListTypeValues-item'
      x-internal-id: salesApi-resources-11.12.1.0-partnerProgramBenefits-{ProgramBenefitId}-child-BenefitListTypeValues-post
  /salesApi/resources/latest/partnerProgramBenefits/{ProgramBenefitId}/child/BenefitListTypeValues/{BenefitListTypeValId}:
    get:
      tags:
      - Program Benefits/Benefit List Values
      summary: Get a benefit list type value
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ProgramBenefitId
        in: path
        description: The system-generated unique identifier and primary key of the benefit.
        required: true
        type: integer
      - name: BenefitListTypeValId
        in: path
        description: The system-generated unique identifier and primary key of the benefit.
        required: true
        type: integer
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerProgramBenefits-BenefitListTypeValues-item'
      x-internal-id: salesApi-resources-11.12.1.0-partnerProgramBenefits-{ProgramBenefitId}-child-BenefitListTypeValues-{BenefitListTypeValId}-get
    delete:
      tags:
      - Program Benefits/Benefit List Values
      summary: Delete a benefit list type value
      description: ""
      parameters:
      - name: ProgramBenefitId
        in: path
        description: The system-generated unique identifier and primary key of the benefit.
        required: true
        type: integer
      - name: BenefitListTypeValId
        in: path
        description: The system-generated unique identifier and primary key of the benefit.
        required: true
        type: integer
      responses:
        "204":
          description: No content. This task does not return elements in the response body.
      x-internal-id: salesApi-resources-11.12.1.0-partnerProgramBenefits-{ProgramBenefitId}-child-BenefitListTypeValues-{BenefitListTypeValId}-delete
    patch:
      tags:
      - Program Benefits/Benefit List Values
      summary: Update a benefit list type value
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: ProgramBenefitId
        in: path
        description: The system-generated unique identifier and primary key of the benefit.
        required: true
        type: integer
      - name: BenefitListTypeValId
        in: path
        description: The system-generated unique identifier and primary key of the benefit.
        required: true
        type: integer
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/partnerProgramBenefits-BenefitListTypeValues-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/partnerProgramBenefits-BenefitListTypeValues-item'
      x-internal-id: salesApi-resources-11.12.1.0-partnerProgramBenefits-{ProgramBenefitId}-child-BenefitListTypeValues-{BenefitListTypeValId}-patch
  /salesApi/resources/latest/products:
    get:
      tags:
      - Products
      summary: Get all products
      description: ""
      produces:
      - application/vnd.oracle.adf.resourcecollection+json
      parameters:
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      - name: limit
        in: query
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
        required: false
        type: integer
      - name: offset
        in: query
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
        required: false
        type: integer
      - name: totalResults
        in: query
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
        required: false
        type: boolean
      - name: q
        in: query
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
        required: false
        type: string
      - name: orderBy
        in: query
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
        required: false
        type: string
      - name: finder
        in: query
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/products'
      x-internal-id: salesApi-resources-11.12.1.0-products-get
    post:
      tags:
      - Products
      summary: Create a product
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/products-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/products-item'
      x-internal-id: salesApi-resources-11.12.1.0-products-post
  /salesApi/resources/latest/products/{productsUniqID}:
    get:
      tags:
      - Products
      summary: Get a product
      description: ""
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: productsUniqID
        in: path
        description: Identifier to Products
        required: true
        type: string
      - name: expand
        in: query
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
        required: false
        type: string
      - name: fields
        in: query
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
        required: false
        type: string
      - name: onlyData
        in: query
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
        required: false
        type: boolean
      - name: dependency
        in: query
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
        required: false
        type: string
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/products-item'
      x-internal-id: salesApi-resources-11.12.1.0-products-{productsUniqID}-get
    patch:
      tags:
      - Products
      summary: Update a product
      description: ""
      consumes:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      produces:
      - application/vnd.oracle.adf.resourceitem+json
      - application/json
      parameters:
      - name: productsUniqID
        in: path
        description: Identifier to Products
        required: true
        type: string
      - in: body
        name: request
        description: The following table describes the body parameters in the request for this task.
        required: false
        schema:
          $ref: '#/definitions/products-item'
      responses:
        default:
          description: The following table describes the default response for this task.
          schema:
            $ref: '#/definitions/products-item'
      x-internal-id: salesApi-resources-11.12.1.0-products-{productsUniqID}-patch
definitions:
  collectionQuery:
    type: object
    properties:
      dependency:
        type: string
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
      expand:
        type: string
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
      fields:
        type: string
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
      finder:
        type: string
        description: 'Used as a predefined finder to search the collection.<br><br>Format: ?finder=&lt;finderName&gt;;&lt;variableName&gt;=&lt;variableValue&gt;,&lt;variableName2&gt;=&lt;variableValue2&gt;'
      limit:
        type: integer
        description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
      offset:
        type: integer
        description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
      onlyData:
        type: boolean
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
      orderBy:
        type: string
        description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
      q:
        type: string
        description: 'This query parameter defines the where clause. The resource collection will be queried using the provided expressions. The value of this query parameter is one or more expressions. Example: ?q=Deptno&gt;=10 and &lt;= 30;Loc!=NY <br><br>Format: ?q=expression1;expression2'
      totalResults:
        type: boolean
        description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
  link:
    type: object
    properties:
      href:
        type: string
        description: The URI to the related resource.
        title: hyperlink reference
      rel:
        type: string
        description: 'The name of the relation to the resource instance.  Example: self.'
        title: relation
  sourcecodes:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/sourcecodes-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  sourcecodes-item:
    type: object
    properties:
      ActiveFlag:
        type: string
        description: Indicates whether the source code record is active or inactive. If the value is True, then the source code is active. The default value is True.
        title: Active
        maxLength: 1
      CampaignId:
        type: integer
        format: int64
        description: The unique identifier of the campaign associated with the source code record.
        title: Campaign ID
      CampaignName:
        type: string
        description: The name of the campaign associated with the source code record.
        title: Campaign
        maxLength: 250
      CampaignUsage:
        type: string
        description: The type of the campaign associated with the source code record.
        title: Campaign Type
        maxLength: 30
      CreatedBy:
        type: string
        description: The user who created the source code record.
        title: Created By
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time when the source code record was created.
        title: Creation Date
      LastUpdateDate:
        type: string
        format: date-time
        description: The date and time when the source code record was last updated.
        title: Last Updated Date
      LastUpdateLogin:
        type: string
        description: The login of the user who last updated the record.
        title: Last Updated Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the source code record.
        title: Last Updated By
        maxLength: 64
      ObjectVersionNumber:
        type: integer
        format: int32
        description: The number used to implement optimistic locking. This number is incremented every time that the row is updated. The number is compared at the start and end of a transaction to determine whether another session has updated the row.
        title: Object Version Number
      SourceCode:
        type: string
        description: The source code that represents the record.
        title: Source Code
        maxLength: 100
      SourceCodeId:
        type: integer
        format: int64
        description: The unique identifier of the source code record.
        title: Source Code ID
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  squery:
    type: object
    properties:
      dependency:
        type: string
        description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
      expand:
        type: string
        description: 'When this parameter is provided, the specified children are included in the resource payload (instead of just a link). The value of this query parameter is "all" or "". More than one child can be specified using comma as a separator. Example: ?expand=Employees,Localizations. Nested children can also be provided following the format "Child.NestedChild" (Example: ?expand=Employees.Managers). If a nested child is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?expand=Employees.Managers" is the same as "?expand=Employees,Employees.Managers" (which will expand Employees and Managers).'
      fields:
        type: string
        description: 'This parameter filters the resource attributes. Only the specified attributes are returned, which means that if no attributes are specified, no attributes are returned (useful to get only the links). If an indirect child resource is provided (Example: Employees.Managers), the missing children will be processed implicitly. For example, "?fields=Employees.Managers:Empname" is the same as "?fields=;Employees:;Employees.Managers:Empname" (which will only return the "Empname" field for Managers). the value of this query parameter is a list of resource attributes. The attribute can be a direct (Example: Employees) or indirect (Example: Employees.Managers) child. It cannot be combined with expand query parameter. If both are provided, only fields will be considered.<br><br>Format: ?fields=Attribute1,Attribute2<br><br>Format for fields in child resource: ?fields=Accessor1:Attribute1,Attribute2'
      onlyData:
        type: boolean
        description: The resource item payload will be filtered in order to contain only data (no links section, for example).
  setupSalesCatalogs:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/setupSalesCatalogs-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  setupSalesCatalogs-ProductGroupAttachments:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/setupSalesCatalogs-ProductGroupAttachments-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  setupSalesCatalogs-ProductGroupAttachments-item:
    type: object
    properties:
      CategoryName:
        type: string
        description: The category of the attachment.
        title: Category
        maxLength: 30
      ContentRepositoryFileShared:
        type: boolean
        description: Indicates whether the attachment is shared.
        title: Shared
      CreatedBy:
        type: string
        description: The user who created the attachment.
        maxLength: 255
      CreationDate:
        type: string
        format: date-time
        description: The date when the attachment record was created.
      DatatypeCode:
        type: string
        description: A value that indicates the data type.
        title: Type
        maxLength: 30
      Description:
        type: string
        description: The description of the attachment.
        title: Description
        maxLength: 255
      DmFolderPath:
        type: string
        description: The folder path of the attachment.
        maxLength: 1000
      ErrorStatusCode:
        type: string
        description: The error code, if any, for the attachment.
        title: Error Status Code
      ErrorStatusMessage:
        type: string
        description: The error message, if any, for the attachment.
        title: Error Status Message
      ExpirationDate:
        type: string
        format: date-time
        description: The expiration date of the contents in the attachment.
        title: Expiration Date
      FileContents:
        type: string
        format: binary
        description: The contents of the attachment.
        title: File Contents
      FileName:
        type: string
        description: The file name of the attachment.
        title: File Name
        maxLength: 2048
      FileUrl:
        type: string
        description: The URL of the attachment.
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the record was last updated.
        title: Last Update Date
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 255
      Title:
        type: string
        description: The title of the attachment.
        title: Title
      UploadedFileContentType:
        type: string
        description: The content type of the attachment.
      UploadedFileLength:
        type: integer
        format: int64
        description: The length of the attachment file.
      UploadedFileName:
        type: string
        description: The name of the attachment file.
      UploadedText:
        type: string
        description: The text of the attachment.
      Uri:
        type: string
        description: The URI of the attachment.
        title: Uri
        maxLength: 4000
      Url:
        type: string
        description: The URL of the attachment.
        maxLength: 4000
      UserName:
        type: string
        description: The login associated with the attachment.
        title: Category Name
        maxLength: 255
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  setupSalesCatalogs-ProductGroupAttributeSetup:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/setupSalesCatalogs-ProductGroupAttributeSetup-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  setupSalesCatalogs-ProductGroupAttributeSetup-ProductGroupAttributeValueSetup:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/setupSalesCatalogs-ProductGroupAttributeSetup-ProductGroupAttributeValueSetup-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  setupSalesCatalogs-ProductGroupAttributeSetup-ProductGroupAttributeValueSetup-item:
    type: object
    properties:
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: AttrValueText LOV
      description: 'The list of values indicating the attribute value text, based on the SetId passed, for each attribute value.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AttrValueText; Target Attribute: Value</li><li>Source Attribute: ValueId; Target Attribute: ValueId</li><li>Display Attribute: TranslatedValue</li></ul>'
      method: get
      href: /salesApi/resources/latest/setupSalesCatalogs/{ProdGroupId}/child/ProductGroupAttributeSetup/{ProdGrpAttrId}/child/ProductGroupAttributeValueSetup/{ProdGrpAtvalId}/lov/TranslatableIndependentValueSetValuePVO?fields=Value,ValueId,TranslatedValue
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          Value:
            type: string
            description: The translated value of the attribute, or AttributeValueText, based on the SetId passed.
          ValueId:
            type: integer
            description: The unique identifier of the attribute value setup associated with the product group attribute.
          TranslatedValue:
            type: string
            description: The translated value of the attribute, or AttributeValueText, based on the SetId passed.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - AttrValueText
      - ValueId
      effectiveMethod: get
  setupSalesCatalogs-ProductGroupAttributeSetup-item:
    type: object
    properties:
      ProductGroupAttributeValueSetup:
        description: The Filter Attribute Values resource is used to create, update, delete, and view the values of filter attributes associated with a product group. The examples of Filter Attribute values are Blue, Red for Color filter attribute.
        title: Filter Attribute Values
        $ref: '#/definitions/setupSalesCatalogs-ProductGroupAttributeSetup-ProductGroupAttributeValueSetup'
      ValueSetId:
        type: integer
        format: int64
        description: The set ID used for mapping to get AttrValueText from TranslatableIndependentValueSetValuePVO.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: AttributeOptionId LOV
      description: 'The list of values indicating the attribute option, used to get the attribute names.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AttributeOptionId; Target Attribute: AttributeOptionId</li><li>Display Attribute: InternalAttrName</li></ul>'
      method: get
      href: /salesApi/resources/latest/setupSalesCatalogs/{ProdGroupId}/child/ProductGroupAttributeSetup/{ProdGrpAttrId}/lov/ProductGroupAttributeOptionSetupVO?fields=AttributeOptionId,InternalAttrName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - AttributeOptionId
      effectiveMethod: get
  setupSalesCatalogs-ProductGroupProductSetup:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/setupSalesCatalogs-ProductGroupProductSetup-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  setupSalesCatalogs-ProductGroupProductSetup-item:
    type: object
    properties:
      Description:
        type: string
        description: The description of the item.
        title: Product
        maxLength: 240
      LongDescription:
        type: string
        description: The detailed description of the item.
        title: Description
        maxLength: 4000
      ProductNumber:
        type: string
        description: The name of the item.
        title: Product Number
        maxLength: 300
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  setupSalesCatalogs-ProductGroupRelationSetup:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/setupSalesCatalogs-ProductGroupRelationSetup-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  setupSalesCatalogs-ProductGroupRelationSetup-item:
    type: object
    properties:
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  setupSalesCatalogs-ProductGroupSubgroupAdministration:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/setupSalesCatalogs-ProductGroupSubgroupAdministration-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  setupSalesCatalogs-ProductGroupSubgroupAdministration-item:
    type: object
    properties:
      AllowDuplicateContentFlag:
        type: boolean
        description: Indicates whether a duplicate product or product group can be allowed in this product group hierarchy.
        title: Allow Duplicate Children
      RevenueCategoryCode:
        type: string
        description: The code for the revenue category associated with the product group.
        title: Revenue Category
        maxLength: 30
      RevenueRoleCode:
        type: string
        description: The code for the revenue role associated with the product group.
        title: Revenue Role
        maxLength: 30
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: RevenueCategoryCode LOV
      description: 'The list of values displayed for revenue category code in product groups sub group administration.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RevenueCategoryCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/setupSalesCatalogs/{ProdGroupId}/child/ProductGroupSubgroupAdministration/{ProdGroupId2}/lov/LookupPVOForRevenueCategoryCode?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RevenueCategoryCode
      effectiveMethod: get
    - rel: lov
      title: RevenueRoleCode LOV
      description: 'The list of values displayed for revenue role code in product groups sub group administration.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RevenueRoleCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/setupSalesCatalogs/{ProdGroupId}/child/ProductGroupSubgroupAdministration/{ProdGroupId2}/lov/LookupPVOForRevenueRoleCode?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RevenueRoleCode
      effectiveMethod: get
  setupSalesCatalogs-item:
    type: object
    properties:
      AttachmentEntityName:
        type: string
        description: The name of the attachment entity type.
        maxLength: 255
      DeleteFlag:
        type: boolean
        description: Indicates whether the sales catalog can be deleted.
      ProductGroupAttachments:
        description: The Attachments resource is used to add, delete, update and view the attachments associated with a product group. The attachments are typically used to associate images to the product groups so that you can identify the product groups visually in browse sales catalog.
        title: Attachments
        $ref: '#/definitions/setupSalesCatalogs-ProductGroupAttachments'
      ProductGroupAttributeSetup:
        description: The Filter Attributes resource is used to create, update, delete, and view the filter attributes associated with a product group. The examples of Filter Attributes are Color, Texture, and other such material properties.
        title: Filter Attributes
        $ref: '#/definitions/setupSalesCatalogs-ProductGroupAttributeSetup'
      ProductGroupLockedBy:
        type: string
        description: The name or ID of the user who locked the product group.
      ProductGroupLockedDate:
        type: string
        description: The date when the product group was locked.
      ProductGroupLockedFlag:
        type: boolean
        description: Indicates whether the product group is locked or not.
      ProductGroupProductSetup:
        description: The Products resource is used to create, update, delete, and view the product association to a product group. Typically products are associated to the leaf most nodes of the product group hierarchy. These products are sourced from items defined in Product Information Management.
        title: Products
        $ref: '#/definitions/setupSalesCatalogs-ProductGroupProductSetup'
      ProductGroupRelationSetup:
        description: The Related Groups resource is used to create, update, delete, and view the association between sub product groups and parent product groups. While the Subgroups resource can be used to create or update the product group to sub group association, the deletion of such association can only be done using the Related Groups resource.
        title: Related Groups
        $ref: '#/definitions/setupSalesCatalogs-ProductGroupRelationSetup'
      ProductGroupSubgroupAdministration:
        description: The Subgroups resources is used to create, delete, update, and view the association of a sub product group to a parent product group so that a hierarchy of product groups can be built. Additionally this resource can also be used to create a sub product group and associate the same to an existing parent group.
        title: Subgroups
        $ref: '#/definitions/setupSalesCatalogs-ProductGroupSubgroupAdministration'
      RevenueCategoryCode:
        type: string
        description: The code for the revenue category associated with the product group.
        title: Revenue Category
        maxLength: 30
      RevenueRoleCode:
        type: string
        description: The code for the revenue role associated with the product group.
        title: Revenue Role
        maxLength: 30
      UpdateFlag:
        type: boolean
        description: Indicates whether the sales catalog can be updated.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: RevenueCategoryCode LOV
      description: 'The list of values displayed for Revenue Category Code in setup sales catalogs.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RevenueCategoryCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/setupSalesCatalogs/{ProdGroupId}/lov/LookupPVOForRevenueCategoryCode?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RevenueCategoryCode
      effectiveMethod: get
    - rel: lov
      title: RevenueRoleCode LOV
      description: 'The list of values displayed for revenue role code in setup sales catalogs.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RevenueRoleCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/setupSalesCatalogs/{ProdGroupId}/lov/LookupPVOForRevenueRoleCode?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RevenueRoleCode
      effectiveMethod: get
  setupSalesCatalogs-lockProductGroupRequest:
    type: object
    properties:
      name:
        type: string
        description: This parameter value must be set to "lockProductGroup".
        enum:
        - lockProductGroup
      parameters:
        type: array
        items: {}
        maxItems: 1
        minItems: 1
  setupSalesCatalogs-lockProductGroupResponse:
    type: object
    properties:
      return:
        type: string
        description: Locks all product groups
  setupSalesCatalogs-publishProductGroupsResponse:
    type: object
    properties:
      return:
        type: string
        description: Publish all product groups
  setupSalesCatalogs-unlockProductGroupResponse:
    type: object
    properties:
      return:
        type: string
        description: Release lock on a product group
  serviceRequests:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/serviceRequests-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  serviceRequests-Attachment:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/serviceRequests-Attachment-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  serviceRequests-Attachment-item:
    type: object
    properties:
      CategoryName:
        type: string
        description: The category of the attachment.
        title: Category
        maxLength: 30
      ContentRepositoryFileShared:
        type: boolean
        description: Indicates whether the attachment is shared.
        title: Shared
      CreatedBy:
        type: string
        description: The user who created the attachment.
        maxLength: 255
      CreationDate:
        type: string
        format: date-time
        description: The date when the attachment record was created.
      DatatypeCode:
        type: string
        description: A value that indicates the data type.
        title: Type
        maxLength: 30
      Description:
        type: string
        description: The description of the attachment.
        title: Description
        maxLength: 255
      DmFolderPath:
        type: string
        description: The folder path of the attachment.
        maxLength: 1000
      ErrorStatusCode:
        type: string
        description: The error code, if any, for the attachment.
        title: Error Status Code
      ErrorStatusMessage:
        type: string
        description: The error message, if any, for the attachment.
        title: Error Status Message
      ExpirationDate:
        type: string
        format: date-time
        description: The expiration date of the contents in the attachment.
        title: Expiration Date
      FileContents:
        type: string
        format: binary
        description: The contents of the attachment.
        title: File Contents
      FileName:
        type: string
        description: The file name of the attachment.
        title: File Name
        maxLength: 2048
      FileUrl:
        type: string
        description: The URL of the attachment.
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the record was last updated.
        title: Last Update Date
      LastUpdatedBy:
        type: string
        description: The user who last updated the attachment.
        title: Last Updated By
        maxLength: 255
      Title:
        type: string
        description: The title of the attachment.
        title: Title
      UploadedFileContentType:
        type: string
        description: The content type of the attachment.
      UploadedFileLength:
        type: integer
        format: int64
        description: The length of the attachment file.
      UploadedFileName:
        type: string
        description: The name of the attachment file.
      UploadedText:
        type: string
        description: The text of the attachment.
      Uri:
        type: string
        description: The URI of the attachment.
        title: Uri
        maxLength: 4000
      Url:
        type: string
        description: The URL of the attachment.
        maxLength: 4000
      UserName:
        type: string
        description: The login associated with the attachment.
        title: Category Name
        maxLength: 255
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  serviceRequests-channelCommunication:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/serviceRequests-channelCommunication-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  serviceRequests-channelCommunication-item:
    type: object
    properties:
      ObjectTypeCd:
        type: string
        description: Indicates whether the channel communication record is associated to the service request or the service request message.
        maxLength: 30
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  serviceRequests-contacts:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/serviceRequests-contacts-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  serviceRequests-contacts-item:
    type: object
    properties:
      ContactEmailAddress:
        type: string
        description: The email address of the party associated with the contact.
        maxLength: 320
      ContactFormattedPhoneNumber:
        type: string
        description: The formatted phone number of the party associated with the contact.
      ContactPreferredContactMethod:
        type: string
        description: The preferred contact method of the party associated with the contact.
        maxLength: 30
      ContactUniqueName:
        type: string
        description: The unique party name associated with the contact.
        maxLength: 900
      CreatedBy:
        type: string
        description: The user who created the record.
        title: Created By
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time when the record was created.
        title: Creation Date
      LastUpdateDate:
        type: string
        format: date-time
        description: The date and time when the record was last updated.
        title: Last Updated Date
      LastUpdateLogin:
        type: string
        description: The application login id of the user who last updated the contacts object associated with the service request.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 64
      MemberId:
        type: integer
        format: int64
        description: The unique identifier of the contact.
      PartyId:
        type: integer
        format: int64
        description: The unique party identifier of the contact.
        title: Party ID
      PrimaryContactFlag:
        type: boolean
        description: Indicates if the contact is the primary contact for the service request. If yes, the value is True, else the value is False.
      RelationTypeCd:
        type: string
        description: The relationship with the contact in context of the service request. For example, Alternate, Follower, Third_Party, and so on.
        maxLength: 30
      SrId:
        type: integer
        format: int64
        description: The unique identifier of the associated service request.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: RelationTypeCd LOV
      description: 'The list of values to indicate the relationship with the contact in context of the service request such as Alternate, Follower, Third_Party, and so on.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RelationTypeCd; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/contacts/{MemberId}/lov/RelationshipTypeLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RelationTypeCd
      effectiveMethod: get
    - rel: lov
      title: ContactUniqueName LOV
      description: 'The list of values for the unique party name associated with the contact.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ContactUniqueName; Target Attribute: PartyUniqueName</li><li>Source Attribute: PartyId; Target Attribute: PartyId</li><li>Display Attribute: PartyUniqueName</li><li>Display Attribute: PrimaryEmailAddress</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/contacts/{MemberId}/lov/PersonDVO?fields=PartyUniqueName,PartyId,PrimaryEmailAddress
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          PartyUniqueName:
            type: string
            description: Indicates the unique party name of the contact.
          PartyId:
            type: integer
            description: Indicates the contact party ID.
          PrimaryEmailAddress:
            type: string
            description: Indicates the contact email.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ContactUniqueName
      - PartyId
      effectiveMethod: get
  serviceRequests-item:
    type: object
    properties:
      AccountPartyId:
        type: integer
        format: int64
        description: The unique party object identifier of the account associated with the service request.
      AccountPartyUniqueName:
        type: string
        description: The unique party name associated with the account.
        maxLength: 900
      AssetId:
        type: integer
        format: int64
        description: The unique identifier of the asset associated to the service request.
      AssetSerialNumber:
        type: string
        description: The serial number of the asset that is associated with the service request.
        title: Serial Number
        maxLength: 100
      AssigneeEmailAddress:
        type: string
        description: The email address of the assignee.
        maxLength: 320
      AssigneePartyId:
        type: integer
        format: int64
        description: The unique party object identifier of the service request assignee.
      AssigneePersonName:
        type: string
        description: The party name associated with the assignee.
        maxLength: 360
      AssigneeResourceId:
        type: integer
        format: int64
        description: The ID of the resource (for example, a support engineer) assigned to the service request.
      Attachment:
        description: Attachments are a list of files or URLs associated with a service request.
        title: Attachments
        $ref: '#/definitions/serviceRequests-Attachment'
      CategoryId:
        type: integer
        format: int64
        description: The unique identifier of the service request category.
      CategoryName:
        type: string
        description: The name of the category associated with the service request.
        maxLength: 400
      ChannelTypeCd:
        type: string
        description: Indicates the channel type. For example, email, phone, social, and so on.
        maxLength: 30
      ClosedDate:
        type: string
        format: date-time
        description: The date when the service request was closed (if closed).
      CorpCurrencyCode:
        type: string
        description: The corporate currency code.
        maxLength: 15
      CreatedBy:
        type: string
        description: The user who created the service request.
        title: Created By
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time when the service request was created.
        title: Creation Date
      CriticalFlag:
        type: boolean
        description: Indicates whether the service request is critical. If critical, the value is Y, else the value is N.
      CurcyConvRateType:
        type: string
        description: The corporate currency conversion rate type.
        maxLength: 30
      CurrencyCode:
        type: string
        description: The currency code.
        maxLength: 15
      InternalPriorityCd:
        type: string
        description: Indicates the internal priority of the service request. For example, High, Normal, Low, and so on.
        maxLength: 30
      InventoryItemId:
        type: integer
        format: int64
        description: The unique identifier of the product associated with the service request.
      InventoryOrgId:
        type: integer
        format: int64
        description: The unique identifier of the organization of the product that is associated with the service request.
      LanguageCd:
        type: string
        description: The customer's preferred language for the service request.
        maxLength: 30
      LastReopenDate:
        type: string
        format: date-time
        description: The date and time when the service request was last reopened.
      LastResolvedDate:
        type: string
        format: date-time
        description: The date and time when the service request was resolved.
      LastUpdateDate:
        type: string
        format: date-time
        description: The date and time when the service request was last updated.
        title: Last Updated Date
      LastUpdateLogin:
        type: string
        description: The application login id of the user who last updated the service request.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the service request.
        title: Last Updated By
        maxLength: 64
      LastUpdatedByDisplayName:
        type: string
        description: The display name of the user who last update the service request.
        title: Last Updated By
        maxLength: 3600
      OpenDate:
        type: string
        format: date-time
        description: The date when the service request was reported by the customer. Typically, the value is the same as Creation Date. However, if the service request was migrated from another system then the Creation Date is the date the SR was created and Date Reported is the date the customer reported the service request.
      OriginalSystemReference:
        type: string
        description: The reference to the service request record in the original system from which service request was imported (if imported).
        maxLength: 255
      OwnerTypeCd:
        type: string
        description: Indicates the type of the service request owner. For example, the owner of the service request may be a customer or a partner.
        maxLength: 30
      PartnerAccountPartyId:
        type: integer
        format: int64
        description: The unique party object identifier of the partner account associated with the service request.
      PartnerAccountPartyName:
        type: string
        description: The party name associated with the partner. Two accounts can have the same party name but not the same unique name.
        maxLength: 360
      PartnerAccountPartyUniqueName:
        type: string
        description: The unique name to identify the partner account.
        maxLength: 900
      PrimaryContactFormattedPhoneNumber:
        type: string
        description: The phone number of the primary contact.
      PrimaryContactPartyId:
        type: integer
        format: int64
        description: The unique identifier of the contact who initially reported the service request. The contact is also the primary contact of the service request.
      PrimaryContactPartyUniqueName:
        type: string
        description: The unique party name associated with the primary contact.
        maxLength: 900
      ProblemCd:
        type: string
        description: Reserved for future use.
        maxLength: 30
      ProblemDescription:
        type: string
        description: The service request's problem description/statement and the steps to reproduce the issue.
        maxLength: 1000
      ProdGroupId:
        type: integer
        format: int64
        description: The unique identifier of the product group associated with the service request.
      ProdGroupName:
        type: string
        description: The name of the product group associated with the service request.
        title: Product Group
        maxLength: 250
      ProductItemDescription:
        type: string
        description: The description of the product associated with the service request.
        maxLength: 255
      ProductItemNumber:
        type: string
        description: The product number/code of the product associated with the service request.
        maxLength: 255
      ProductItemOrgId:
        type: integer
        format: int64
        description: The unique identifier of the organization of the product that is associated with the service request.
      QueueId:
        type: integer
        format: int64
        description: The unique identifier of the queue to which the service request is assigned.
      QueueName:
        type: string
        description: The name of the queue associated with the service request.
        maxLength: 400
      ReportedByPartyId:
        type: integer
        format: int64
        description: The user who created the service request in the system.
      ReportedByPartyUniqueName:
        type: string
        description: The unique name of the user who created the service request.
        maxLength: 900
      ResolutionCd:
        type: string
        description: Indicates the resolution code of the service request. For example, Satisfied, Not_Satisfied, Returned_Product, New_Purchase, Unknown, and so on.
        maxLength: 30
      SeverityCd:
        type: string
        description: Indicates the severity of the service request. For example, Sev1, Sev2, Sev3, and Sev4.
        maxLength: 30
      SourceCd:
        type: string
        description: Indicates how the service request was created in the application. For example, Agent_UI, Customer_UI, API, and so on.
        maxLength: 30
      SrCreatedBy:
        type: string
        description: The user who created the service request.
        title: Created By
        maxLength: 64
      SrId:
        type: integer
        format: int64
        description: The unique identifier of the service request record.
      SrLastUpdateDate:
        type: string
        format: date-time
        description: The date and time when the service request was last updated.
        title: Last Updated Date
      SrLastUpdateLogin:
        type: string
        description: The application login id of the user who last updated the service request.
        title: Last Update Login
        maxLength: 32
      SrLastUpdatedBy:
        type: string
        description: The user who last updated the service request.
        title: Last Updated By
        maxLength: 64
      SrNumber:
        type: string
        description: The unique number that is used to identify a service request. You can customize the service requestNumber to a format that is best suitable to your organizational requirements. For example,  service request may have the formats service request0000012345, service request_000_12345, 12345_00_service request, and so on depending on your requirements.
        maxLength: 30
      StatusCd:
        type: string
        description: Indicates the status code of the service request. For example, New, InProgress, Waiting, Resolved, Closed, and so on.
        maxLength: 30
      StatusTypeCd:
        type: string
        description: 'Indicates the status type of the service request. The possible values are: New, In Progress, Waiting, Resolved, Closed.'
        maxLength: 30
      Title:
        type: string
        description: A brief title of the service request.
        maxLength: 400
      channelCommunication:
        description: Channel communication is Information about the communication between support agents and their customers. For example, the type of information recorded about communications include message identifiers, contact identifiers, and contact point identifiers.
        title: Channel Communications
        $ref: '#/definitions/serviceRequests-channelCommunication'
      contacts:
        description: Contacts are a list of customer contacts associated with a service request. For example, the contact for a corporate customer requesting support for software installation may be the organization's IT manager. Agents communicate service request resolutions or other information with contacts. Communication channels include e-mail, Twitter accounts, and telephone.
        title: Contact Members
        $ref: '#/definitions/serviceRequests-contacts'
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
      messages:
        description: Messages contain information about every communication update to the service request, both from the internal agent and from the customer. For example, "We have credited your account for the value of the call. You should see a credit in your next monthly bill." or  "We have notified the billing department about the issue. This issue should not recur." are messages.
        title: Messages
        $ref: '#/definitions/serviceRequests-messages'
      resourceMembers:
        description: Resource members are a list of employees or partners, such as service representatives, service managers, or product managers, who can take ownership of items, such as service or knowledge authoring requests, in a queue.
        title: Resources
        $ref: '#/definitions/serviceRequests-resourceMembers'
      srReferences:
        description: Service Requests references are a list of objects linked to the service request. For example, a list of knowledge articles linked to the service request.
        title: Service Request References
        $ref: '#/definitions/serviceRequests-srReferences'
    x-links:
    - rel: lov
      title: SeverityCd LOV
      description: 'The list of values to indicate the severity of the service request such as Sev1, Sev2, Sev3, and Sev4.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SeverityCd; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/SeverityCdLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - SeverityCd
      effectiveMethod: get
    - rel: lov
      title: AssigneePersonName LOV
      description: 'The list of values to indicate the party name associated with the assignee.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AssigneePersonName; Target Attribute: ResourceName</li><li>Source Attribute: AssigneeResourceId; Target Attribute: PartyId</li><li>Display Attribute: ResourceName</li><li>Display Attribute: EmailAddress</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/ResourcePickerLOV?fields=ResourceName,PartyId,EmailAddress
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          ResourceName:
            type: string
            description: Indicates the resource name.
          PartyId:
            type: integer
            description: indicates the resource party ID.
          EmailAddress:
            type: string
            description: Indicates the resource email address.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - AssigneePersonName
      - AssigneeResourceId
      effectiveMethod: get
    - rel: lov
      title: AccountPartyUniqueName LOV
      description: 'The list of values to indicate the unique party name associated with the account.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AccountPartyUniqueName; Target Attribute: PartyUniqueName</li><li>Source Attribute: AccountPartyId; Target Attribute: PartyId</li><li>Display Attribute: PartyUniqueName</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/CustomerPickerVO?fields=PartyUniqueName,PartyId
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          PartyUniqueName:
            type: string
            description: Indicates the unique name of the customer party.
          PartyId:
            type: integer
            description: Indicates the party ID of the customer.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - AccountPartyUniqueName
      - AccountPartyId
      effectiveMethod: get
    - rel: lov
      title: PartnerAccountPartyName LOV
      description: 'The list of values of the party name associated with the partner.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PartnerAccountPartyName; Target Attribute: PartyName</li><li>Source Attribute: PartnerAccountPartyId; Target Attribute: PartyId</li><li>Display Attribute: PartyName</li><li>Display Attribute: UniqueNameSuffix</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/PartnerAccountLOV?fields=PartyName,PartyId,UniqueNameSuffix
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          PartyName:
            type: string
            description: Indicates the party name of the partner
          PartyId:
            type: integer
            description: Indicates the party Id of the partner.
          UniqueNameSuffix:
            type: string
            description: Indicates the partners unique name suffix.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - PartnerAccountPartyName
      - PartnerAccountPartyId
      effectiveMethod: get
    - rel: lov
      title: PartnerAccountPartyUniqueName LOV
      description: 'The list of values for the unique name of the partner account.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PartnerAccountPartyUniqueName; Target Attribute: PartyName</li><li>Source Attribute: PartnerAccountPartyId; Target Attribute: PartyId</li><li>Display Attribute: PartyName</li><li>Display Attribute: UniqueNameSuffix</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/PartnerAccountLOV?fields=PartyName,PartyId,UniqueNameSuffix
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          PartyName:
            type: string
            description: Indicates the party name of the partner
          PartyId:
            type: integer
            description: Indicates the party Id of the partner.
          UniqueNameSuffix:
            type: string
            description: Indicates the partners unique name suffix.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - PartnerAccountPartyUniqueName
      - PartnerAccountPartyId
      effectiveMethod: get
    - rel: lov
      title: PrimaryContactPartyUniqueName LOV
      description: 'The list of values for the unique party name associated with the primary contact.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PrimaryContactPartyUniqueName; Target Attribute: PartyUniqueName</li><li>Source Attribute: PrimaryContactPartyId; Target Attribute: PartyId</li><li>Display Attribute: PartyUniqueName</li><li>Display Attribute: PrimaryEmailAddress</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/PrimaryContactLOV?fields=PartyUniqueName,PartyId,PrimaryEmailAddress
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          PartyUniqueName:
            type: string
            description: Indicates the unique name of the primary contact.
          PartyId:
            type: integer
            description: Indicates the party ID of the primary contact.
          PrimaryEmailAddress:
            type: string
            description: Indicates the email address of the primary contact.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - PrimaryContactPartyUniqueName
      - PrimaryContactPartyId
      effectiveMethod: get
    - rel: lov
      title: CategoryId LOV
      description: 'The list of values for the unique identifier of the service request category.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CategoryId; Target Attribute: CategoryId</li><li>Display Attribute: CategoryName</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/SrCategoryLOV?fields=CategoryId,CategoryName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          CategoryId:
            type: integer
            description: Indicates the category ID
          CategoryName:
            type: string
            description: Indicates the category name.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CategoryId
      effectiveMethod: get
    - rel: lov
      title: ProblemCd LOV
      description: 'Reserved for future use.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ProblemCd; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/ProblemCdLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ProblemCd
      effectiveMethod: get
    - rel: lov
      title: ProdGroupName LOV
      description: 'The list of values for the name of the product group associated with the service request.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ProdGroupName; Target Attribute: ProdGroupName</li><li>Source Attribute: ProdGroupId; Target Attribute: ProdGroupId</li><li>Display Attribute: ProdGroupName</li><li>Display Attribute: ProdGroupDescTxt</li><li>Display Attribute: UsageName</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/ProductGroupLOV?fields=ProdGroupName,ProdGroupId,ProdGroupDescTxt,UsageName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          ProdGroupName:
            type: string
            description: Indicates the product group name.
          ProdGroupId:
            type: integer
            description: Indicates the product group ID.
          ProdGroupDescTxt:
            type: string
            description: Indicates the product group description.
          UsageName:
            type: string
            description: Indicates the product group usage.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ProdGroupName
      - ProdGroupId
      effectiveMethod: get
    - rel: lov
      title: ProductItemDescription LOV
      description: 'The list of values for the description of the product associated with the service request.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ProductItemDescription; Target Attribute: Description</li><li>Source Attribute: InventoryItemId; Target Attribute: ItemId</li><li>Source Attribute: InventoryOrgId; Target Attribute: OrgId</li><li>Display Attribute: Description</li><li>Display Attribute: ItemNumber</li><li>Display Attribute: ProdGroupName</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/ProductInventoryItemLOV?fields=Description,ItemId,OrgId,ItemNumber,ProdGroupName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          Description:
            type: string
            description: Indicates the product description.
          ItemId:
            type: integer
            description: Indicates the product item ID.
          OrgId:
            type: integer
            description: Indicates the product organization ID.
          ItemNumber:
            type: string
            description: Indicates the product item number.
          ProdGroupName:
            type: string
            description: Indicates the product group name of the product.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ProductItemDescription
      - InventoryItemId
      - InventoryOrgId
      effectiveMethod: get
    - rel: lov
      title: AssetId LOV
      description: 'The list of values for unique identifier of the asset associated to the service request.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AssetId; Target Attribute: AssetId</li><li>Display Attribute: AssetId</li><li>Display Attribute: SerialNumber</li><li>Display Attribute: InventoryItemId</li><li>Display Attribute: InventoryOrgId</li><li>Display Attribute: Description</li><li>Display Attribute: ProdGroupId</li><li>Display Attribute: ProdGroupName</li><li>Display Attribute: AssetName</li><li>Display Attribute: AssetNumber</li><li>Display Attribute: AssetTag</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/AssetLOV?fields=AssetId,SerialNumber,InventoryItemId,InventoryOrgId,Description,ProdGroupId,ProdGroupName,AssetName,AssetNumber,AssetTag
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          AssetId:
            type: integer
            description: Indicates the asset ID.
          SerialNumber:
            type: string
            description: Indicates the asset serial number.
          InventoryItemId:
            type: integer
            description: Indicates the inventory item ID of the asset.
          InventoryOrgId:
            type: integer
            description: Indicates the inventory organization ID of the asset.
          Description:
            type: string
            description: Indicates the asset description.
          ProdGroupId:
            type: integer
            description: Indicates the product group ID of  the asset.
          ProdGroupName:
            type: string
            description: Indicates the product group name of the asset.
          AssetName:
            type: string
            description: Indicates the asset name.
          AssetNumber:
            type: string
            description: Indicates the asset number.
          AssetTag:
            type: string
            description: Indicates the asset tag.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - AssetId
      effectiveMethod: get
    - rel: lov
      title: ResolutionCd LOV
      description: 'The list of values to indicate the resolution code of the service request such as Satisfied, Not_Satisfied, Returned_Product, New_Purchase, Unknown, and so on.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ResolutionCd; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/ResolutionCdLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ResolutionCd
      effectiveMethod: get
    - rel: lov
      title: SourceCd LOV
      description: 'The list of values to indicate how the service request was created in the application such as Agent_UI, Customer_UI, API, and so on.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SourceCd; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/SourceCdLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - SourceCd
      effectiveMethod: get
    - rel: lov
      title: ChannelTypeCd LOV
      description: 'The list of values to indicate the channel type such as email, phone, social, and so on.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ChannelTypeCd; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/ChannelTypeCdLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ChannelTypeCd
      effectiveMethod: get
    - rel: lov
      title: StatusCd LOV
      description: 'The list of values to indicate the status code of the service request such as New, In Progress, Waiting, Resolved, Closed, and so on.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: StatusCd; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/SrStatusCdLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - StatusCd
      effectiveMethod: get
    - rel: lov
      title: InternalPriorityCd LOV
      description: 'The list of values to indicate the internal priority of the service request such as High, Normal, Low, and so on.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: InternalPriorityCd; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/InternalPriorityLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - InternalPriorityCd
      effectiveMethod: get
    - rel: lov
      title: LanguageCd LOV
      description: 'The list of values for the customer''s preferred language for the service request.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: LanguageCd; Target Attribute: LanguageCode</li><li>Display Attribute: LanguageCode</li><li>Display Attribute: Description</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/LanguageCdLOV?fields=LanguageCode,Description
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LanguageCode:
            type: string
            description: Indicates the language code.
          Description:
            type: string
            description: Indicates the language description.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - LanguageCd
      effectiveMethod: get
    - rel: lov
      title: StatusTypeCd LOV
      description: 'The list of values to indicate the status type of the service request such as New, In Progress, Waiting, Resolved, Closed.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: StatusTypeCd; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/StatusTypeLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - StatusTypeCd
      effectiveMethod: get
    - rel: lov
      title: QueueName LOV
      description: 'The list of values for the name of the queue associated with the service request.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: QueueName; Target Attribute: QueueName</li><li>Source Attribute: QueueId; Target Attribute: QueueId</li><li>Display Attribute: QueueName</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/QueueVO?fields=QueueName,QueueId
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          QueueName:
            type: string
            description: Indicates the queue name.
          QueueId:
            type: integer
            description: Indicates the queue ID.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - QueueName
      - QueueId
      effectiveMethod: get
    - rel: lov
      title: CriticalFlag LOV
      description: 'The list of values to indicate whether the service request is critical such as Y and N.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CriticalFlag; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/YesNoLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CriticalFlag
      effectiveMethod: get
    - rel: lov
      title: CategoryName LOV
      description: 'The list of values for the name of the category associated with the service request.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CategoryName; Target Attribute: CategoryName</li><li>Source Attribute: CategoryId; Target Attribute: CategoryId</li><li>Display Attribute: CategoryName</li><li>Display Attribute: CategoryShortName</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/lov/SrCategoryLOV?fields=CategoryName,CategoryId,CategoryShortName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          CategoryName:
            type: string
            description: Indicates the category name.
          CategoryId:
            type: integer
            description: Indicates the category ID
          CategoryShortName:
            type: string
            description: Indicates the category short name.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CategoryName
      - CategoryId
      effectiveMethod: get
  serviceRequests-messages:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/serviceRequests-messages-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  serviceRequests-messages-Attachment:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/serviceRequests-messages-Attachment-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  serviceRequests-messages-Attachment-item:
    type: object
    properties:
      CategoryName:
        type: string
        description: The category of the attachment.
        title: Category
        maxLength: 30
      ContentRepositoryFileShared:
        type: boolean
        description: Indicates whether the attachment is shared.
        title: Shared
      CreatedBy:
        type: string
        description: The user who created the attachment.
        maxLength: 255
      CreationDate:
        type: string
        format: date-time
        description: The date when the attachment record was created.
      DatatypeCode:
        type: string
        description: A value that indicates the data type.
        title: Type
        maxLength: 30
      Description:
        type: string
        description: The description of the attachment.
        title: Description
        maxLength: 255
      DmFolderPath:
        type: string
        description: The folder path of the attachment.
        maxLength: 1000
      ErrorStatusCode:
        type: string
        description: The error code, if any, for the attachment.
        title: Error Status Code
      ErrorStatusMessage:
        type: string
        description: The error message, if any, for the attachment.
        title: Error Status Message
      ExpirationDate:
        type: string
        format: date-time
        description: The expiration date of the contents in the attachment.
        title: Expiration Date
      FileContents:
        type: string
        format: binary
        description: The contents of the attachment.
        title: File Contents
      FileName:
        type: string
        description: The file name of the attachment.
        title: File Name
        maxLength: 2048
      FileUrl:
        type: string
        description: The URL of the attachment.
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the record was last updated.
        title: Last Update Date
      LastUpdatedBy:
        type: string
        description: The user who last updated the attachment.
        title: Last Updated By
        maxLength: 255
      Title:
        type: string
        description: The title of the attachment.
        title: Title
      UploadedFileContentType:
        type: string
        description: The content type of the attachment.
      UploadedFileLength:
        type: integer
        format: int64
        description: The length of the attachment file.
      UploadedFileName:
        type: string
        description: The name of the attachment file.
      UploadedText:
        type: string
        description: The text of the attachment.
      Uri:
        type: string
        description: The URI of the attachment.
        title: Uri
        maxLength: 4000
      Url:
        type: string
        description: The URL of the attachment.
        maxLength: 4000
      UserName:
        type: string
        description: The login associated with the attachment.
        title: Category Name
        maxLength: 255
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  serviceRequests-messages-channelCommunication:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/serviceRequests-messages-channelCommunication-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  serviceRequests-messages-channelCommunication-item:
    type: object
    properties:
      ObjectTypeCd:
        type: string
        description: Indicates whether the channel communication record is associated to the service request or the service request message.
        maxLength: 30
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  serviceRequests-messages-item:
    type: object
    properties:
      Attachment:
        description: Attachments are a list of files or URLs associated with a service request.
        title: Attachments
        $ref: '#/definitions/serviceRequests-messages-Attachment'
      ChannelId:
        type: integer
        format: int64
        description: The unique identifier of the channel.
      ChannelTypeCd:
        type: string
        description: Indicates the channel type. For example, email, phone, social, and so on.
        maxLength: 30
      CreatedBy:
        type: string
        description: The user who created the message.
        title: Created By
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time when the message was created.
        title: Creation Date
      LastUpdateDate:
        type: string
        format: date-time
        description: The date and time when the message was last updated.
        title: Last Updated Date
      LastUpdateLogin:
        type: string
        description: The session login associated with the user who last updated the message.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the message.
        title: Last Updated By
        maxLength: 64
      MessageContent:
        type: string
        description: Indicates the content of the message. Any attachment associated with the message is not the content of the message.
      MessageCreatedBy:
        type: string
        description: The user who created the message in the original source system. This is applicable if the service request message was imported from another system.
        title: Created By
        maxLength: 64
      MessageId:
        type: integer
        format: int64
        description: The unique identifier of the service request message.
      MessageLastUpdateDate:
        type: string
        format: date-time
        description: The last updated date of the message in the original source system. This is applicable if the service request message was imported from another system.
        title: Last Updated Date
      MessageLastUpdateLogin:
        type: string
        description: The login of the user who last update the message in the original source system. This is applicable if the service request message was imported from another system.
        title: Last Update Login
        maxLength: 32
      MessageLastUpdatedBy:
        type: string
        description: The user who last update the message in the original source system. This is applicable if the service request message was imported from another system.
        title: Last Updated By
        maxLength: 64
      MessageTypeCd:
        type: string
        description: Indicates the message type. The accepted values are Response, Customer Entry, System Note, System Response, and Internal Note.
        maxLength: 30
      OriginalSystemReference:
        type: string
        description: The identifier of the message record in the original source system from where the message was imported. This is applicable if the service request message was imported from another system.
        maxLength: 255
      OriginationDate:
        type: string
        format: date-time
        description: The date the message was created in the original source system. This is applicable if the service request message was imported from another system.
      PartyName:
        type: string
        description: The Party name of the user who the posted the message. The user can be an internal resource or a customer contact.
        maxLength: 360
      PostedByPartyId:
        type: integer
        format: int64
        description: The unique identifier of the user who the posted the message. The user can be an internal resource or a customer contact.
      ProcessingStatusCd:
        type: string
        description: Indicates the processing status of the message. The accepted values are Ready, Processing, Error, and Success.
        maxLength: 30
      RichTextFlag:
        type: boolean
        description: Indicates whether the message content is in rich text format. If the format is rich text, then the value is Y, else the value is N.
      SentDate:
        type: string
        format: date-time
        description: The date and time when the message was sent.
      SourceCd:
        type: string
        description: Indicates the source of the message. For example, Agent UI, Customer UI, and API.
        maxLength: 30
      SrId:
        type: integer
        format: int64
        description: The unique identifier of the service request to which the message is associated.
      StatusCd:
        type: string
        description: Indicates the status of the message. The accepted values are Draft, Committed, and Corrected.
        maxLength: 30
      VisibilityCd:
        type: string
        description: Indicates the privacy level of the message. The accepted values are Internal and External. Null value indicates that the message is External.
        maxLength: 30
      channelCommunication:
        description: Channel communication is Information about the communication between support agents and their customers. For example, the type of information recorded about communications include message identifiers, contact identifiers, and contact point identifiers.
        title: Channel Communications
        $ref: '#/definitions/serviceRequests-messages-channelCommunication'
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: MessageTypeCd LOV
      description: 'The list of values to indicate the message type such as Response, Customer Entry, System Note, System Response, and Internal Note.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: MessageTypeCd; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/messages/{MessageId}/lov/MessageTypeCdLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - MessageTypeCd
      effectiveMethod: get
    - rel: lov
      title: ChannelTypeCd LOV
      description: 'The list of values to indicate the channel type such as email, phone, social, and so on.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ChannelTypeCd; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/messages/{MessageId}/lov/ChannelTypeCdLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ChannelTypeCd
      effectiveMethod: get
    - rel: lov
      title: SourceCd LOV
      description: 'The list of values to indicate the source of the message such as Agent UI, Customer UI, and API.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SourceCd; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/messages/{MessageId}/lov/SourceCdLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - SourceCd
      effectiveMethod: get
    - rel: lov
      title: StatusCd LOV
      description: 'The list of values to indicate the status of the message such as Draft, Committed, and Corrected.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: StatusCd; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/messages/{MessageId}/lov/StatusCdLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - StatusCd
      effectiveMethod: get
    - rel: lov
      title: VisibilityCd LOV
      description: 'The list of values to indicate the privacy level of the message such as Internal and External.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: VisibilityCd; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/messages/{MessageId}/lov/VisibilityCdLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - VisibilityCd
      effectiveMethod: get
  serviceRequests-resourceMembers:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/serviceRequests-resourceMembers-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  serviceRequests-resourceMembers-item:
    type: object
    properties:
      ObjectTypeCd:
        type: string
        description: Indicates whether the resource is an individual or a team.
        maxLength: 30
      OwnerFlag:
        type: boolean
        description: Indicates if the service request is assigned to the resource member. If yes, the value is True, else the value is False.
      PartyUniqueName:
        type: string
        description: The unique name of the individual resource added as service request resource member.
        maxLength: 900
      ResourceEmailAddress:
        type: string
        description: The email address of the resource member.
        maxLength: 320
      ResourceFormattedPhoneNumber:
        type: string
        description: The formatted phone number of the resource member.
      ResourceName:
        type: string
        description: The name of the individual resource added as service request resource member.
        maxLength: 360
      UserGUID:
        type: string
        description: A globally unique identifier of the resource added as the service request resource member.
        maxLength: 64
      UserId:
        type: integer
        format: int64
        description: The user identifier of the resource added as the service request resource member.
      Username:
        type: string
        description: The user name of the resource member.
        title: User Name
        maxLength: 100
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: ObjectTypeCd LOV
      description: 'The list of values to indicates whether the resource is an individual or a team.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ObjectTypeCd; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/resourceMembers/{MemberId}/lov/ObjectTypeLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ObjectTypeCd
      effectiveMethod: get
    - rel: lov
      title: ResourceName LOV
      description: 'The list of values for the name of the individual resource added as service request resource member.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ResourceName; Target Attribute: ResourceName</li><li>Source Attribute: ObjectId; Target Attribute: PartyId</li><li>Display Attribute: ResourceName</li><li>Display Attribute: EmailAddress</li><li>Display Attribute: FormattedPhoneNumber</li></ul>'
      method: get
      href: /serviceApi/resources/latest/serviceRequests/{SrNumber}/child/resourceMembers/{MemberId}/lov/ResourcePickerPVO?fields=ResourceName,PartyId,EmailAddress,FormattedPhoneNumber
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          ResourceName:
            type: string
            description: Indicates the resource name.
          PartyId:
            type: integer
            description: indicates the resource party ID.
          EmailAddress:
            type: string
            description: Indicates the resource email address.
          FormattedPhoneNumber:
            type: string
            description: Indicates the resource phone number.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ResourceName
      - ObjectId
      effectiveMethod: get
  serviceRequests-srReferences:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/serviceRequests-srReferences-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  serviceRequests-srReferences-item:
    type: object
    properties:
      ArticleId:
        type: string
        description: The Oracle Knowledge Cloud Service article ID that identifies the version of the article.
        maxLength: 64
      ArticleLocale:
        type: string
        description: The locale of the document, such as en_US. This attribute is valid only when ArticleId is populated.
        maxLength: 10
      CreatedBy:
        type: string
        description: The user who created the service request reference.
        title: Created By
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time when the service request reference was created.
        title: Creation Date
      LastUpdateDate:
        type: string
        format: date-time
        description: The date and time when the service request reference was last updated.
        title: Last Updated Date
      LastUpdateLogin:
        type: string
        description: The login ID of the user who last updated the service request reference.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the service request reference.
        title: Last Updated By
        maxLength: 64
      ObjectId:
        type: integer
        format: int64
        description: The identifier of the object referencing the SR or referenced by the SR such as Note, Defect, or Other SR.
      ObjectTypeCd:
        type: string
        description: Indicates the type of the object that the service request reference is associated with such as Note, Article, Defect, Other SR.
        maxLength: 30
      ReferenceId:
        type: integer
        format: int64
        description: The unique identifier of the service request reference record.
      RelationTypeCd:
        type: string
        description: The type of relationship.
        maxLength: 30
      SrId:
        type: integer
        format: int64
        description: The unique identifier of the service request to which the reference is associated.
      Subject:
        type: string
        description: Indicates the title of the article. This attribute is valid only when ArticleId is populated.
        maxLength: 1000
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  resources:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/resources-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  resources-PictureAttachment:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/resources-PictureAttachment-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  resources-PictureAttachment-item:
    type: object
    properties:
      CategoryName:
        type: string
        description: The category of the picture attachment.
        title: Category
        maxLength: 30
      ContentRepositoryFileShared:
        type: boolean
        description: Indicates if the attachment is shared.
        title: Shared
      CreatedBy:
        type: string
        description: The user who uploaded the picture attachment.
        maxLength: 255
      CreationDate:
        type: string
        format: date-time
        description: The date when the picture attachment was uploaded.
      DatatypeCode:
        type: string
        description: The data type for the picture attachment.
        title: Type
        maxLength: 30
      Description:
        type: string
        description: The description of the picture attachment.
        title: Description
        maxLength: 255
      DmFolderPath:
        type: string
        description: The folder path where the picture attachment exists.
        maxLength: 1000
      ErrorStatusCode:
        type: string
        description: The error code, if any, for the attachment.
        title: Error Status Code
      ErrorStatusMessage:
        type: string
        description: The error message, if any, for the attachment.
        title: Error Status Message
      ExpirationDate:
        type: string
        format: date-time
        description: The expiration date of the contents in the attachment.
        title: Expiration Date
      FileContents:
        type: string
        format: binary
        description: The contents of the attachment.
        title: File Contents
      FileName:
        type: string
        description: The name of the attachment file.
        title: File Name
        maxLength: 2048
      FileUrl:
        type: string
        description: The URL of the attachment file.
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the record was last updated.
        title: Last Update Date
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 255
      Title:
        type: string
        description: The title of the attachment.
        title: Title
      UploadedFileContentType:
        type: string
        description: The content type of the attachment.
      UploadedFileLength:
        type: integer
        format: int64
        description: The length of the attachment file.
      UploadedFileName:
        type: string
        description: The name of the attachment file.
      UploadedText:
        type: string
        description: The text uploaded in the attachment.
      Uri:
        type: string
        description: The URI of the attachment.
        title: Uri
        maxLength: 4000
      Url:
        type: string
        description: The URL of the attachment.
        maxLength: 4000
      UserName:
        type: string
        description: The login associated with the attachment.
        title: Category Name
        maxLength: 255
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  resources-item:
    type: object
    properties:
      EmailAddress:
        type: string
        description: The e-mail address of a resource.
        title: E-Mail
        maxLength: 320
      EndDateActive:
        type: string
        format: date
        description: Date on which this resource is no longer active.
        title: To Date
      FormattedAddress:
        type: string
        description: The primary formatted address information of a resource.
        title: Address
      FormattedPhoneNumber:
        type: string
        description: The primary formatted phone number for a resource.
        title: Phone
      JobMeaning:
        type: string
        description: The job title for the resource who is an employee.
        title: Job Title
      Manager:
        type: string
        description: The name of the manager for this resource.
        title: Manager
      PartyId:
        type: integer
        format: int64
        description: The identifier of a resource party.
        title: Resource
      PartyName:
        type: string
        description: The name of a resource party.
        title: Resource Name
        maxLength: 360
      PartyNumber:
        type: string
        description: The unique identifier for the resource party.
        title: Registry ID
        maxLength: 30
      PersonFirstName:
        type: string
        description: The first name of the resource.
        title: First Name
        maxLength: 150
      PersonLastName:
        type: string
        description: The last name of the resource.
        title: Last Name
        maxLength: 150
      PersonLastNamePrefix:
        type: string
        description: The prefix for the last name of a resource.
        title: Last Name Prefix
        maxLength: 30
      PersonMiddleName:
        type: string
        description: The middle name of the resource.
        title: Middle Name
        maxLength: 60
      PersonNameSuffix:
        type: string
        description: The suffix for the name of a resource.
        title: Suffix
        maxLength: 30
      PersonPreNameAdjunct:
        type: string
        description: The preferred name adjacency of a resource.
        title: Salutary Introduction
        maxLength: 30
      PersonPreviousLastName:
        type: string
        description: The previous last name of a resource.
        title: Previous Last Name
        maxLength: 150
      PersonSecondLastName:
        type: string
        description: The second last name of a resource.
        title: Second Last Name
        maxLength: 150
      PictureAttachment:
        description: The contact picture attachment resource is used to view, create, and update the resource's picture.
        title: Attachments
        $ref: '#/definitions/resources-PictureAttachment'
      PrimaryOrganization:
        type: string
        description: The primary organization for this resource.
        title: Organization
      ResourceProfileId:
        type: integer
        format: int64
        description: The unique primary key identifier for the resource profile.
      ResourceType:
        type: string
        description: The type of resource, such as employee.
        title: Usage
        maxLength: 255
      StartDateActive:
        type: string
        format: date
        description: Date on which the resource becomes active.
        title: Effective As-of Date
      Url:
        type: string
        description: The primary URL of the resource.
        title: Primary URL
        maxLength: 2000
      Usage:
        type: string
        description: The read-only party usage for the resource party.
        title: Usages
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  queues:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/queues-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  queues-item:
    type: object
    properties:
      CreatedBy:
        type: string
        description: The user who created the queue.
        title: Created By
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time when the queue was created.
        title: Creation Date
      EnabledFlag:
        type: boolean
        description: Indicates whether the queue is enabled. If enabled, the value is Y, else the value is N.
      LastUpdateDate:
        type: string
        format: date-time
        description: The date and time when the queue was last updated.
        title: Last Updated Date
      LastUpdateLogin:
        type: string
        description: The application login id of the user who last updated the queue.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the queue.
        title: Last Updated By
        maxLength: 64
      OpenSrCount:
        type: integer
        format: int64
        description: The number of service requests in the queue with the Open status.
      OriginalSystemReference:
        type: string
        description: The reference to the original system from which the queue was imported (if imported).
        maxLength: 255
      OwnerResourceId:
        type: integer
        format: int64
        description: The unique identifier of the user (resource) to whom any service requests in the queue are assigned, by default. The user is responsible for further service request assignment and scheduling.
      QueueDescription:
        type: string
        description: A detailed description of the queue.
        maxLength: 1000
      QueueId:
        type: integer
        format: int64
        description: The unique identifier of the queue.
      QueueName:
        type: string
        description: The name of the queue.
        maxLength: 400
      ResourceCount:
        type: integer
        format: int64
        description: The number of resources associated to the queue.
      ResourceTeamCount:
        type: integer
        format: int64
        description: The number of resource teams associated to the queue.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
      resourceMembers:
        description: Queue resource members are a list of employees or partners, such as service representatives, service managers, or product managers, who can take ownership of items, such as service or knowledge authoring requests, in a queue.
        title: Queue Resource Members
        $ref: '#/definitions/queues-resourceMembers'
      resourceTeams:
        description: Queue resource team is a resource team assigned to a queue.
        title: Queue Resource Teams
        $ref: '#/definitions/queues-resourceTeams'
    x-links:
    - rel: lov
      title: EnabledFlag LOV
      description: 'The list of values to indicate whether the queue is enabled such as Y and N.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: EnabledFlag; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /serviceApi/resources/latest/queues/{QueueId}/lov/YesNoLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - EnabledFlag
      effectiveMethod: get
  queues-resourceMembers:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/queues-resourceMembers-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  queues-resourceMembers-item:
    type: object
    properties:
      EmailAddress:
        type: string
        description: The email address of the resource member.
        maxLength: 320
      FormattedPhoneNumber:
        type: string
        description: The formatted phone number of the queue resource member.
      ObjectTypeCd:
        type: string
        description: Indicates whether the resource is an individual or a team.
        maxLength: 30
      PartyId:
        type: integer
        format: int64
        description: The unique identifier of the party record associated to the queue resource member.
      PartyName:
        type: string
        description: The name of the queue resource member.
        maxLength: 360
      PartyNumber:
        type: string
        description: The party number of the queue resource member.
        maxLength: 30
      PartyUniqueName:
        type: string
        description: The unique name of the queue resource member.
        maxLength: 900
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: ObjectTypeCd LOV
      description: 'The list of values to indicate whether the resource is an individual or a team.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ObjectTypeCd; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /serviceApi/resources/latest/queues/{QueueId}/child/resourceMembers/{PartyId}/lov/ObjectTypeCdLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ObjectTypeCd
      effectiveMethod: get
  queues-resourceTeams:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/queues-resourceTeams-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  queues-resourceTeams-item:
    type: object
    properties:
      ObjectTypeCd:
        type: string
        description: Indicates whether the queue resource is an individual or a team.
        maxLength: 30
      TeamDescription:
        type: string
        description: The email address of the queue resource team.
        title: Team Description
        maxLength: 80
      TeamId:
        type: integer
        format: int64
        description: The unique identifier of the party record associated to the queue resource team.
      TeamName:
        type: string
        description: The name of the resource team.
        title: Team Name
        maxLength: 30
      TeamNumber:
        type: string
        description: The party number of the resource team.
        title: Team Number
        maxLength: 30
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: ObjectTypeCd LOV
      description: 'The list of values to indicate whether the resource is an individual or a team.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ObjectTypeCd; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /serviceApi/resources/latest/queues/{QueueId}/child/resourceTeams/{TeamId}/lov/ObjectTypeCdLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ObjectTypeCd
      effectiveMethod: get
  accounts:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/accounts-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  accounts-Address:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/accounts-Address-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  accounts-Address-AddressPurpose:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/accounts-Address-AddressPurpose-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  accounts-Address-AddressPurpose-item:
    type: object
    properties:
      AddressPurposeId:
        type: integer
        format: int64
        description: The unique identifier of the address purpose.
      DeleteFlag:
        type: boolean
        description: Indicates whether the address purpose is to be deleted. If the value  is Y, then the address purpose has to be deleted. The default value is N.
      Purpose:
        type: string
        description: The purpose of the address. A list of valid values is defined in the lookup PARTY_SITE_USE_CODE. Review and update the codes using the Setup and Maintenance work area, Manage Standard Lookups task.
        title: Purpose
        maxLength: 30
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  accounts-Address-item:
    type: object
    properties:
      AddrElementAttribute1:
        type: string
        description: An additional address element to support flexible address format.
        maxLength: 150
      AddrElementAttribute2:
        type: string
        description: An additional address element to support flexible address format.
        maxLength: 150
      AddrElementAttribute3:
        type: string
        description: An additional address element to support flexible address format.
        maxLength: 150
      AddrElementAttribute4:
        type: string
        description: An additional address element to support flexible address format.
        maxLength: 150
      AddrElementAttribute5:
        type: string
        description: An additional address element to support flexible address format.
        maxLength: 150
      Address1:
        type: string
        description: The first line for address.
        title: Address Line 1
        maxLength: 240
      Address2:
        type: string
        description: The second line for address.
        title: Address Line 2
        maxLength: 240
      Address3:
        type: string
        description: The third line for address.
        title: Address Line 3
        maxLength: 240
      Address4:
        type: string
        description: The fourth line for address.
        title: Address Line 4
        maxLength: 240
      AddressId:
        type: integer
        format: int64
        description: The unique identifier of the address.
      AddressLinesPhonetic:
        type: string
        description: The phonetic or Kana representation of the Kanji address lines. This is used for addresses in Japan.
        title: Address Lines Phonetic
        maxLength: 560
      AddressNumber:
        type: string
        description: The address internal unique identifier that is internally generated during create. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update.
        title: Site Number
        maxLength: 30
      AddressPurpose:
        description: The address purpose resource is used to view, create, or modify the address purpose. The address purpose describes the use of an address, such as shipping address or billing address.
        title: Address Purposes
        $ref: '#/definitions/accounts-Address-AddressPurpose'
      Building:
        type: string
        description: The building name or number in the address.
        title: Building
        maxLength: 240
      City:
        type: string
        description: The city in the address.
        title: City
        maxLength: 60
      ClliCode:
        type: string
        description: The Common Language Location Identifier (CLLI) code of the address. The code is used within the North American to specify the location of the address.
        title: CLLI Code
        maxLength: 60
      Comments:
        type: string
        description: The user-provided comments for the address.
        title: Comments
        maxLength: 2000
      CorpCurrencyCode:
        type: string
        description: The corporate currency code used by the CRM Extensibility framework.
        maxLength: 15
      Country:
        type: string
        description: The country code of the address. Review the list of country codes using the Manage Geographies task.
        title: Country
        maxLength: 2
      County:
        type: string
        description: The county of the address.
        title: County
        maxLength: 60
      CreatedBy:
        type: string
        description: The user who created the account record.
        title: Created By
        maxLength: 64
      CreatedByModule:
        type: string
        description: The module that created the account record.
      CreationDate:
        type: string
        format: date-time
        description: The date when the record was created.
        title: Creation Date
      CurcyConvRateType:
        type: string
        description: The currency conversion rate type. This attribute is used by CRM Extensibility framework. A list of valid values are defined in the lookup ZCA_COMMON_RATE_TYPE. Review and update the profile option using the Setup and Maintenance work area, Manage Currency Profile Options task.
        maxLength: 30
      CurrencyCode:
        type: string
        description: The currency code. This attribute is used by CRM Extensibility framework. A list of valid values are defined in the lookup ZCA_COMMON_CORPORATE_CURRENCY. Review and update the profile option using the Setup and Maintenance work area, Manage Currency Profile Options task.
        title: Currency
        maxLength: 15
      DateValidated:
        type: string
        format: date
        description: The date when the address was last validated.
        title: Validated Date
      Description:
        type: string
        description: The description of the location.
        title: Description
        maxLength: 2000
      DoNotMailFlag:
        type: boolean
        description: Indicates whether the address should not be used for mailing.
        title: Contact Preferences
      EffectiveDate:
        type: string
        format: date
        description: The date when the address  becomes active.
      EndDateActive:
        type: string
        format: date
        description: The date after which the address becomes inactive.
        title: To Date
      FloorNumber:
        type: string
        description: The floor number of the address.
        title: Floor
        maxLength: 40
      FormattedAddress:
        type: string
        description: The formatted version of the address.
        title: Address
      FormattedMultilineAddress:
        type: string
        description: The formatted multiline version of the address.
        title: Address
      HouseType:
        type: string
        description: Indicates the building type for the building in the address. A list of valid values are defined in the lookup HZ_HOUSE_TYPE. Review and update the codes using the Setup and Maintenance work area, Manage Standard Lookups task.
        title: House Type
        maxLength: 30
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the record was last updated.
        title: Last Updated Date
      LastUpdateLogin:
        type: string
        description: The login of the user who last updated the record.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 64
      Latitude:
        type: number
        description: The latitude information for the address. The latitude information for the location is used for spatial proximity and containment purposes.
        title: Latitude
      LocationDirections:
        type: string
        description: The directions to the address location.
        title: Location Directions
        maxLength: 640
      LocationId:
        type: integer
        format: int64
        description: The unique identifier for the location.
      Longitude:
        type: number
        description: The longitude information for the address. The longitude information for the location is used for spatial proximity and containment purposes.
        title: Longitude
      Mailstop:
        type: string
        description: The user-defined code that indicates a mail drop point within the organization.
        title: Mail Stop
        maxLength: 60
      ObjectVersionNumber:
        type: integer
        format: int32
        description: The number used to implement locking. This number is incremented every time that the row is updated. The number is compared at the start and end of a transaction to determine whether another session has updated the row.
      PartyId:
        type: integer
        format: int64
        description: The unique identifier of the account associated with the address.
      PartyNumber:
        type: string
        description: The unique alternate identifier for the account associated with the address.
      PartySourceSystem:
        type: string
        description: The name of external source system where the account, associated with the address, party is imported from. The values configured in setup task Trading Community Source System.
      PartySourceSystemReferenceValue:
        type: string
        description: The unique identifier for the account, associated with the address, from the external source system specified in the attribute PartySourceSystem.
      PostalCode:
        type: string
        description: The postal code of the address.
        title: Postal Code
        maxLength: 60
      PostalPlus4Code:
        type: string
        description: The four-digit extension to the United States Postal ZIP code for the address.
        title: Postal Code Extension
        maxLength: 20
      PrimaryFlag:
        type: boolean
        description: Indicates whether this is the primary address of the account. If the value is Y, this address is the primary address of the account. The default value is N.
        title: Primary
      Province:
        type: string
        description: The province of the address.
        title: Province
        maxLength: 60
      SourceSystem:
        type: string
        description: The name of external source system where the address is imported from. The values configured in setup task Trading Community Source System.
      SourceSystemReferenceValue:
        type: string
        description: The unique identifier for the address from the external source system specified in the attribute PartySourceSystem.
      StartDateActive:
        type: string
        format: date
        description: The date when the address becomes active.
        title: From Date
      State:
        type: string
        description: The state of the address.
        title: State
        maxLength: 60
      Status:
        type: string
        description: The internal flag indicating status of the address. The status codes are defined by the lookup HZ_STATUS.
        maxLength: 1
      ValidatedFlag:
        type: boolean
        description: Indicates whether the location is validated. The value is internally set by system during address cleansing. If the value is Y, then the address is validated. The default value is N.
        title: Validated
      ValidationStartDate:
        type: string
        format: date
        description: The date when the validation becomes active. The value is internally set by system during address cleansing.
      ValidationStatusCode:
        type: string
        description: A standardized status code describing the results of the validation. The value is internally set by system during address cleansing.
        title: Validation Status
        maxLength: 30
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: Country LOV
      description: 'The list of values indicating the country of the address, such as US and UK.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Country; Target Attribute: TerritoryCode</li><li>Display Attribute: TerritoryShortName</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/Address/{AddressNumber}/lov/CountriesLOV?fields=TerritoryCode,TerritoryShortName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          TerritoryCode:
            type: string
            description: Lookup code for listing of countries
          TerritoryShortName:
            type: string
            description: Display name listing for countries
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - Country
      effectiveMethod: get
    - rel: lov
      title: HouseType LOV
      description: 'The list of values indicating the house type of the address, such as House Boat and Trailer.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: HouseType; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/Address/{AddressNumber}/lov/HouseTypeLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - HouseType
      effectiveMethod: get
  accounts-Attachment:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/accounts-Attachment-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  accounts-Attachment-item:
    type: object
    properties:
      CategoryName:
        type: string
        description: The category of the attachment.
        title: Category
        maxLength: 30
      ContentRepositoryFileShared:
        type: boolean
        description: Indicates whether the attachment is shared.
        title: Shared
      CreatedBy:
        type: string
        description: The user who created the attachment.
        maxLength: 255
      CreationDate:
        type: string
        format: date-time
        description: The date when the attachment record was created.
      DatatypeCode:
        type: string
        description: A value that  indicates the data type.
        title: Type
        maxLength: 30
      Description:
        type: string
        description: The description of the attachment.
        title: Description
        maxLength: 255
      DmFolderPath:
        type: string
        description: The folder path of the attachment.
        maxLength: 1000
      ErrorStatusCode:
        type: string
        description: The error code, if any, for the attachment.
        title: Error Status Code
      ErrorStatusMessage:
        type: string
        description: The error message, if any, for the attachment.
        title: Error Status Message
      ExpirationDate:
        type: string
        format: date-time
        description: The expiration date of the contents in the attachment.
        title: Expiration Date
      FileContents:
        type: string
        format: binary
        description: The contents of the attachment.
        title: File Contents
      FileName:
        type: string
        description: The file name of the attachment.
        title: File Name
        maxLength: 2048
      FileUrl:
        type: string
        description: The URL of the attachment.
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the record was last updated.
        title: Last Update Date
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 255
      Title:
        type: string
        description: The title of the attachment.
        title: Title
      UploadedFileContentType:
        type: string
        description: The content type of the attachment.
      UploadedFileLength:
        type: integer
        format: int64
        description: The length of the attachment file.
      UploadedFileName:
        type: string
        description: The name of the attachment file.
      UploadedText:
        type: string
        description: The text of the attachment.
      Uri:
        type: string
        description: The URI of the attachment.
        title: Uri
        maxLength: 4000
      Url:
        type: string
        description: The URL of the attachment.
        maxLength: 4000
      UserName:
        type: string
        description: The login associated with the attachment.
        title: Category Name
        maxLength: 255
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  accounts-CustomerClassification:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/accounts-CustomerClassification-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  accounts-CustomerClassification-item:
    type: object
    properties:
      ClassCategory:
        type: string
        description: The name of the classification category.
        title: Classification Category
        maxLength: 30
      ClassCode:
        type: string
        description: A valid classification code corresponding to the classification category.
        title: Classification Code
        maxLength: 30
      CodeAssignmentId:
        type: integer
        format: int64
        description: The unique identifier for the customer classification assignment.
        title: Code Assignment ID
      CreatedBy:
        type: string
        description: The user who created the record.
        title: Created By
        maxLength: 64
      CreatedByModule:
        type: string
        description: The application that created the classification.
        title: Created by Module
        maxLength: 30
      CreationDate:
        type: string
        format: date-time
        description: The date when the record was created.
        title: Creation Date
      EndDateActive:
        type: string
        format: date
        description: The date on which the classification code is no longer valid.
        title: End Date
      IsAuxClassificationFlag:
        type: boolean
        description: Indicates whether the classification category is a custom group classification category.
        title: Auxiliary Classification Status
      IsIndustryFlag:
        type: boolean
        description: Indicates whether the classification category is an industry group classification category.
        title: Industry Type Status
      IsOrgTypeFlag:
        type: boolean
        description: Indicates whether the classification category is an organization type classification category.
        title: Organization Type Status
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the record was last updated.
        title: Last Updated Date
      LastUpdateLogin:
        type: string
        description: The login of the user who last updated the record.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 64
      PartyId:
        type: integer
        format: int64
        description: The unique Identifier of the account, contact or household to which the classification is associated.
        title: Party ID
      PartyNumber:
        type: string
        description: The unique alternate identifier of the account, contact, or household to which the classification is associated.
        title: Party Number
        maxLength: 30
      PartySourceSystem:
        type: string
        description: The name of the external source system of the account, contact, or household with which the classification is associated.
        title: Party Source System
      PartySourceSystemReferenceValue:
        type: string
        description: Identifier from external source system for the account, contact or household with which the classification is associated.
        title: Party Source System Reference Value
      PartyType:
        type: string
        description: Indicates the type of the party, such as account, contact, or household.
        title: Party Type
        maxLength: 30
      PrimaryFlag:
        type: boolean
        description: Indicates if the customer classification is the primary classification.
        title: Primary
      SourceSystem:
        type: string
        description: The name of external source system where the customer classification is imported from. The values are configured in Setup and Maintenance work area, Manage Trading Community Source Systems task.
        title: Source System
      SourceSystemReferenceValue:
        type: string
        description: The unique identifier for the customer classification in the external source.
        title: Source System Reference Value
      StartDateActive:
        type: string
        format: date
        description: The date on which the customer classification was created.
        title: Start Date
      Status:
        type: string
        description: Indicates if the code assignment is active or inactive. The code assignment is active if the value is A, and inactive if the value is I.
        title: Status
        maxLength: 1
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  accounts-Note:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/accounts-Note-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  accounts-Note-item:
    type: object
    properties:
      ContactRelationshipId:
        type: integer
        format: int64
        description: The relationship ID populated when the note is associated with a contact.
        title: Contact Relationship ID
      CorpCurrencyCode:
        type: string
        description: The corporate currency code associated with the account. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup ZCA_COMMON_CORPORATE_CURRENCY. Review and update the profile option using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Corporate Currency Code
        maxLength: 15
      CreatedBy:
        type: string
        description: 'Who column: indicates the user who created the row.'
        title: Created By
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: 'Who column: indicates the date and time of the creation of the row.'
        title: Creation Date
      CreatorPartyId:
        type: integer
        format: int64
        description: The unique party identifier for the note creator.
        title: Creator Party ID
      CurcyConvRateType:
        type: string
        description: The currency conversion rate type associated with the note. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup ZCA_COMMON_RATE_TYPE. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Currency Conversion Rate Type
        maxLength: 30
      CurrencyCode:
        type: string
        description: The currency code associated with the note. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup ZCA_COMMON_CORPORATE_CURRENCY. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Currency
        maxLength: 15
      DeleteFlag:
        type: boolean
        description: Indicates whether the note is to be deleted. If the value is Y, then the note has to be deleted. The default value is N.
        title: Delete Indicator
      LastUpdateDate:
        type: string
        format: date-time
        description: 'Who column: indicates the date and time of the last update of the row.'
        title: Last Update Date
      LastUpdateLogin:
        type: string
        description: The login of the user who last updated the record.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 64
      NoteId:
        type: integer
        format: int64
        description: Unique Note Identifier. This is the primary key of the notes table.
        title: Note Id
      NoteTxt:
        type: string
        description: This is the column which will store the actual note text.
        title: Note Text
      NoteTypeCode:
        type: string
        description: This is the note type code for categorization of note.
        title: Type
        maxLength: 30
      PartyId:
        type: integer
        format: int64
        description: The unique Identifier of the account to which the note is associated. One of PartyId, PartyNumber or PartySourceSystem and PartySourceSystemReferenceValue keys is required to uniquely identify the account record with which the address is associated.
        title: Party ID
      PartyName:
        type: string
        description: The name of a account party.
        title: Author
        maxLength: 360
      SourceObjectCode:
        type: string
        description: This is the source_object_code for the source object as defined in OBJECTS Metadata.
        title: Related Object Type
        maxLength: 30
      SourceObjectId:
        type: string
        description: This is the source_object_Uid for the source object (such as Activities, Opportunities etc) as defined in OBJECTS Metadata.
        title: Related Object
        maxLength: 64
      UpdateFlag:
        type: boolean
        description: Indicates whether the note can be updated. If the value is Y, then the note can be updated. The default value is N.
        title: Update Indicator
      VisibilityCode:
        type: string
        description: This is the attribute to specify the visibility level of the note.
        title: Visibility
        maxLength: 30
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: NoteTypeCode LOV
      description: 'The list of values indicating the classification of the note, such as Asset or Adjustment.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: NoteTypeCode; Target Attribute: MappedLookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/Note/{NoteId}/lov/NoteSourceTypeVA?fields=MappedLookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          MappedLookupCode:
            type: string
            description: The classification of the note associated with an account.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - NoteTypeCode
      effectiveMethod: get
    - rel: lov
      title: VisibilityCode LOV
      description: 'The list of values that indicates the visibility of the note, such as External or Internal.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: VisibilityCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/Note/{NoteId}/lov/NoteVisibilityLookupVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - VisibilityCode
      effectiveMethod: get
    - rel: lov
      title: CurrencyCode LOV
      description: 'The list of values that indicates the currency code used in the note, such as USD or GBP.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CurrencyCode; Target Attribute: CurrencyCode</li><li>Display Attribute: CurrencyCode</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/Note/{NoteId}/lov/RatedCurrenciesVA?fields=CurrencyCode
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          CurrencyCode:
            type: string
            description: The currency code used in the note, such as USD or GBP.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CurrencyCode
      effectiveMethod: get
  accounts-PrimaryAddress:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/accounts-PrimaryAddress-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  accounts-PrimaryAddress-item:
    type: object
    properties:
      AddressElementAttribute1:
        type: string
        description: An additional address element to support flexible address format.
        maxLength: 150
      AddressElementAttribute2:
        type: string
        description: An additional address element to support flexible address format.
        maxLength: 150
      AddressElementAttribute3:
        type: string
        description: An additional address element to support flexible address format.
        maxLength: 150
      AddressElementAttribute4:
        type: string
        description: An additional address element to support flexible address format.
        maxLength: 150
      AddressElementAttribute5:
        type: string
        description: An additional address element to support flexible address format.
        maxLength: 150
      AddressId:
        type: integer
        format: int64
        description: The unique identifier of the primary address.
      AddressLine1:
        type: string
        description: The first line of the primary address.
        title: Address Line 1
        maxLength: 240
      AddressLine2:
        type: string
        description: The second line of the primary address.
        title: Address Line 2
        maxLength: 240
      AddressLine3:
        type: string
        description: The third line The second line of the primary address.
        title: Address Line 3
        maxLength: 240
      AddressLine4:
        type: string
        description: The fourth line of the primary address.
        title: Address Line 4
        maxLength: 240
      AddressLinesPhonetic:
        type: string
        description: The phonetic or Kana representation of the Kanji address lines. This is used for addresses in Japan.
        title: Address Lines Phonetic
        maxLength: 560
      AddressNumber:
        type: string
        description: The primary address's internal unique identifier that is internally generated during creation. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update.
        title: Site Number
        maxLength: 30
      Building:
        type: string
        description: The building name or number in the primary address.
        title: Building
        maxLength: 240
      City:
        type: string
        description: The building name or number in the primary address.
        title: City
        maxLength: 60
      Comments:
        type: string
        description: The user-provided comments for the primary address.
        title: Comments
        maxLength: 2000
      CorpCurrencyCode:
        type: string
        description: The corporate currency code used by the CRM Extensibility framework.
        maxLength: 15
      Country:
        type: string
        description: The country code of the primary address. Review the list of country codes using the Manage Geographies task.
        title: Country
        maxLength: 2
      County:
        type: string
        description: The county of the primary address.
        title: County
        maxLength: 60
      CreatedBy:
        type: string
        description: The user who created the primary address record.
        title: Created By
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date when the record was created.
        title: Creation Date
      CurcyConvRateType:
        type: string
        description: The currency conversion rate type. This attribute is used by CRM Extensibility framework. A list of valid values are defined in the lookup ZCA_COMMON_RATE_TYPE. Review and update the profile option using the Setup and Maintenance work area, Manage Currency Profile Options task.
        maxLength: 30
      CurrencyCode:
        type: string
        description: The currency code. This attribute is used by CRM Extensibility framework. A list of valid values are defined in the lookup ZCA_COMMON_CORPORATE_CURRENCY. Review and update the profile option using the Setup and Maintenance work area, Manage Currency Profile Options task.
        title: Currency
        maxLength: 15
      DateValidated:
        type: string
        format: date
        description: The date when the primary address was last validated.
        title: Validated Date
      DeleteFlag:
        type: boolean
        description: Indicates whether the primary address is to be deleted. If the value is Y, then the primary address has to be deleted. The default value is N.
      Description:
        type: string
        description: The description of the location.
        title: Description
        maxLength: 2000
      FloorNumber:
        type: string
        description: The floor number of the primary address.
        title: Floor
        maxLength: 40
      FormattedAddress:
        type: string
        description: The formatted version of the primary address.
        title: Address
      FormattedMultiLineAddress:
        type: string
        description: The formatted multiline version of the primary address.
        title: Address
      HouseType:
        type: string
        description: Indicates the building type for the building in the address. A list of valid values are defined in the lookup HZ_HOUSE_TYPE. Review and update the codes using the Setup and Maintenance work area, Manage Standard Lookups task.
        title: House Type
        maxLength: 30
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the record was last updated.
        title: Last Updated Date
      LastUpdateLogin:
        type: string
        description: The login of the user who last updated the record.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 64
      Latitude:
        type: number
        description: The latitude information for the address. The latitude information for the location is used for spatial proximity and containment purposes.
        title: Latitude
      LocationDirections:
        type: string
        description: The directions to the address location.
        title: Location Directions
        maxLength: 640
      LocationId:
        type: integer
        format: int64
        description: The unique identifier for the location.
      Longitude:
        type: number
        description: The longitude information for the address. The longitude information for the location is used for spatial proximity and containment purposes.
        title: Longitude
      Mailstop:
        type: string
        description: The user-defined code that indicates a mail drop point within the organization.
        title: Mail Stop
        maxLength: 60
      PartyId:
        type: integer
        format: int64
        description: The unique identifier of the account associated with the address.
      PostalCode:
        type: string
        description: The postal code of the address.
        title: Postal Code
        maxLength: 60
      PostalPlus4Code:
        type: string
        description: The four-digit extension to the United States Postal ZIP code for the address.
        title: Postal Code Extension
        maxLength: 20
      Province:
        type: string
        description: The province of the address.
        title: Province
        maxLength: 60
      SourceSystem:
        type: string
        description: The name of external source system where the address is imported from. The values configured in setup task Trading Community Source System.
      SourceSystemReferenceValue:
        type: string
        description: The unique identifier for the address from the external source system specified in the attribute PartySourceSystem.
      State:
        type: string
        description: The state of the address.
        title: State
        maxLength: 60
      ValidatedFlag:
        type: boolean
        description: Indicates whether the location is validated. The value is internally set by system during address cleansing. If the value is Y, then the address is validated. The default value is N.
        title: Validated
      ValidationStatusCode:
        type: string
        description: A standardized status code describing the results of the validation. The value is internally set by system during address cleansing.
        title: Validation Status
        maxLength: 30
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: Country LOV
      description: 'The list of values indicating the country code of the address, such as US or UK.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Country; Target Attribute: TerritoryCode</li><li>Display Attribute: TerritoryShortName</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/PrimaryAddress/{AddressNumber}/lov/CountriesLOV?fields=TerritoryCode,TerritoryShortName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          TerritoryCode:
            type: string
            description: Lookup code for listing of countries
          TerritoryShortName:
            type: string
            description: Display name listing for countries
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - Country
      effectiveMethod: get
    - rel: lov
      title: HouseType LOV
      description: 'The list of values indicating the house type of the primary address, such as House Boat and Trailer.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: HouseType; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/PrimaryAddress/{AddressNumber}/lov/HouseTypeLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - HouseType
      effectiveMethod: get
  accounts-Relationship:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/accounts-Relationship-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  accounts-Relationship-item:
    type: object
    properties:
      Comments:
        type: string
        description: The user-provided comments for the relationship.
        title: Comments
        maxLength: 2000
      CreatedBy:
        type: string
        description: The user who created the record.
        title: Created By
        maxLength: 64
      CreatedByModule:
        type: string
        description: The module that created the account record.
        title: Created By Application
        maxLength: 30
      CreationDate:
        type: string
        format: date-time
        description: The date when the record was created.
        title: Creation Date
      EndDate:
        type: string
        format: date
        description: The date when the relationship ends.
        title: To Date
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the record was last updated.
        title: Last Updated Date
      LastUpdateLogin:
        type: string
        description: The login of the user who last updated the record.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 64
      ObjectPartyId:
        type: integer
        format: int64
        description: The unique identifier of the object party in this relationship.
      ObjectPartyNumber:
        type: string
        description: The alternate key identifier for the object party of the relationship.
        title: Registry ID
        maxLength: 30
      ObjectSourceSystem:
        type: string
        description: The name of the external source system for the object party in the relationship.
      ObjectSourceSystemReferenceValue:
        type: string
        description: The identifier for the object party in the relationship from the external source system.
      RelationshipCode:
        type: string
        description: The code of the relationship that specifies if this is a forward or a backward relationship code. A list of valid relationship codes is defined in the lookup PARTY_RELATIONS_TYPE. Review and update the codes using the Setup and Maintenance task, Manage Relationship Lookups.
        title: Relationship Code
        maxLength: 30
      RelationshipSourceSystem:
        type: string
        description: The name of external source system where the relationship is imported from. The values configured in setup task Trading Community Source System.
      RelationshipSourceSystemReferenceValue:
        type: string
        description: The unique identifier for the relationship from the external source system specified in the attribute RelationshipSourceSystem.
      RelationshipType:
        type: string
        description: The relationship type such as CUSTOMER_SUPPLIER. A list of valid relationship types is defined in the lookup HZ_RELATIONSHIP_TYPE. Review and update the codes using the Setup and Maintenance task, Manage Relationship Lookups.
        title: Relationship Type
        maxLength: 30
      StartDate:
        type: string
        format: date
        description: The date when the relationship was created.
        title: From Date
      Status:
        type: string
        description: Indicates if the relationship is active or inactive, such as A for active and I for inactive. A list of valid values is defined in the lookup HZ_STATUS. Review and update the codes using the Setup and Maintenance work area, Manage Standard Lookups task.
        maxLength: 1
      SubjectPartyId:
        type: integer
        format: int64
        description: The unique identifier of the subject party in this relationship.
      SubjectPartyNumber:
        type: string
        description: The alternate key identifier for the subject party of the relationship.
        title: Registry ID
        maxLength: 30
      SubjectSourceSystem:
        type: string
        description: The name of the external source system for the subject party in the relationship.
      SubjectSourceSystemReferenceValue:
        type: string
        description: The identifier for the subject party in the relationship from the external source system.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: RelationshipType LOV
      description: 'The list of values indicating the type of the relationship, such as Associate or Competitor.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RelationshipType; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/Relationship/{RelationshipRecId}/lov/RelationshipTypeLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RelationshipType
      effectiveMethod: get
    - rel: lov
      title: RelationshipCode LOV
      description: 'The list of values indicating the phrase used to describe the relationship, such as Associate of and Affiliate of.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RelationshipCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/Relationship/{RelationshipRecId}/lov/RelationshipCodeLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RelationshipCode
      effectiveMethod: get
  accounts-SalesTeamMember:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/accounts-SalesTeamMember-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  accounts-SalesTeamMember-item:
    type: object
    properties:
      AccessLevelCode:
        type: string
        description: The access level determines the type of access granted to the resource as well as managers of the organizations. The possible values are contained in the ZCA_ACCESS_LEVEL lookup.
        title: Access
        maxLength: 30
      AssignmentTypeCode:
        type: string
        description: The code indicating how the resource is assigned to the sales account team. The possible values are contained in the ZCA_ASSIGNMENT_TYPE lookup.
        title: Assignment Type
        maxLength: 30
      CreatedBy:
        type: string
        description: The user who created the record.
        title: Created By
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time the record was created.
        title: Creation Date
      EndDateActive:
        type: string
        format: date
        description: Indicates the date on which the association of resource is ended to the sales account.
        title: Archived Date
      LastUpdateDate:
        type: string
        format: date-time
        description: The date on which the record is last updated.
        title: Last Updated Date
      LastUpdateLogin:
        type: string
        description: The user login for the user who last updated the record.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 64
      LockAssignmentFlag:
        type: boolean
        description: Indicates if the automatic territory assignment can be set. If the value is True, then the automatic territory assignment cannot remove the sales account team resource. The default value is False. When a sales account team member is added manually, this flag is defaulted to `Y'.
        title: Locked
      MemberFunctionCode:
        type: string
        description: The lookup code indicating a sales account resource's role on the resource team such as Integrator, Executive Sponsor and Technical Account Manager. The code lookup is stored in FND_LOOKUPS.
        title: Function
        maxLength: 30
      ResourceEmailAddress:
        type: string
        description: The e-mail address of the resource.
      ResourceId:
        type: integer
        format: int64
        description: The resource identifier.
        title: Resource ID
      ResourceName:
        type: string
        description: The name of the sales team member.
      ResourceOrgName:
        type: string
        description: The name of the organization that  the sales team member belongs to.
      ResourcePartyNumber:
        type: string
        description: The unique public identifier of the resource record.
      ResourcePhoneNumber:
        type: string
        description: The primary phone number of the sales team member.
      ResourceRoleName:
        type: string
        description: The roles assigned to the sales team member.
      SalesProfileId:
        type: integer
        format: int64
        description: The identifier for the sales account.
        title: Sales Account ID
      StartDateActive:
        type: string
        format: date
        description: Indicates the date on which the association of resource is created to the sales account.
        title: Start Date
      TeamMemberId:
        type: integer
        format: int64
        description: The surrogate primary key for the member of the sales account resource team.
        title: Sales Account Resource ID
      UserLastUpdateDate:
        type: string
        format: date-time
        description: The date and time of the last update from mobile.
        title: User Last Update Date
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: MemberFunctionCode LOV
      description: 'The list of values indicating a sales account resource''s role on the resource team such as Integrator, Executive Sponsor and Technical Account Manager.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: MemberFunctionCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/SalesTeamMember/{TeamMemberId}/lov/MemberFunctionLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - MemberFunctionCode
      effectiveMethod: get
    - rel: lov
      title: AccessLevelCode LOV
      description: 'The list of values indicating the type of access granted to the resource as well as managers of the organizations, such as View only and Edit.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AccessLevelCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/child/SalesTeamMember/{TeamMemberId}/lov/AccessLevelLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - AccessLevelCode
      effectiveMethod: get
  accounts-item:
    type: object
    properties:
      Address:
        description: The address resource is used to view, create, and update addresses of an account. An address represents the location information of an account.
        title: Addresses
        $ref: '#/definitions/accounts-Address'
      AnalysisFiscalYear:
        type: string
        description: The fiscal year used as the source for financial information.
        title: Analysis Year
        maxLength: 5
      AssignmentExceptionFlag:
        type: string
        description: Indicates whether the sales account had the required dimensions to allow assignment manager to assign territories to the sales account. If the value is True, then the sales account has the dimensions. The default value is False.
        title: Assignment Exception Indicator
        maxLength: 1
      Attachment:
        description: The attachment resource is used to view, create, and update attachments of an account. An attachment includes additional information about an account.
        title: Account Attachments
        $ref: '#/definitions/accounts-Attachment'
      BusinessReport:
        type: string
        description: The Dun & Bradstreet business information report.
        title: D&B Business Report
      BusinessScope:
        type: string
        description: The class of business to which the account belongs, such as local, national, or international.
        title: Business Scope
        maxLength: 20
      CEOName:
        type: string
        description: The name of the organization's chief executive officer.
        title: Chief Executive Name
        maxLength: 240
      CEOTitle:
        type: string
        description: The formal title of the chief executive officer.
        title: Chief Executive Title
        maxLength: 240
      CertificationLevel:
        type: string
        description: The certification level the organization. A list of valid certification level codes is defined using the lookup HZ_PARTY_CERT_LEVEL. Review the Review and update the codes using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Certification Level
        maxLength: 30
      CertificationReasonCode:
        type: string
        description: The reason for the contact's current certification level assignment. A list of valid certification reason codes are defined using the lookup HZ_PARTY_CERT_REASON. Review and update the codes using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Certification Reason
        maxLength: 30
      Comments:
        type: string
        description: The corporate charter of the organization.
        title: Comments
        maxLength: 2000
      CongressionalDistrictCode:
        type: string
        description: The U.S. Congressional district code for the account.
        title: Congressional District
        maxLength: 2
      ControlYear:
        type: number
        description: The year when current ownership gained control of the organization.
        title: Organization Control Year
      CorpCurrencyCode:
        type: string
        description: The corporate currency code associated with the account. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup ZCA_COMMON_CORPORATE_CURRENCY. Review and update the profile option using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Corporate Currency Code
        maxLength: 15
      CorporationClass:
        type: string
        description: The taxation classification for corporation entities such as Chapter S in the US.
        title: Corporation Class
        maxLength: 60
      CreatedBy:
        type: string
        description: The user who created the account record.
        title: Created By
        maxLength: 64
      CreatedByModule:
        type: string
        description: The module that created the account record.
        title: Created by Application
      CreationDate:
        type: string
        format: date-time
        description: The date when the record was created.
        title: Creation Date
      CurrencyCode:
        type: string
        description: The currency code. This attribute is used by CRM Extensibility framework. A list of valid values are defined in the lookup ZCA_COMMON_CORPORATE_CURRENCY. Review and update the profile option using the Setup and Maintenance work area, Manage Currency Profile Options task.
        title: Currency
        maxLength: 15
      CurrentFiscalYearPotentialRevenueAmount:
        type: number
        description: The estimated revenues that can be earned by the organization during its current fiscal year.
        title: Current Fiscal Year's Potential Revenue
      CustomerClassification:
        description: The customer classifications resoure is used to view, created, and update the auxillary classifications for Accounts.
        title: Aux Classifications
        $ref: '#/definitions/accounts-CustomerClassification'
      DUNSCreditRating:
        type: string
        description: The Dun & Bradstreet credit rating.
        title: D&B Credit Rating
        maxLength: 5
      DUNSNumber:
        type: string
        description: The DUNS Number in freeform text format. The value not restricted to nine digit number.
        title: D-U-N-S Number
        maxLength: 30
      DataCloudStatus:
        type: string
        description: The enrichment status of the contact record from Data-as-a-Service. A list of valid values are defined in the lookup DATA_CLOUD_STATUS. Review and update the codes using the Setup and Maintenance work area, Manage Standard Lookups task.
        title: Enrichment Status
        maxLength: 30
      DeleteFlag:
        type: boolean
        description: Indicates if the account can be deleted.
        title: Delete Account
      DisadvantageIndicator:
        type: string
        description: Indicates whether the organization is considered disadvantaged by the US government under Title 8A.  If the value is Yes, the organization is considered disadvantaged under Title 8A. The default value is No.
        title: Disadvantaged indicator
        maxLength: 30
      DoNotConfuseWith:
        type: string
        description: Indicates that there is an organization that is similarly named.
        title: Do Not Confuse With
        maxLength: 255
      DomesticUltimateDUNSNumber:
        type: string
        description: The DUNS Number for the Domestic Ultimate. A Domestic Ultimate is the highest member of the same country in the organization's hierarchy. An organization can be its own Domestic Ultimate.
        title: Domestic Ultimate D-U-N-S Number
        maxLength: 30
      EmailAddress:
        type: string
        description: The e-mail address of the contact point for the organization.
        title: E-Mail
        maxLength: 320
      EmailFormat:
        type: string
        description: The preferred format for e-mail addressed to this organization, such as HTML or ASCII.
        title: E-Mail Format
        maxLength: 30
      EmployeesAtPrimaryAddress:
        type: string
        description: The qualifier to calculate the estimated number of employees at the primary address. A list of valid qualifier codes are defined using the lookup EMP_AT_PRIMARY_ADR_EST_IND. Review and update the codes using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Number of Employees at Identifying Address
        maxLength: 10
      EmployeesAtPrimaryAddressEstimation:
        type: string
        description: The estimated minimum number of employees at the primary address. A list of accepted values are defined in the lookup type EMP_AT_PRIMARY_ADR_MIN_IND. Review and update the values using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Number of Employees at Identifying Address Estimated Qualifier
        maxLength: 30
      EmployeesAtPrimaryAddressMinimum:
        type: string
        description: The qualifier to qualify calculation of employees at the primary address as minimum.
        title: Number of Employees at Identifying Address Minimum Qualifier
        maxLength: 30
      EmployeesAtPrimaryAddressText:
        type: string
        description: The number of employees at the referenced address in text format.
        title: Employees at Identifying Address
        maxLength: 12
      EmployeesTotal:
        type: number
        description: The total number of employees in the organization.
        title: Number of Employees
      ExistingCustomerFlag:
        type: string
        description: Indicates if there is an existing selling or billing relationship with the sales account. If the value is true, then there is an existing relationship with the sales account. The default value is False.
        title: Existing Sales Account
        maxLength: 1
      ExistingCustomerFlagLastUpdateDate:
        type: string
        format: date
        description: The date when the existing customer flag was last updated.
        title: Existing Indicator Last Update Date
      ExportIndicator:
        type: string
        description: Indicates whether the organization is an exporter. If the value is Y, then the organization is an exporter. The default value is N.
        title: Exporter indicator
        maxLength: 30
      FavoriteAccountFlag:
        type: boolean
        description: Indicates if the account is a favorite.
        title: Favorite Account
      FaxAreaCode:
        type: string
        description: The area code for the fax number.
        title: Area Code
        maxLength: 20
      FaxCountryCode:
        type: string
        description: The international country code for a fax number, such as 33 for France.
        title: Fax Country Code
        maxLength: 10
      FaxExtension:
        type: string
        description: The extension to the fax number of the organization.
        title: Extension
        maxLength: 20
      FaxNumber:
        type: string
        description: The fax number of the organization in the local format. The number should not include area code, country code, or extension.
        title: Phone
        maxLength: 40
      FiscalYearendMonth:
        type: string
        description: The last month of a fiscal year for the organization. The list of accepted values is defined in the lookup type MONTH.
        title: Fiscal Year End Month
        maxLength: 30
      FormattedFaxNumber:
        type: string
        description: The formatted phone number of the organization.
        title: Phone Number
      FormattedPhoneNumber:
        type: string
        description: The formatted phone number of the organization.
        title: Phone Number
      GeneralServicesAdministrationFlag:
        type: boolean
        description: Indicates whether organization is a US federal agency supported by the General Services Administration (GSA). If the value is Y, then the organization is supported by GSA. The default value is N.
        title: GSA indicator
      GlobalUltimateDUNSNumber:
        type: string
        description: The DUNS Number for the Global Ultimate. A Global Ultimate is the highest member in the organization's hierarchy. An organization can be its own Global Ultimate.
        title: Global Ultimate D-U-N-S Number
        maxLength: 30
      GrowthStrategyDescription:
        type: string
        description: The user-defined description of growth strategy.
        title: Growth Strategy Description
        maxLength: 2000
      HQBranchIndicator:
        type: string
        description: The status of this site, such as HQ, a branch, or a single location. A list of accepted values are defined in the lookup type HQ_BRANCH_IND.
        title: HQ branch indicator
        maxLength: 30
      HomeCountry:
        type: string
        description: The home country of the organization.
        title: Home Country
        maxLength: 2
      ImportIndicator:
        type: string
        description: Indicates whether the organization is an importer. If the value is Y, then the organization is an importer. The default value is N.
        title: Importer indicator
        maxLength: 30
      IndustryCode:
        type: string
        description: The Industry classification code. The classification codes are defined for every classification category as specified in IndustryCodeType attribute. Review and update the codes using the Setup and Maintenance work area, Manage Classification Categories task.
        title: Industry Code
      IndustryCodeType:
        type: string
        description: The industry classification category code type. It is defaulted to the value of profile option MOT_INDUSTRY_CLASS_CATEGORY. Review and update the codes using the Setup and Maintenance work area, Manage Classification Categories task.
        title: Industry Category
      LaborSurplusIndicator:
        type: string
        description: Indicates whether the organization operates in an area with a labor surplus. If the value is Y, then the organization operates in an area with a labor surplus. The default value is N.
        title: Labor surplus indicator
        maxLength: 30
      LastAssignmentDateTime:
        type: string
        format: date-time
        description: The date when the Sales Account Territory Assignment was last run by Assignment Manager.
        title: Last Assignment Date Time
      LastEnrichmentDate:
        type: string
        format: date
        description: The date when the record was last enriched.
        title: Last Enrichment Date
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the record was last updated.
        title: Last Updated Date
      LastUpdateLogin:
        type: string
        description: The login of the user who last updated the record.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 64
      LegalStatus:
        type: string
        description: The legal structure of the organization such as partnership, corporation, and so on.
        title: Legal Status
        maxLength: 30
      LineOfBusiness:
        type: string
        description: The type of business activities performed at this site.
        title: Line of Business
        maxLength: 240
      LocalActivityCode:
        type: string
        description: The local activity classification code.
        title: Local Activity Code
        maxLength: 30
      LocalActivityCodeType:
        type: string
        description: The local activity classification code type identifier.
        title: Local Activity Code Type
        maxLength: 30
      LocalBusinessIdentifier:
        type: string
        description: The primary identifier assigned to a businesses by a government agency such as Chamber of Commerce, or other authority. It is often used by countries other than USA.
        title: Common Business Identifier
        maxLength: 60
      LocalBusinessIdentifierType:
        type: string
        description: The lookup that represents most common business identifier in a country such as Chamber of Commerce Number in Italy, Government Registration Number in Taiwan. A list of accepted values are defined in the lookup type LOCAL_BUS_IDEN_TYPE.
        title: Common Business Identifier Type
        maxLength: 30
      MinorityOwnedIndicator:
        type: string
        description: Indicates whether the organization is primarily owned by ethnic or racial minorities. If the value is Y, then the organization is owned by ethnic or racial minorities. company is primarily owned by ethnic or racial minorities. The default value is N.
        title: Minority-owned indicator
        maxLength: 30
      MinorityOwnedType:
        type: string
        description: The type of minority-owned firm.
        title: Type of Minority-Owned Organization
        maxLength: 30
      MissionStatement:
        type: string
        description: The corporate charter of organization in user-defined text format.
        title: Mission Statement
        maxLength: 2000
      NamedFlag:
        type: boolean
        description: Indicates if the sales account is a named sales account. If the value is True, then the account is a named account. The default value is False.
        title: Named Account
      NextFiscalYearPotentialRevenueAmount:
        type: number
        description: The estimated revenue of the organization to be earned during its next fiscal year.
        title: Next Fiscal Year's Potential Revenue
      Note:
        description: The note resource is used to capture comments, information, or instructions for an account.
        title: Notes
        $ref: '#/definitions/accounts-Note'
      OrganizationName:
        type: string
        description: The name of the account.
        title: Organization Name
        maxLength: 360
      OrganizationSize:
        type: string
        description: The size of the organization based on its revenue, number of employees, and so on.
        title: Organization Size
        maxLength: 30
      OrganizationType:
        type: string
        description: The type of the organization.
        title: Organization Type
        maxLength: 30
      OutOfBusinessIndicator:
        type: string
        description: Indicates whether the organization is out of business. If the value is Y, then the organization is out of business. The default value is N.
        title: Out of business indicator
        maxLength: 30
      OwnerEmailAddress:
        type: string
        description: The e-mail address of the employee resource that owns and manages the sales account. The owner is a valid employee resource defined within Sales Cloud.
        title: Primary E-Mail
        maxLength: 320
      OwnerName:
        type: string
        description: The name of the employee resource that owns and manages the sales account.
        title: Owner
        maxLength: 360
      OwnerPartyId:
        type: integer
        format: int64
        description: The unique identifier of a valid employee resource who owns and manages the sales account.
        title: Owner ID
      OwnerPartyNumber:
        type: string
        description: The party number of a valid employee resource who owns and manages the sales account.
        title: Registry ID
        maxLength: 30
      ParentAccountName:
        type: string
        description: The name of the parent account in the hierarchy.
        title: Account Name
      ParentAccountPartyId:
        type: integer
        format: int64
        description: The party Id of the parent account within the hierarchy. To assign a parent account to a sales account, you must provide the parent account's party ID, party number, or source system reference.
        title: Parent Account Id
      ParentAccountPartyNumber:
        type: string
        description: The party number of the parent account within the hierarchy.
        title: Parent Account Registry Id
      ParentAccountSourceSystem:
        type: string
        description: The source system of the parent account within the hierarchy.
        title: Parent Source System
      ParentAccountSourceSystemReferenceValue:
        type: string
        description: The source system reference of the parent account within the hierarchy.
        title: Parent Account Source System Reference
      ParentDUNSNumber:
        type: string
        description: The DUNS Number of the organization or the parent entity that owns a majority stake of the organization's capital stock. The parent entity can be a subsidiary of another corporation. If the parent also has branches, then it is regarded as headquarters as well as a parent company.<br>A headquarters is a business establishment that has branches or divisions reporting to it, and is financially responsible for those branches or divisions. If the headquarters has more than 50% of capital stock owned by another corporation, it also will be a subsidiary. If it owns more than 50% of capital stock of another corporation, then it is also a parent.
        title: Parent D-U-N-S Number
        maxLength: 30
      ParentOrSubsidiaryIndicator:
        type: string
        description: Indicates whether the organization is a parent or subsidiary.
        title: Subsidiary indicator
        maxLength: 30
      PartyId:
        type: integer
        format: int64
        description: The unique identifier of the account.
        title: Party ID
      PartyNumber:
        type: string
        description: The unique alternate identifier for the account party. You can update the value if the profile option HZ_GENERATE_PARTY_NUMBER is set to True. The default value is a concatenation of the value specified in the profile option ZCA_PUID_PREFIX and a unique system generated sequence number.
        title: Registry ID
        maxLength: 30
      PartyStatus:
        type: string
        description: Indicates the status of the account. This is an internally-used column and the values are defined in the lookup HZ_STATUS. Review and update the codes using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Status
        maxLength: 1
      PartyUniqueName:
        type: string
        description: The unique account name displayed on account related screens. The default value is the concatenation of attributes AccountName and UniqueNameSuffix. If the attribute UniqueNameSuffix is nil, then the AccountName is concatenated with a system generated number.
        title: Name
        maxLength: 900
      PhoneAreaCode:
        type: string
        description: The area code for the telephone number.
        title: Area Code
        maxLength: 20
      PhoneCountryCode:
        type: string
        description: The international country code for a telephone number, such as 33 for France.
        title: Phone Country Code
        maxLength: 10
      PhoneExtension:
        type: string
        description: The extension to the phone number of the organization.
        title: Extension
        maxLength: 20
      PhoneNumber:
        type: string
        description: The phone number of the organization in the local format. The number should not include area code, country code, or extension.
        title: Phone
        maxLength: 40
      PreferredContactMethod:
        type: string
        description: The preferred contact method of the organization. The accepted values are defined in the lookup type HZ_PREFERRED_CONTACT_METHOD. Review and update the codes using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Preferred Contact Method
        maxLength: 30
      PreferredFunctionalCurrency:
        type: string
        description: The organization's default currency code. A list of valid currency codes are defined during the application setup.
        title: Preferred Functional Currency
        maxLength: 15
      PrimaryAddress:
        description: The primary address resource is used to view, create, and update primary address of an account. A primary address is the default communication address of an account.
        title: Primary Addresses
        $ref: '#/definitions/accounts-PrimaryAddress'
      PrimaryContactEmail:
        type: string
        description: The e-mail address of the account's primary contact.
        title: Contact E-Mail
      PrimaryContactName:
        type: string
        description: The name of the account's primary contact.
        title: Primary Contact
      PrimaryContactPartyId:
        type: integer
        format: int64
        description: The unique identifier of the primary contact of the account.
        title: Primary Contact Party ID
      PrimaryContactPartyNumber:
        type: string
        description: The party number of the primary contact of the account.
        title: Primary Contact Party Number
      PrimaryContactPhone:
        type: string
        description: The phone number of the account's primary contact.
        title: Contact Phone
      PrimaryContactSourceSystem:
        type: string
        description: The name of external source system where the primary contact of the account is imported from.
        title: Primary Contact Source System
      PrimaryContactSourceSystemReferenceValue:
        type: string
        description: The unique identifier for the account's primary contact from the external source system specified.
        title: Primary Contact Source System Reference
      PrincipalName:
        type: string
        description: The name of the highest ranking person in the organization.
        title: Principal Name
        maxLength: 240
      PrincipalTitle:
        type: string
        description: The title of the highest ranking person in the organization.
        title: Principal Title
        maxLength: 240
      PublicPrivateOwnershipFlag:
        type: boolean
        description: Indicates whether the organization is publically or privately owned. If the value is Y, then the organization is a privately owned organization. The default value is N.
        title: Private ownership
      RecordSet:
        type: string
        description: The record set to display search results.
        title: Record Set
        maxLength: 30
      RegistrationType:
        type: string
        description: Indicates the type of registration, such as nonprofit. The accepted values are defined in the lookup type REGISTRATION_TYPE.
        title: Registration Type
        maxLength: 30
      Relationship:
        description: The relationship resource is used to view, create, and update account relationships.
        title: Relationships
        $ref: '#/definitions/accounts-Relationship'
      RentOrOwnIndicator:
        type: string
        description: Indicates if this contact owns or rents his or her residence. A list of valid values for rent, own, and lease are defined in the lookup OWN_RENT_IND. Review and update the codes using the Setup and Maintenance work area, Manage Standard Lookups task.
        title: Rent or own indicator
        maxLength: 30
      SalesProfileStatus:
        type: string
        description: A valid user-defined status of the sales account.
        title: Status
        maxLength: 30
      SalesTeamMember:
        description: The sales team member resource represents a resource party and is assigned to a sales account team. A sales account team member has a defined access role for the sales account.
        title: Account Resources
        $ref: '#/definitions/accounts-SalesTeamMember'
      SmallBusinessIndicator:
        type: string
        description: Indicates whether the organization is considered as a small business. If the value is Y, then the organization is considered as a small business. The default value is N.
        title: Small business indicator
        maxLength: 30
      SourceSystem:
        type: string
        description: The name of external source system where the account party is imported from. The values configured in setup task Trading Community Source System.
        title: Source System
      SourceSystemReferenceValue:
        type: string
        description: The unique identifier for the account party from the external source system specified in the attribute SourceSystem.
        title: Source System Reference
      StockSymbol:
        type: string
        description: The corporate stock symbol of the organization as listed in stock exchanges.
        title: Stock Symbol
        maxLength: 20
      TaxpayerIdentificationNumber:
        type: string
        description: The taxpayer identification number that is often a unique identifier of the organization, such as income taxpayer Id in USA and fiscal code or NIF in Europe.
        title: Taxpayer Identification Number
        maxLength: 20
      TotalEmployeesEstimatedIndicator:
        type: string
        description: Indicates if the employee total is estimated. The accepted values are defined in the lookup type TOTAL_EMP_EST_IND.
        title: Number of Employees Estimated Qualifier
        maxLength: 30
      TotalEmployeesIndicator:
        type: string
        description: Indicates if subsidiaries are included in the calculation of total employees. The accepted values are defined in the lookup type TOTAL_EMPLOYEES_INDICATOR.
        title: Number of Employees Includes Subsidiaries
        maxLength: 30
      TotalEmployeesMinimumIndicator:
        type: string
        description: Indicates if the number is a minimum, maximum, or average number of total employees. The accepted values are defined in the lookup type TOTAL_EMP_MIN_IND.
        title: Number of Employees Minimum Qualifier
        maxLength: 30
      TotalEmployeesText:
        type: string
        description: The total number of employees in text format.
        title: Total Number of Employees
        maxLength: 60
      Type:
        type: string
        description: The account type that defines if the account is a sales account or a prospect or any other party type. The accepted values are defined in the lookup type ZCA_ACCOUNT_TYPE. It is defaulted to ZCA_CUSTOMER if no value is provided.
        title: Type
        maxLength: 30
      URL:
        type: string
        description: The uniform resource locator or a website containing information about the organization.
        title: URL
        maxLength: 2000
      UniqueNameSuffix:
        type: string
        description: The suffix used to generate the attribute PartyUniqueName. The suffix is concatenated to the OrganizationName attribute to generate the PartyUniqueName. The primary address is defaulted as the suffix.
        title: Name Suffix
        maxLength: 540
      UpdateFlag:
        type: boolean
        description: Indicates if the record can be updated.
        title: Update Account
      WomanOwnedIndicator:
        type: string
        description: Indicates whether the organization is primarily owned by women. If the value is Y, then the organization is primarily owned by women. The default value is N.
        title: Woman-owned indicator
        maxLength: 30
      YearEstablished:
        type: integer
        format: int32
        description: The year that the organization started it business operations.
        title: Year Established
      YearIncorporated:
        type: integer
        format: int32
        description: The year that the business was formally incorporated.
        title: Year Incorporated
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: Type LOV
      description: 'The list of values indicating if the type of the account, such as customer or prospect.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Type; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/SalesProfileTypeLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Indicates if the account is a customer, prospect, or a custom account type.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - Type
      effectiveMethod: get
    - rel: lov
      title: SalesProfileStatus LOV
      description: 'The list of values indicating the status of the account, such as active or inactive.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SalesProfileStatus; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/SalesProfileStatusLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - SalesProfileStatus
      effectiveMethod: get
    - rel: lov
      title: IndustryCode LOV
      description: 'The list of values indicating the standard industry classification code.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: IndustryCode; Target Attribute: ClassCode</li><li>Display Attribute: ClassCodeMeaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/IndustryCodeVA?fields=ClassCode,ClassCodeMeaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          ClassCode:
            type: string
            description: The standard industry classification code for the account.
          ClassCodeMeaning:
            type: string
            description: The industry classification category code type. A list of accepted values is defined in the lookup MOT_INDUSTRY_CLASS_CATEGORY.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - IndustryCode
      effectiveMethod: get
    - rel: lov
      title: FiscalYearendMonth LOV
      description: 'The list of values indicating the last fiscal month of the organization, such as March or December.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: FiscalYearendMonth; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/FiscalYearendMonthLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - FiscalYearendMonth
      effectiveMethod: get
    - rel: lov
      title: PreferredFunctionalCurrency LOV
      description: 'The list of values indicating the default currency used by the organization, such as USD or GBP.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PreferredFunctionalCurrency; Target Attribute: CurrencyCode</li><li>Display Attribute: CurrencyCode</li><li>Display Attribute: Name</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/CurrenciesLOV?fields=CurrencyCode,Name
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          CurrencyCode:
            type: string
            description: Currency code for the account.
          Name:
            type: string
            description: Display name for currencies used by an organization such as US Dollar or Euro.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - PreferredFunctionalCurrency
      effectiveMethod: get
    - rel: lov
      title: CertificationLevel LOV
      description: 'The list of values indicating the certification level of the account, such as Minimum or Highest.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CertificationLevel; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/CertificationLevelLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CertificationLevel
      effectiveMethod: get
    - rel: lov
      title: CertificationReasonCode LOV
      description: 'The list of values indicating the current certification level assignment of the account, such as Manual or Third-Party.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CertificationReasonCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/CertificationReasonCodeLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CertificationReasonCode
      effectiveMethod: get
    - rel: lov
      title: RentOrOwnIndicator LOV
      description: 'The list of values indicating if the organization owns or rents it current premises.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RentOrOwnIndicator; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/RentOwnIndLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RentOrOwnIndicator
      effectiveMethod: get
    - rel: lov
      title: HQBranchIndicator LOV
      description: 'The list of values indicating if the site is a headquarter or branch, such as Branch, Division, or Headquarters.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: HQBranchIndicator; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/HQBranchIndLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - HQBranchIndicator
      effectiveMethod: get
    - rel: lov
      title: EmployeesAtPrimaryAddressEstimation LOV
      description: 'The list of values indicating the number of employees in the organization at the primary location, such as minimum or maximum.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: EmployeesAtPrimaryAddressEstimation; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/EmployeeAtPrimaryAdrEstIndLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - EmployeesAtPrimaryAddressEstimation
      effectiveMethod: get
    - rel: lov
      title: EmployeesAtPrimaryAddressMinimum LOV
      description: 'The list of values indicating the minimum number of employees in the organization at the primary location.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: EmployeesAtPrimaryAddressMinimum; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/EmployeeAtPrimaryAdrMinimumIndLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - EmployeesAtPrimaryAddressMinimum
      effectiveMethod: get
    - rel: lov
      title: TotalEmployeesEstimatedIndicator LOV
      description: 'The list of values indicating the method used to calculate the total number of employees, such as actual or estimated.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: TotalEmployeesEstimatedIndicator; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/TotalEmployeeEstIndLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - TotalEmployeesEstimatedIndicator
      effectiveMethod: get
    - rel: lov
      title: TotalEmployeesIndicator LOV
      description: 'The list of values indicating if the total number of employees includes employees from subsidiaries, such as Subsidiaries not included.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: TotalEmployeesIndicator; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/TotalEmployeesIndLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - TotalEmployeesIndicator
      effectiveMethod: get
    - rel: lov
      title: TotalEmployeesMinimumIndicator LOV
      description: 'The list of values indicating if the total number of employees is a minimum, average, or maximum.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: TotalEmployeesMinimumIndicator; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/TotalEmployeeMinimumIndLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - TotalEmployeesMinimumIndicator
      effectiveMethod: get
    - rel: lov
      title: OrganizationSize LOV
      description: 'The list of values indicating the organization size based on the revenue, number of employees, and so on. The sample values are Small, Medium, and Large.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: OrganizationSize; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/OrgSizeLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - OrganizationSize
      effectiveMethod: get
    - rel: lov
      title: LegalStatus LOV
      description: 'The list of values indicating the legal status of the organization, such as Mutual Company, Cooperative, and General partnership.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: LegalStatus; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/LegalStatusLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - LegalStatus
      effectiveMethod: get
    - rel: lov
      title: RegistrationType LOV
      description: 'The list of values indicating the registration status of the organization, such as Profit and Nonprofit.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RegistrationType; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/RegistrationTypeLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RegistrationType
      effectiveMethod: get
    - rel: lov
      title: HomeCountry LOV
      description: 'The list of values indicating the home country of the organization, such as US or UK.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: HomeCountry; Target Attribute: TerritoryCode</li><li>Display Attribute: TerritoryShortName</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/TerritoriesLOV?fields=TerritoryCode,TerritoryShortName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          TerritoryCode:
            type: string
            description: The home country of the organization, such as US or UK.
          TerritoryShortName:
            type: string
            description: The country codes such as US, IN, and CA.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - HomeCountry
      effectiveMethod: get
    - rel: lov
      title: LocalBusinessIdentifierType LOV
      description: 'The list of values indicating the most common business identifier in a country such as Chamber of Commerce Number in Italy, Government Registration Number in Taiwan.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: LocalBusinessIdentifierType; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/LocalBusIdenTypeLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - LocalBusinessIdentifierType
      effectiveMethod: get
    - rel: lov
      title: CurrencyCode LOV
      description: 'The list of values indicating the currency code used by the organization, such as USD and GBP.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CurrencyCode; Target Attribute: CurrencyCode</li><li>Display Attribute: Name</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/RatedCurrenciesLOV?fields=CurrencyCode,Name
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          CurrencyCode:
            type: string
            description: Currency code for the account.
          Name:
            type: string
            description: Display name for currencies used by an organization such as US Dollar or Euro.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CurrencyCode
      effectiveMethod: get
    - rel: lov
      title: DataCloudStatus LOV
      description: 'The list of values indicating the enrichment status of the organization record, such as Enriched, Deleted, or Matched.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DataCloudStatus; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/DataCloudStatusLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - DataCloudStatus
      effectiveMethod: get
    - rel: lov
      title: PartyStatus LOV
      description: 'The list of values indicating the status of the account, such as active or inactive.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PartyStatus; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/StatusLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - PartyStatus
      effectiveMethod: get
    - rel: lov
      title: PreferredContactMethod LOV
      description: 'The list of values indicating the preferred contact method of the account, such as mail and phone.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PreferredContactMethod; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/PreferredContactMethodLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - PreferredContactMethod
      effectiveMethod: get
    - rel: lov
      title: PhoneCountryCode LOV
      description: 'The list of values indicating the international country codes for the phone number.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PhoneCountryCode; Target Attribute: PhoneCountryCode</li><li>Display Attribute: PhoneCountryCode</li><li>Display Attribute: TerritoryShortName</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/PhoneCountryCodeLOV?fields=PhoneCountryCode,TerritoryShortName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          PhoneCountryCode:
            type: string
            description: The international country code for a phone number, such as 33 for France.
          TerritoryShortName:
            type: string
            description: The area code for the account's phone number.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - PhoneCountryCode
      effectiveMethod: get
    - rel: lov
      title: FaxCountryCode LOV
      description: 'The list of values indicating the international country codes for the fax number.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: FaxCountryCode; Target Attribute: PhoneCountryCode</li><li>Display Attribute: PhoneCountryCode</li><li>Display Attribute: TerritoryShortName</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/FaxCountryCodeLOV?fields=PhoneCountryCode,TerritoryShortName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          PhoneCountryCode:
            type: string
            description: The international country code for a fax number, such as 33 for France.
          TerritoryShortName:
            type: string
            description: The area code for the account's fax number.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - FaxCountryCode
      effectiveMethod: get
    - rel: lov
      title: RecordSet LOV
      description: 'The list of values indicating the record set to display search values, such as AllAccounts and MyAccounts.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RecordSet; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/SearchFilters?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RecordSet
      effectiveMethod: get
    - rel: lov
      title: FavoriteAccountFlag LOV
      description: 'The list of values indicating the account is a favorite account.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: FavoriteAccountFlag; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/accounts/{PartyNumber}/lov/FavoriteAccountFlagLookupLOV?fields=LookupCode
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - FavoriteAccountFlag
      effectiveMethod: get
  contacts:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/contacts-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  contacts-Address:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/contacts-Address-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  contacts-Address-AddressPurpose:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/contacts-Address-AddressPurpose-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  contacts-Address-AddressPurpose-item:
    type: object
    properties:
      AddressPurposeId:
        type: integer
        format: int64
        description: The unique identifier for the address purpose of an address.
      DeleteFlag:
        type: boolean
        description: Indicates if the address purpose for an address was deleted. If the value is True, then the address purpose is deleted. The default value is False.
      Purpose:
        type: string
        description: The use or purpose of the address.
        title: Purpose
        maxLength: 30
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  contacts-Address-item:
    type: object
    properties:
      AddrElementAttribute1:
        type: string
        description: The additional address element to support flexible address format.
        maxLength: 150
      AddrElementAttribute2:
        type: string
        description: The additional address element to support flexible address format.
        maxLength: 150
      AddrElementAttribute3:
        type: string
        description: The additional address element to support flexible address format.
        maxLength: 150
      AddrElementAttribute4:
        type: string
        description: The additional address element to support flexible address format.
        maxLength: 150
      AddrElementAttribute5:
        type: string
        description: The additional address element to support flexible address format.
        maxLength: 150
      Address1:
        type: string
        description: The first line for address.
        title: Address Line 1
        maxLength: 240
      Address2:
        type: string
        description: The second line for address.
        title: Address Line 2
        maxLength: 240
      Address3:
        type: string
        description: The third line for address.
        title: Address Line 3
        maxLength: 240
      Address4:
        type: string
        description: The fourth line for address.
        title: Address Line 4
        maxLength: 240
      AddressId:
        type: integer
        format: int64
        description: The unique identifier for the address that is generated internally during create. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update.
      AddressLinesPhonetic:
        type: string
        description: The phonetic or kana representation of the Kanji address lines (used in Japan).
        title: Address Lines Phonetic
        maxLength: 560
      AddressNumber:
        type: string
        description: The unique alternate identifier for the address. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update. If not specified, then it is automatically generated. A list of accepted values is defined in the profile option ZCA_PUID_PREFIX concatenated with an internally generated unique sequence number.
        title: Site Number
        maxLength: 30
      AddressPurpose:
        description: The address purpose resource is used to view, create, or modify the address purpose. The address purpose describes the use of an address, such as shipping address or billing address.
        title: Contact Address Purposes
        $ref: '#/definitions/contacts-Address-AddressPurpose'
      Building:
        type: string
        description: The specific building name or number at a given address.
        title: Building
        maxLength: 240
      City:
        type: string
        description: The city element of Address.
        title: City
        maxLength: 60
      ClliCode:
        type: string
        description: The Common Language Location Identifier (CLLI) code.
        title: CLLI Code
        maxLength: 60
      Comments:
        type: string
        description: User comments for the address.
        title: Comments
        maxLength: 2000
      CorpCurrencyCode:
        type: string
        description: The corporate currency code associated with the addresses. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup ZCA_COMMON_CORPORATE_CURRENCY. Review and update the profile option using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        maxLength: 15
      Country:
        type: string
        description: The country code of the address. This attribute is defined in the TERRITORY_CODE column in the FND_TERRITORY table.
        title: Country
        maxLength: 2
      County:
        type: string
        description: The county element of Address.
        title: County
        maxLength: 60
      CreatedBy:
        type: string
        description: The user who created the address record.
        title: Created By
        maxLength: 64
      CreatedByModule:
        type: string
        description: The application module that created this organization record. The default value for CreatedByModule is HZ_WS for all Web service based creation. <br>A list of accepted values is defined in the lookup type HZ_CREATED_BY_MODULES. Review and update the value for this attribute using the Setup and Maintenance task work area, Manage Trading Community Common Lookups task.
      CreationDate:
        type: string
        format: date-time
        description: The date and time when the address record was created.
        title: Creation Date
      CurcyConvRateType:
        type: string
        description: The currency conversion rate type associated with the address. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup ZCA_COMMON_RATE_TYPE. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        maxLength: 30
      CurrencyCode:
        type: string
        description: The currency code associated with the address. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup ZCA_COMMON_CORPORATE_CURRENCY. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Currency
        maxLength: 15
      DateValidated:
        type: string
        format: date
        description: The date when the address was last validated.
        title: Validated Date
      Description:
        type: string
        description: An extensive description of the location of the address.
        title: Description
        maxLength: 2000
      DoNotMailFlag:
        type: boolean
        description: Indicates if this address should be used for mailing. If the value is True, then the address should not be used for mailing. The default value is False.
        title: Contact Preferences
      EffectiveDate:
        type: string
        format: date
        description: The date when the address becomes effective.
      EndDateActive:
        type: string
        format: date
        description: Date on which this address is no longer active.
        title: To Date
      FloorNumber:
        type: string
        description: The specific floor number at a given address or in a particular building when building number is provided.
        title: Floor
        maxLength: 40
      FormattedAddress:
        type: string
        description: The formatted address information.
        title: Address
      FormattedMultilineAddress:
        type: string
        description: The formatted multiple line address information.
        title: Address
      HouseType:
        type: string
        description: The type of building. A list of accepted values for this attribute is defined in the lookup HZ_HOUSE_TYPE. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Standard Lookups task.
        title: House Type
        maxLength: 30
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the address data was last updated.
        title: Last Updated Date
      LastUpdateLogin:
        type: string
        description: The session login associated to the user who last updated the address record.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the address record.
        title: Last Updated By
        maxLength: 64
      Latitude:
        type: number
        description: Used to store latitude information for the location for spatial proximity and containment purposes.
        title: Latitude
      LocationDirections:
        type: string
        description: The directions to the location.
        title: Location Directions
        maxLength: 640
      LocationId:
        type: integer
        format: int64
        description: The unique identifier for this location.
      Longitude:
        type: number
        description: Used to store longitude information for the location for spatial proximity and containment purposes.
        title: Longitude
      Mailstop:
        type: string
        description: A user-defined code to indicate a mail drop point within their organization.
        title: Mail Stop
        maxLength: 60
      ObjectVersionNumber:
        type: integer
        format: int32
        description: Used to implement optimistic locking. This number is incremented every time that the row is updated. The number is compared at the start and end of a transaction to detect whether another session has updated the row since it was queried.
      PartyId:
        type: integer
        format: int64
        description: The unique Identifier of the contact to which the address is associated. One of PartyId, PartyNumber or PartySourceSystem and PartySourceSystemReferenceValue keys is required to uniquely identify the contact record with which the address is associated.
      PartyNumber:
        type: string
        description: The alternate unique identifier of the contact to which the address is associated. One of PartyId, PartyNumber or PartySourceSystem and PartySourceSystemReferenceValue keys is required to identify the contact record with which the address is associated. The default value for PartyNumber is the value specified in the profile option ZCA_PUID_PREFIX concatenated with a unique generated sequence number. You can update the PartyNymber depending on the profile option HZ_GENERATE_PARTY_NUMBER. A list of accepted values is defined in the profile option HZ_GENERATE_PARTY_NUMBER. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
      PartySourceSystem:
        type: string
        description: The name of external source system of the contact with which the address is associated. Part of Alternate Key for the contact record (along with PartyourceSystemReferenceValue). One of PartyId, PartyNumber or PartySourceSystem and PartySourceSystemReferenceValue keys is required to identify the contact record with which the address is associated. A list of accepted values should be pre-defined in the lookup type HZ_ORIG_SYSTEMS_VL. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Source Systems task.
      PartySourceSystemReferenceValue:
        type: string
        description: The identifier from external source system for the contact with which the address is associated. Part of Alternate Key (along with PartySourceSystem). One of PartyId, PartyNumber or PartySourceSystem and PartySourceSystemReferenceValue keys is required to identify the contact record with which the address is associated.
      PostalCode:
        type: string
        description: The postal code as defined by the formal countrywide postal system.
        title: Postal Code
        maxLength: 60
      PostalPlus4Code:
        type: string
        description: The four digit extension to the United States Postal ZIP code.
        title: Postal Code Extension
        maxLength: 20
      PrimaryFlag:
        type: boolean
        description: Indicates if this is the primary address of the contact irrespective of the context. If the value is True, then the address is the primary address of the contact. The default value is False.
        title: Primary
      Province:
        type: string
        description: The province element of Address.
        title: Province
        maxLength: 60
      SourceSystem:
        type: string
        description: The name of external source system for the address denoted by a code, which is defined by an administrator as part of system setup. The value of SourceSystem should be predefined in the lookup type HZ_ORIG_SYSTEMS_VL. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Source Systems. SourceSystem and SourceSystemReference combination is unique and is used as the foreign key to identify an address.
      SourceSystemReferenceValue:
        type: string
        description: The identifier for the address from the external source. SourceSystem and SourceSystemReference combination is unique and is used as the foreign key to identify an address.
      StartDateActive:
        type: string
        format: date
        description: Date on which this address becomes active.
        title: From Date
      State:
        type: string
        description: The state element of Address.
        title: State
        maxLength: 60
      Status:
        type: string
        description: The status of the address. A list of accepted values is defined in the lookup HZ_STATUS. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        maxLength: 1
      ValidatedFlag:
        type: boolean
        description: Indicates if the location was validated. If the value is True, then the location is validated. The default value is False. The value is internally set by system during address cleansing.
        title: Validated
      ValidationStartDate:
        type: string
        format: date
        description: The date when the address validation started. The value is internally set by system during address cleansing.
      ValidationStatusCode:
        type: string
        description: The standardized status code describing the results of the address validation. The value is internally set by system during address cleansing.
        title: Validation Status
        maxLength: 30
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: Country LOV
      description: 'The list of values indicating the country of the address, such as US and UK.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Country; Target Attribute: TerritoryCode</li><li>Display Attribute: TerritoryShortName</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/Address/{AddressNumber}/lov/CountriesLOV?fields=TerritoryCode,TerritoryShortName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          TerritoryCode:
            type: string
            description: Lookup code for listing of countries.
          TerritoryShortName:
            type: string
            description: Display name listing for countries.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - Country
      effectiveMethod: get
    - rel: lov
      title: HouseType LOV
      description: 'The list of values indicating the house type of the address, such as House Boat and Trailer.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: HouseType; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/Address/{AddressNumber}/lov/HouseTypeLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - HouseType
      effectiveMethod: get
  contacts-Attachment:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/contacts-Attachment-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  contacts-Attachment-item:
    type: object
    properties:
      CategoryName:
        type: string
        description: The category of the attachment.
        title: Category
        maxLength: 30
      ContentRepositoryFileShared:
        type: boolean
        description: Indicates whether the attachment is shared.
        title: Shared
      CreatedBy:
        type: string
        description: The user who created the attachment.
        maxLength: 255
      CreationDate:
        type: string
        format: date-time
        description: The date when the attachment record was created.
      DatatypeCode:
        type: string
        description: A value that  indicates the data type.
        title: Type
        maxLength: 30
      Description:
        type: string
        description: The description of the attachment.
        title: Description
        maxLength: 255
      DmFolderPath:
        type: string
        description: The folder path of the attachment.
        maxLength: 1000
      ErrorStatusCode:
        type: string
        description: The error code, if any, for the attachment.
        title: Error Status Code
      ErrorStatusMessage:
        type: string
        description: The error message, if any, for the attachment.
        title: Error Status Message
      ExpirationDate:
        type: string
        format: date-time
        description: The expiration date of the contents in the attachment.
        title: Expiration Date
      FileContents:
        type: string
        format: binary
        description: The contents of the attachment.
        title: File Contents
      FileName:
        type: string
        description: The file name of the attachment.
        title: File Name
        maxLength: 2048
      FileUrl:
        type: string
        description: The URL of the attachment.
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the record was last updated.
        title: Last Update Date
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 255
      Title:
        type: string
        description: The title of the attachment.
        title: Title
      UploadedFileContentType:
        type: string
        description: The content type of the attachment.
      UploadedFileLength:
        type: integer
        format: int64
        description: The length of the attachment file.
      UploadedFileName:
        type: string
        description: The name of the attachment file.
      UploadedText:
        type: string
        description: The text of the attachment.
      Uri:
        type: string
        description: The URI of the attachment.
        title: Uri
        maxLength: 4000
      Url:
        type: string
        description: The URL of the attachment.
        maxLength: 4000
      UserName:
        type: string
        description: The login associated with the attachment.
        title: Category Name
        maxLength: 255
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  contacts-CustomerClassification:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/contacts-CustomerClassification-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  contacts-CustomerClassification-item:
    type: object
    properties:
      ClassCategory:
        type: string
        description: The name of the classification category.
        title: Classification Category
        maxLength: 30
      ClassCode:
        type: string
        description: A valid classification code corresponding to the classification category.
        title: Classification Code
        maxLength: 30
      CodeAssignmentId:
        type: integer
        format: int64
        description: The unique identifier for the customer classification assignment.
        title: Code Assignment ID
      CreatedBy:
        type: string
        description: The user who created the record.
        title: Created By
        maxLength: 64
      CreatedByModule:
        type: string
        description: The application that created the classification.
        title: Created by Module
        maxLength: 30
      CreationDate:
        type: string
        format: date-time
        description: The date when the record was created.
        title: Creation Date
      EndDateActive:
        type: string
        format: date
        description: The date on which the classification code is no longer valid.
        title: End Date
      IsAuxClassificationFlag:
        type: boolean
        description: Indicates whether the classification category is a custom group classification category.
        title: Auxiliary Classification Status
      IsIndustryFlag:
        type: boolean
        description: Indicates whether the classification category is an industry group classification category.
        title: Industry Type Status
      IsOrgTypeFlag:
        type: boolean
        description: Indicates whether the classification category is an organization type classification category.
        title: Organization Type Status
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the record was last updated.
        title: Last Updated Date
      LastUpdateLogin:
        type: string
        description: The login of the user who last updated the record.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 64
      PartyId:
        type: integer
        format: int64
        description: The unique Identifier of the account, contact or household to which the classification is associated.
        title: Party ID
      PartyNumber:
        type: string
        description: The unique alternate identifier of the account, contact, or household to which the classification is associated.
        title: Party Number
        maxLength: 30
      PartySourceSystem:
        type: string
        description: The name of the external source system of the account, contact, or household with which the classification is associated.
        title: Party Source System
      PartySourceSystemReferenceValue:
        type: string
        description: Identifier from external source system for the account, contact or household with which the classification is associated.
        title: Party Source System Reference Value
      PartyType:
        type: string
        description: Indicates the type of the party, such as account, contact, or household.
        title: Party Type
        maxLength: 30
      PrimaryFlag:
        type: boolean
        description: Indicates if the customer classification is the primary classification.
        title: Primary
      SourceSystem:
        type: string
        description: The name of external source system where the customer classification is imported from. The values are configured in Setup and Maintenance work area, Manage Trading Community Source Systems task.
        title: Source System
      SourceSystemReferenceValue:
        type: string
        description: The unique identifier for the customer classification in the external source.
        title: Source System Reference Value
      StartDateActive:
        type: string
        format: date
        description: The date on which the customer classification was created.
        title: Start Date
      Status:
        type: string
        description: Indicates if the code assignment is active or inactive. The code assignment is active if the value is A, and inactive if the value is I.
        title: Status
        maxLength: 1
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  contacts-Note:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/contacts-Note-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  contacts-Note-item:
    type: object
    properties:
      ContactRelationshipId:
        type: integer
        format: int64
        description: The identifier of the relationship populated when the note is associated with a contact.
        title: Contact Relationship ID
      CorpCurrencyCode:
        type: string
        description: The corporate currency code of the note associated with the contact. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup ZCA_COMMON_CORPORATE_CURRENCY. Review and update the profile option using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Corporate Currency Code
        maxLength: 15
      CreatedBy:
        type: string
        description: The user who created the note record.
        title: Created By
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time when the note record was created.
        title: Creation Date
      CreatorPartyId:
        type: integer
        format: int64
        description: The unique party identifier for the note creator.
        title: Creator Party ID
      CurcyConvRateType:
        type: string
        description: The currency conversion rate type associated with the note. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup ZCA_COMMON_RATE_TYPE. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Currency Conversion Rate Type
        maxLength: 30
      CurrencyCode:
        type: string
        description: The currency code associated with the note. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup ZCA_COMMON_CORPORATE_CURRENCY. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Currency
        maxLength: 15
      DeleteFlag:
        type: boolean
        description: Indicates whether the note is to be deleted. If the value is Y, then the note has to be deleted. The default value is N.
        title: Delete Indicator
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the note data was last updated.
        title: Last Update Date
      LastUpdateLogin:
        type: string
        description: The login of the user who last updated the record.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 64
      NoteId:
        type: integer
        format: int64
        description: The unique Identifier of the note associated with the contact. This is the primary key of the notes table.
        title: Note Id
      NoteTxt:
        type: string
        description: The actual note text.
        title: Note Text
      NoteTypeCode:
        type: string
        description: This code for categorization of the note type.
        title: Type
        maxLength: 30
      PartyId:
        type: integer
        format: int64
        description: The unique Identifier of the contact to which the note is associated. One of PartyId, PartyNumber or PartySourceSystem and PartySourceSystemReferenceValue keys is required to uniquely identify the contact record with which the address is associated.
        title: Party ID
      PartyName:
        type: string
        description: The name of a contact party.
        title: Author
        maxLength: 360
      SourceObjectCode:
        type: string
        description: The code of the source object such as Activities, Opportunities, as defined in OBJECTS Metadata.
        title: Related Object Type
        maxLength: 30
      SourceObjectId:
        type: string
        description: The primary key identifier of the source object such as Activities, Opportunities, as defined in OBJECTS Metadata.
        title: Related Object
        maxLength: 64
      UpdateFlag:
        type: boolean
        description: Indicates whether the note can be updated. If the value is Y, then the note can be updated. The default value is N.
        title: Update Indicator
      VisibilityCode:
        type: string
        description: The visibility level of the note.
        title: Visibility
        maxLength: 30
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: NoteTypeCode LOV
      description: 'The list of values indicating the classification of the note, such as Asset or Adjustment.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: NoteTypeCode; Target Attribute: MappedLookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/Note/{NoteId}/lov/NoteSourceTypeVA?fields=MappedLookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          MappedLookupCode:
            type: string
            description: The list of values indicating the classification of the note associated with a contact.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - NoteTypeCode
      effectiveMethod: get
    - rel: lov
      title: VisibilityCode LOV
      description: 'The list of values that indicates the visibility of the note, such as External or Internal.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: VisibilityCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/Note/{NoteId}/lov/NoteVisibilityLookupVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - VisibilityCode
      effectiveMethod: get
    - rel: lov
      title: CurrencyCode LOV
      description: 'The list of values that indicates the currency code used in the note, such as USD or GBP.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CurrencyCode; Target Attribute: CurrencyCode</li><li>Display Attribute: CurrencyCode</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/Note/{NoteId}/lov/RatedCurrenciesVA?fields=CurrencyCode
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          CurrencyCode:
            type: string
            description: The currency code used in the note, such as USD or GBP.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CurrencyCode
      effectiveMethod: get
  contacts-PictureAttachment:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/contacts-PictureAttachment-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  contacts-PictureAttachment-item:
    type: object
    properties:
      CategoryName:
        type: string
        description: The category of the picture attachment.
        title: Category
        maxLength: 30
      ContentRepositoryFileShared:
        type: boolean
        description: Indicates if the attachment is shared.
        title: Shared
      CreatedBy:
        type: string
        description: The user who uploaded the picture attachment.
        maxLength: 255
      CreationDate:
        type: string
        format: date-time
        description: The date when the picture attachment was uploaded.
      DatatypeCode:
        type: string
        description: The data type for the picture attachment.
        title: Type
        maxLength: 30
      Description:
        type: string
        description: The description of the picture attachment.
        title: Description
        maxLength: 255
      DmFolderPath:
        type: string
        description: The folder path where the picture attachment exists.
        maxLength: 1000
      ErrorStatusCode:
        type: string
        description: The error code, if any, for the attachment.
        title: Error Status Code
      ErrorStatusMessage:
        type: string
        description: The error message, if any, for the attachment.
        title: Error Status Message
      ExpirationDate:
        type: string
        format: date-time
        description: The expiration date of the contents in the attachment.
        title: Expiration Date
      FileContents:
        type: string
        format: binary
        description: The contents of the attachment.
        title: File Contents
      FileName:
        type: string
        description: The name of the attachment file.
        title: File Name
        maxLength: 2048
      FileUrl:
        type: string
        description: The URL of the attachment file.
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the record was last updated.
        title: Last Update Date
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 255
      Title:
        type: string
        description: The title of the attachment.
        title: Title
      UploadedFileContentType:
        type: string
        description: The content type of the attachment.
      UploadedFileLength:
        type: integer
        format: int64
        description: The length of the attachment file.
      UploadedFileName:
        type: string
        description: The name of the attachment file.
      UploadedText:
        type: string
        description: The text uploaded in the attachment.
      Uri:
        type: string
        description: The URI of the attachment.
        title: Uri
        maxLength: 4000
      Url:
        type: string
        description: The URL of the attachment.
        maxLength: 4000
      UserName:
        type: string
        description: The login associated with the attachment.
        title: Category Name
        maxLength: 255
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  contacts-PrimaryAddress:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/contacts-PrimaryAddress-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  contacts-PrimaryAddress-item:
    type: object
    properties:
      AddressElementAttribute1:
        type: string
        description: The additional address element to support flexible address format.
        maxLength: 150
      AddressElementAttribute2:
        type: string
        description: The additional address element to support flexible address format.
        maxLength: 150
      AddressElementAttribute3:
        type: string
        description: The additional address element to support flexible address format.
        maxLength: 150
      AddressElementAttribute4:
        type: string
        description: The additional address element to support flexible address format.
        maxLength: 150
      AddressElementAttribute5:
        type: string
        description: The additional address element to support flexible address format.
        maxLength: 150
      AddressId:
        type: integer
        format: int64
        description: The unique identifier for the address that is generated internally during create. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update.
      AddressLine1:
        type: string
        description: The first line for address.
        title: Address Line 1
        maxLength: 240
      AddressLine2:
        type: string
        description: The second line for address.
        title: Address Line 2
        maxLength: 240
      AddressLine3:
        type: string
        description: The third line for address.
        title: Address Line 3
        maxLength: 240
      AddressLine4:
        type: string
        description: The fourth line for address.
        title: Address Line 4
        maxLength: 240
      AddressLinesPhonetic:
        type: string
        description: The phonetic or kana representation of the Kanji address lines (used in Japan).
        title: Address Lines Phonetic
        maxLength: 560
      AddressNumber:
        type: string
        description: The unique primary identifier for the address. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update. If not specified, then it is automatically generated. A list of accepted values is defined in the profile option ZCA_PUID_PREFIX concatenated with an internally generated unique sequence number.
        title: Site Number
        maxLength: 30
      Building:
        type: string
        description: The specific building name or number at a given address.
        title: Building
        maxLength: 240
      City:
        type: string
        description: The city element of Address.
        title: City
        maxLength: 60
      Comments:
        type: string
        description: User comments for the address.
        title: Comments
        maxLength: 2000
      CorpCurrencyCode:
        type: string
        description: The corporate currency code associated with the addresses. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup ZCA_COMMON_CORPORATE_CURRENCY. Review and update the profile option using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        maxLength: 15
      Country:
        type: string
        description: The country code of the address. This attribute is defined in the TERRITORY_CODE column in the FND_TERRITORY table.
        title: Country
        maxLength: 2
      County:
        type: string
        description: The county element of Address.
        title: County
        maxLength: 60
      CreatedBy:
        type: string
        description: The user who created the address record.
        title: Created By
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time when the address record was created.
        title: Creation Date
      CurcyConvRateType:
        type: string
        description: The currency conversion rate type associated with the address. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup ZCA_COMMON_RATE_TYPE. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        maxLength: 30
      CurrencyCode:
        type: string
        description: The currency code associated with the address. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup ZCA_COMMON_CORPORATE_CURRENCY. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Currency
        maxLength: 15
      DateValidated:
        type: string
        format: date
        description: The date when the address was last validated.
        title: Validated Date
      DeleteFlag:
        type: boolean
        description: Indicates if the primary address was deleted. If the value is True, then the primary address is deleted. The default value is False.
      Description:
        type: string
        description: An extensive description of the location of the address.
        title: Description
        maxLength: 2000
      FloorNumber:
        type: string
        description: The specific floor number at a given address or in a particular building when building number is provided.
        title: Floor
        maxLength: 40
      FormattedAddress:
        type: string
        description: The formatted address information.
        title: Address
      FormattedMultiLineAddress:
        type: string
        description: The formatted multiple line address information.
        title: Address
      HouseType:
        type: string
        description: The type of building. A list of accepted values is defined in the lookup HZ_HOUSE_TYPE. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Standard Lookups task.
        title: House Type
        maxLength: 30
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the address data was last updated.
        title: Last Updated Date
      LastUpdateLogin:
        type: string
        description: The session login associated to the user who last updated the address record.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the address record.
        title: Last Updated By
        maxLength: 64
      Latitude:
        type: number
        description: Used to store latitude information for the location for spatial proximity and containment purposes.
        title: Latitude
      LocationDirections:
        type: string
        description: The directions to the location.
        title: Location Directions
        maxLength: 640
      LocationId:
        type: integer
        format: int64
        description: The unique identifier for this location.
      Longitude:
        type: number
        description: Used to store longitude information for the location for spatial proximity and containment purposes.
        title: Longitude
      Mailstop:
        type: string
        description: A user-defined code to indicate a mail drop point within their organization.
        title: Mail Stop
        maxLength: 60
      PartyId:
        type: integer
        format: int64
        description: The unique Identifier of the contact to which the primary address is associated. One of PartyId, PartyNumber or PartySourceSystem and PartySourceSystemReferenceValue keys is required to uniquely identify the contact record with which the address is associated.
      PostalCode:
        type: string
        description: The postal code as defined by the formal countrywide postal system.
        title: Postal Code
        maxLength: 60
      PostalPlus4Code:
        type: string
        description: The four digit extension to the United States Postal ZIP code.
        title: Postal Code Extension
        maxLength: 20
      Province:
        type: string
        description: The province element of Address.
        title: Province
        maxLength: 60
      SourceSystem:
        type: string
        description: The name of external source system for the address denoted by a code, which is defined by an administrator as part of system setup. The value of SourceSystem should be predefined in the lookup type HZ_ORIG_SYSTEMS_VL. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Source Systems. SourceSystem and SourceSystemReference combination is unique and is used as the foreign key to identify an address.
      SourceSystemReferenceValue:
        type: string
        description: The identifier for the address from the external source. SourceSystem and SourceSystemReference combination is unique and is used as the foreign key to identify an address.
      State:
        type: string
        description: The state element of Address.
        title: State
        maxLength: 60
      ValidatedFlag:
        type: boolean
        description: Indicates if the location was validated. If the value is True, then the location is validated. The default value is False. The value is internally set by system during address cleansing.
        title: Validated
      ValidationStatusCode:
        type: string
        description: The date when the address validation started. The value is internally set by system during address cleansing.
        title: Validation Status
        maxLength: 30
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: Country LOV
      description: 'The list of values indicating the person''s country, such as US and UK.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Country; Target Attribute: TerritoryCode</li><li>Display Attribute: TerritoryShortName</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/PrimaryAddress/{AddressNumber}/lov/CountriesLOV?fields=TerritoryCode,TerritoryShortName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          TerritoryCode:
            type: string
            description: The home country of the organization, such as US or UK.
          TerritoryShortName:
            type: string
            description: The code of the home country of the organization.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - Country
      effectiveMethod: get
    - rel: lov
      title: HouseType LOV
      description: 'The list of values indicating the person''s house type, such as House Boat or Trailer.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: HouseType; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/PrimaryAddress/{AddressNumber}/lov/HouseTypeLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - HouseType
      effectiveMethod: get
  contacts-Relationship:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/contacts-Relationship-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  contacts-Relationship-item:
    type: object
    properties:
      Comments:
        type: string
        description: User comments for the relationship.
        title: Comments
        maxLength: 2000
      CreatedBy:
        type: string
        description: The user who created the relationship record.
        title: Created By
        maxLength: 64
      CreatedByModule:
        type: string
        description: The application module that created this organization record. The default value for CreatedByModule is HZ_WS for all Web service based creation. <br>A list of accepted values is defined in the lookup type HZ_CREATED_BY_MODULES. Review and update the value for this attribute using the Setup and Maintenance task work area, Manage Trading Community Common Lookups task.
        title: Created By Application
        maxLength: 30
      CreationDate:
        type: string
        format: date-time
        description: The date and time when the relationship record was created.
        title: Creation Date
      EndDate:
        type: string
        format: date
        description: The date when the relationship ends.
        title: To Date
      LastUpdateDate:
        type: string
        format: date-time
        description: The date and time when the relationship data was last updated.
        title: Last Updated Date
      LastUpdateLogin:
        type: string
        description: The session login associated to the user who last updated the relationship record.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the relationship record.
        title: Last Updated By
        maxLength: 64
      ObjectPartyId:
        type: integer
        format: int64
        description: The primary key identifier of the contact, in this relationship. One of ObjectPartyId, ObjectPartyNumber and ObjectSourceSystem along with ObjectSourceSystemReferenceValue combination is used to identify the contact party of the relationship.
      ObjectPartyNumber:
        type: string
        description: The unique alternate identifier for the relationship of the contact party. One of ObjectPartyId, ObjectPartyNumber and ObjectSourceSystem along with ObjectSourceSystemReferenceValue combination is used to identify the object party of the relationship.
        title: Registry ID
        maxLength: 30
      ObjectSourceSystem:
        type: string
        description: The name of external source system for the contact party in the relationship, which are defined by an admin as part of system setup. One of ObjectPartyId, ObjectPartyNumber and ObjectSourceSystem along with ObjectSourceSystemReferenceValue combination is used to identify the object party of the relationship. A list of accepted values should be pre-defined in the lookup type HZ_ORIG_SYSTEMS_VL. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Source Systems task.
      ObjectSourceSystemReferenceValue:
        type: string
        description: The identifier from external source system for the relationship of the contact party. One of ObjectPartyId, ObjectPartyNumber and ObjectSourceSystem along with ObjectSourceSystemReferenceValue combination is used to identify the contact party of the relationship.
      RelationshipCode:
        type: string
        description: The code for a forward or a backward relationship. A list of accepted relationship values is defined in the lookup PARTY_RELATIONS_TYPE. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Relationship Lookups.
        title: Relationship Code
        maxLength: 30
      RelationshipSourceSystem:
        type: string
        description: The name of external source system for the relationship, which are defined by an Admin as part of system setup.
      RelationshipSourceSystemReferenceValue:
        type: string
        description: The identifier from external source system for the relationship.
      RelationshipType:
        type: string
        description: The type of relationship of a contact party, such as CUSTOMER_SUPPLIER. A list of accepted relationship type values is defined in the lookup HZ_RELATIONSHIP_TYPE. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Relationship Lookups task.
        title: Relationship Type
        maxLength: 30
      StartDate:
        type: string
        format: date
        description: Date on which this relationship becomes active.
        title: From Date
      Status:
        type: string
        description: The status of the relationship. Indicates if this is an active or inactive relationship. The values A indicate an active relationship and I an inactive relationship. This is an internal column and user is not expected to pass in a value. A list of accepted values is defined in the lookup HZ_STATUS. Review and update the values for this attribute using the Setup and Maintenance work area, Manage Standard Lookups task.
        maxLength: 1
      SubjectPartyId:
        type: integer
        format: int64
        description: The primary key identifier of the subject in this relationship. One of SubjectPartyId, SubjectPartyNumber and SubjectSourceSystem along with SubjectSourceSystemReferenceValue combination is used to identify the subject party of the relationship.
      SubjectPartyNumber:
        type: string
        description: The alternate unique identifier for the subject party of the relationship. One of SubjectPartyId, SubjectPartyNumber and SubjectSourceSystem along with SubjectSourceSystemReferenceValue combination is used to identify the subject party of the relationship.
        title: Registry ID
        maxLength: 30
      SubjectSourceSystem:
        type: string
        description: The name of external source system for the subject party in the relationship, which are defined by an Admin as part of system setup. One of SubjectPartyId, SubjectPartyNumber and SubjectSourceSystem along with SubjectSourceSystemReferenceValue combination is used to identify the subject party of the relationship. A list of accepted values should be predefined in the lookup type HZ_ORIG_SYSTEMS_VL. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Source Systems task.
      SubjectSourceSystemReferenceValue:
        type: string
        description: The identifier from external source system for the subject party in the relationship. One of SubjectPartyId, SubjectPartyNumber and SubjectSourceSystem along with SubjectSourceSystemReferenceValue combination is used to identify the subject party of the relationship.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: RelationshipType LOV
      description: 'The list of values indicating the type of the relationship, such as Associate or Competitor.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RelationshipType; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/Relationship/{RelationshipRecId}/lov/RelationshipTypeLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RelationshipType
      effectiveMethod: get
    - rel: lov
      title: RelationshipCode LOV
      description: 'The list of values indicating the phrase used to describe the relationship, such as Associate of and Affiliate of.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RelationshipCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/Relationship/{RelationshipRecId}/lov/RelationshipCodeLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RelationshipCode
      effectiveMethod: get
  contacts-SalesTeamMember:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/contacts-SalesTeamMember-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  contacts-SalesTeamMember-item:
    type: object
    properties:
      AccessLevelCode:
        type: string
        description: The type of access granted to the resource as well as managers of the organizations. A list of accepted values is defined in the lookup ZCA_ACCESS_LEVEL. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Standard Lookups task.
        title: Access
        maxLength: 30
      AssignmentTypeCode:
        type: string
        description: The code indicating how the resource is assigned to the sales account team. A list of accepted values is defined in the lookup ZCA_ASSIGNMENT_TYPE. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Standard Lookups task.
        title: Assignment Type
        maxLength: 30
      CreatedBy:
        type: string
        description: The user who created the sales team member record.
        title: Created By
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time when the sale team member record was created.
        title: Creation Date
      EndDateActive:
        type: string
        format: date
        description: Date on which this sales team member is no longer active.
        title: Archived Date
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the sales team member record was last updated.
        title: Last Updated Date
      LastUpdateLogin:
        type: string
        description: The session login associated to the user who last updated the sales team member record.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the sales team member record.
        title: Last Updated By
        maxLength: 64
      LockAssignmentFlag:
        type: boolean
        description: Indicates if the automatic territory assignment can be set. If the value is True, then the automatic territory assignment cannot remove the sales account team resource. The default value is False. When a sales account team member is added manually, this flag is defaulted to `Y'.
        title: Locked
      MemberFunctionCode:
        type: string
        description: The code indicating the role of a sales team member in the resource team such as Integrator, Executive Sponsor, and Technical Account Manager. A list of accepted values is defined in the lookup FND_LOOKUPS. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Function
        maxLength: 30
      ResourceEmailAddress:
        type: string
        description: The e-mail address of the resource.
      ResourceId:
        type: integer
        format: int64
        description: The unique party ID for the existing resource record in Oracle Sales Cloud.
        title: Resource ID
      ResourceName:
        type: string
        description: The name of the sales team member.
      ResourceOrgName:
        type: string
        description: The name of the organization that  the sales team member belongs to.
      ResourcePartyNumber:
        type: string
        description: The unique public identifier of the resource record.
      ResourcePhoneNumber:
        type: string
        description: The primary phone number of the sales team member.
      ResourceRoleName:
        type: string
        description: The roles assigned to the sales team member.
      SalesProfileId:
        type: integer
        format: int64
        description: The unique identifier of the sales profile of the resource.
        title: Sales Account ID
      StartDateActive:
        type: string
        format: date
        description: Date on which this sales team member becomes active.
        title: Start Date
      TeamMemberId:
        type: integer
        format: int64
        description: The unique alternate identifier of the sales team member.
        title: Sales Account Resource ID
      UserLastUpdateDate:
        type: string
        format: date-time
        description: The date and time when the sales team member was last updated from mobile.
        title: User Last Update Date
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: MemberFunctionCode LOV
      description: 'The list of values indicating a sales account resource''s role on the resource team such as Integrator, Executive Sponsor and Technical Account Manager.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: MemberFunctionCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/SalesTeamMember/{TeamMemberId}/lov/MemberFunctionLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - MemberFunctionCode
      effectiveMethod: get
    - rel: lov
      title: AccessLevelCode LOV
      description: 'The list of values indicating the type of access granted to the resource as well as managers of the organizations, such as View only and Edit.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AccessLevelCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/child/SalesTeamMember/{TeamMemberId}/lov/AccessLevelLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - AccessLevelCode
      effectiveMethod: get
  contacts-item:
    type: object
    properties:
      AcademicTitle:
        type: string
        description: The part of the person's title that denotes the academic qualification, such as Dr. Jane Smith.
        title: Academic Title
        maxLength: 30
      AccountName:
        type: string
        description: The name of the sales account that this contact belongs to.
        title: Related Account
        maxLength: 360
      AccountPartyId:
        type: integer
        format: int64
        description: The unique identifier of sales account that this contact belongs to. To specify the account for a contact, you can provide an Account's party ID, PartyNumber, SourceSystem, or SourceSystemReference.
        title: Related Account Party ID
      AccountPartyNumber:
        type: string
        description: The party number of the sales account that this contact belongs to. To specify the account for a contact, you can provide an Account's party ID, PartyNumber, SourceSystem, or SourceSystemReference.
        title: Related Account Party Number
        maxLength: 30
      AccountSourceSystem:
        type: string
        description: The source system code of the sales account that this contact belongs to. To specify the account for a contact, you can provide an Account's party ID, PartyNumber, SourceSystem, or SourceSystemReference.
        title: Related Account Source System
      AccountSourceSystemReferenceValue:
        type: string
        description: The source system reference value of the sales account that this contact belongs to. To specify the account for a contact, you can provide an Account's party ID, PartyNumber, SourceSystem, or SourceSystemReference.
        title: Related Account Source System Reference
      Address:
        description: The address resource is used to view, create, or modify an address. An address represents the location information of an account, contact, or household.
        title: Contact Addresses
        $ref: '#/definitions/contacts-Address'
      AssignmentExceptionFlag:
        type: string
        description: Indicates whether the sales account has the required dimensions to allow Assignment Manager to assign territories. If the value is True, then the Assignment Manager doesn't assign territories to the sales account. The default value is False.
        title: Assignment Exception Indicator
        maxLength: 1
      Attachment:
        description: The attachment resource is used to view, create, and update attachments of a contact. An attachment includes additional information about a contact.
        title: Contact Attachments
        $ref: '#/definitions/contacts-Attachment'
      CertificationLevel:
        type: string
        description: The certification level of a contact. A list of accepted values is defined in the lookup HZ_PARTY_CERT_LEVEL. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Certification Level
        maxLength: 30
      CertificationReasonCode:
        type: string
        description: The reason for the contact's current certification level assignment. A list of accepted values is defined using the lookup HZ_PARTY_CERT_REASON. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Certification Reason
        maxLength: 30
      ClassificationCategory:
        type: string
        description: A valid classification category code for the contact. This is defined by an admin and is marked as primary.
        title: Classification Category
      ClassificationCode:
        type: string
        description: A valid classification code corresponding to the classification category, which is marked as primary.
        title: Classification Code
      Comments:
        type: string
        description: The textual comments about a contact.
        title: Comments
        maxLength: 2000
      ContactIsPrimaryForAccount:
        type: string
        description: The preferred contact for the account.
        title: Favorite
      ContactName:
        type: string
        description: The derived name of the contact.
        title: Name
        maxLength: 450
      ContactRole:
        type: string
        description: Indicates the role of the contact.
        title: Contact Role
        maxLength: 60
      ContactUniqueName:
        type: string
        description: The unique contact name displayed on contact related screens. The default value for ContactUniqueName is the concatenation of attributes ContactName and UniqueNameSuffix. If the attribute UniqueNameSuffix is nil, then the ContactName is concatenated with a system generated number.
        title: Name
        maxLength: 900
      CreatedBy:
        type: string
        description: The user who created the contact record.
        title: Created By
        maxLength: 64
      CreatedByModule:
        type: string
        description: The application module that created this contact record. The default value for CreatedByModule is HZ_WS for all Web service based creation. <br>A list of accepted values is defined in the lookup type HZ_CREATED_BY_MODULES. Review and update the value for this attribute using the Setup and Maintenance task work area, Manage Trading Community Common Lookups task.
        title: Created by Application
      CreationDate:
        type: string
        format: date-time
        description: The date and time when the contact record was created.
        title: Creation Date
      CurrencyCode:
        type: string
        description: The currency code associated with the contact. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup ZCA_COMMON_CORPORATE_CURRENCY. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Currency
        maxLength: 15
      CustomerClassification:
        description: The customer classifications resource is used to view, create, and update auxillary classifications for a contact.
        title: Aux Classifications
        $ref: '#/definitions/contacts-CustomerClassification'
      DataCloudStatus:
        type: string
        description: The enrichment status of the contact record from Data cloud. A list of accepted values is defined in the lookup DATA_CLOUD_STATUS. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Standard Lookups task.
        title: Enrichment Status
        maxLength: 30
      DateOfBirth:
        type: string
        format: date
        description: The date when the person was born.
        title: Date of Birth
      DateOfDeath:
        type: string
        format: date
        description: The date when the person died.
        title: Date of Death
      DeceasedFlag:
        type: boolean
        description: Indicates whether the person is deceased or not. If the value is True, then the person is deceased. The default value is False.
        title: Person deceased
      DeclaredEthnicity:
        type: string
        description: The declared ethnicity of the person.
        title: Declared Ethnicity
        maxLength: 60
      DeleteFlag:
        type: boolean
        description: Indicates if the contact can be deleted.
        title: Delete Contact
      Department:
        type: string
        description: The free form text used to name the department for the contact.
        title: Department
        maxLength: 60
      DepartmentCode:
        type: string
        description: The department code for the contact. A list of accepted values is defined in the lookup DEPARTMENT_TYPE. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Contact Lookups task.
        title: Department Code
        maxLength: 30
      DoNotCallFlag:
        type: string
        description: Indicates if the user can call the person or not. If the value is True, then the user must not call the person. The default value is False. <br>A list of accepted values is defined using the lookup YES_NO. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Common Lookups task.
        title: Do not call
        maxLength: 1
      DoNotContactFlag:
        type: string
        description: Indicates if the user can contact the person or not by phone, e-mail, or mail. If the value is True, then the user must not contact the person. The default value is False. <br>A list of accepted values is defined using the lookup YES_NO. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Common Lookups task.
        title: Do not contact
        maxLength: 1
      DoNotEmailFlag:
        type: string
        description: Indicates if the user can e-mail the person or not. If the value is True, then the user must not contact the person by e-mail. The default value is False. <br>A list of accepted values is defined using the lookup YES_NO. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Common Lookups task.
        title: Do not e-mail
        maxLength: 1
      DoNotMailFlag:
        type: string
        description: Indicates if the user can send mail to the person or not.  If the value is True, then the user must not contact the person by mail. The default value is False. <br>A list of accepted values is defined using the lookup YES_NO. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Common Lookups task.
        title: Do not mail
        maxLength: 1
      EmailAddress:
        type: string
        description: The e-mail address of the contact point.
        title: E-Mail
        maxLength: 320
      EmailFormat:
        type: string
        description: The preferred format for e-mail addressed to this address such as HTML or ASCII. A list of accepted values is defined using the lookup EMAIL_FORMAT. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Standard Lookups task.
        title: E-Mail Format
        maxLength: 30
      ExistingCustomerFlag:
        type: string
        description: Indicates whether there is an existing selling or billing relationship with the sales account. Such relationships are defined by the existence of a Sell_To or Bill_To address. If the value is True, then there is an existing relationship with the sales account. The default value is False.
        title: Existing Sales Account
        maxLength: 1
      ExistingCustomerFlagLastUpdateDate:
        type: string
        format: date
        description: The date when the ExistingCustomerFlag was last modified. It is internally populated by the application.
        title: Existing Indicator Last Update Date
      FavoriteContactFlag:
        type: boolean
        description: Indicates whether the person is a key contact. If the value is True, then person is a key contact. The default value is False.
        title: Favorite Contact
      FaxAreaCode:
        type: string
        description: The area code within a country code.
        title: Area Code
        maxLength: 20
      FaxCountryCode:
        type: string
        description: The international country code for a telephone number, such as 33 for France.
        title: Fax Country Code
        maxLength: 10
      FaxExtension:
        type: string
        description: The additional number addressed after initial connection to an internal telephone system.
        title: Extension
        maxLength: 20
      FaxNumber:
        type: string
        description: A telephone number formatted in the local format without the area code, country code, or extension.
        title: Phone
        maxLength: 40
      FirstName:
        type: string
        description: The first name of the person.
        title: First Name
        maxLength: 150
      FormattedFaxNumber:
        type: string
        description: The formatted fax number information.
        title: Phone Number
      FormattedHomePhoneNumber:
        type: string
        description: The formatted home phone number information.
        title: Phone Number
      FormattedMobileNumber:
        type: string
        description: The formatted mobile phone number information.
        title: Phone Number
      FormattedWorkPhoneNumber:
        type: string
        description: The formatted work phone number information.
        title: Phone Number
      Gender:
        type: string
        description: The gender of the person, such as male, female, and unknown. A list of accepted values is defined in the lookup HZ_GENDER. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Standard Lookups task.
        title: Gender
        maxLength: 30
      HeadOfHouseholdFlag:
        type: boolean
        description: Indicates if the person is the head of the household. If the value is True, then the person is the head of the household. The default value is False.
        title: Head of household indicator
      HomePhoneAreaCode:
        type: string
        description: The area code within a country code.
        title: Area Code
        maxLength: 20
      HomePhoneCountryCode:
        type: string
        description: The international country code for a telephone number, such as 33 for France.
        title: Home Phone Country Code
        maxLength: 10
      HomePhoneNumber:
        type: string
        description: The home phone number formatted in the local format without the area code, country code, or extension.
        title: Phone
        maxLength: 40
      HouseholdIncomeAmount:
        type: number
        description: The income of the household that this person is a part of.
        title: Household Income
      HouseholdSize:
        type: number
        description: The size of the household this person is a part of.
        title: Household Size
      Initials:
        type: string
        description: The initials in the contact's name.
        title: Initials
        maxLength: 20
      JobTitle:
        type: string
        description: The free form text for job title.
        title: Job Title
        maxLength: 100
      JobTitleCode:
        type: string
        description: The code given to the job title.
        title: Job Title Code
        maxLength: 30
      LastAssignmentDate:
        type: string
        format: date
        description: The date when the Sales Account Territory Assignment was last run by Assignment Manager.
        title: Last Assigned Date
      LastContactDate:
        type: string
        format: date-time
        description: The date when the contact was last contacted.
        title: Last Contact Date
      LastEnrichmentDate:
        type: string
        format: date
        description: The date when the contact record was last enriched with data from external sources by using Data-as-a-Service.
        title: Last Enrichment Date
      LastName:
        type: string
        description: The last name of the person.
        title: Last Name
        maxLength: 150
      LastNamePrefix:
        type: string
        description: The prefix for the last name of a person, such as fon, van. For example, if a person's name is Hans Van, the last name of the person is captured using this attribute.
        title: Last Name Prefix
        maxLength: 30
      LastUpdateDate:
        type: string
        format: date-time
        description: The date and time when the contact was last updated.
        title: Last Updated Date
      LastUpdateLogin:
        type: string
        description: The session login associated to the user who last updated the contact record.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the contact record.
        title: Last Updated By
        maxLength: 64
      MaritalStatus:
        type: string
        description: The marital status of the person. A list of accepted values is defined in the lookup MARITAL_STATUS. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Standard Lookups task.
        title: Marital Status
        maxLength: 30
      MaritalStatusEffectiveDate:
        type: string
        format: date
        description: The date when the person's marital status was changed.
        title: Marital Status Effective Date
      MiddleName:
        type: string
        description: The middle name of the person.
        title: Middle Name
        maxLength: 60
      MobileAreaCode:
        type: string
        description: The area code for the contact's mobile phone.
        title: Area Code
        maxLength: 20
      MobileCountryCode:
        type: string
        description: The international country code for a contact's mobile phone number, such as 33 for France.
        title: Mobile Country Code
        maxLength: 10
      MobileExtension:
        type: string
        description: The additional number addressed after initial connection to an internal telephone system.
        title: Extension
        maxLength: 20
      MobileNumber:
        type: string
        description: The mobile phone number formatted in the local format. The number should not include area code, country code, or extension.
        title: Mobile Phone
        maxLength: 40
      NameSuffix:
        type: string
        description: The place in a family structure. For example, in "Tom Jones III", the "III".
        title: Suffix
        maxLength: 30
      NamedFlag:
        type: boolean
        description: Indicates whether a sales account is a named sales account. If the value is True, then the sales account is a named sales account. The default value is False.
        title: Named Contact
      Note:
        description: The note resource is used to capture comments, information, or instructions for a contact.
        title: Notes
        $ref: '#/definitions/contacts-Note'
      OwnerEmailAddress:
        type: string
        description: 'The e-mail address of a valid employee resource who owns and manages the sales account. To assign an owner to the sales account, user can provide one of the following attributes pertaining to the owner: PartyID,  PartyNumber or E-mail Address. This is provided if user wants to change the owner of the contact or create contact with a different owner than the login user. If provided, then OwnerPartyID, OwnerPartyNumber, and OwnerEmailAddress are honored in this order to determine the owner for the contact.'
        title: Primary E-Mail
        maxLength: 320
      OwnerName:
        type: string
        description: The name of the sales account owner.
        title: Name
        maxLength: 360
      OwnerPartyId:
        type: integer
        format: int64
        description: 'The unique identifier of a valid employee resource who owns and manages the sales account. The owner is a valid employee resource defined within Sales Cloud. To assign an owner to the sales account, user can provide one of the following attributes pertaining to the owner: PartyID,  PartyNumber, or E-mail Address. This is provided if user wants to change the owner of the contact or create contact with a different owner than the login user.  If provided, then OwnerPartyID, OwnerPartyNumber, and OwnerEmailAddress are honored in this order to determine the owner for the contact. During create, if none of the OwnerPartyID, OwnerPartyNumber, or OwnerEmailAddress is provided, then the contact is assigned by default to the login user. The login user''s partyID is used to populate OwnerPartyID.'
        title: Owner ID
      OwnerPartyNumber:
        type: string
        description: 'The party number of a valid employee resource who owns and manages the sales account. To assign an owner to the sales account, user can provide one of the following attributes pertaining to the owner: PartyID, PartyNumber, or E-mail Address. This is provided if user wants to change the owner of the contact or create contact with a different owner than the login user.  If provided, then OwnerPartyID, OwnerPartyNumber, and OwnerEmailAddress are honored in this order to determine the owner for the contact.'
        title: Registry ID
        maxLength: 30
      PartyId:
        type: integer
        format: int64
        description: The unique internal identifier of a contact party. One of PartyId, PartyNumber or PartySourceSystem and PartySourceSystemReferenceValue keys is required to uniquely identify the contact party.
        title: Party ID
      PartyNumber:
        type: string
        description: The unique primary identifier for the contact party. The profile option HZ_GENERATE_PARTY_NUMBER controls whether the attribute value can be system generated or user-provided during create. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Profile Options task.
        title: Registry ID
        maxLength: 30
      PartyStatus:
        type: string
        description: The status of the contact. A list of valid values are defined in the lookup HZ_STATUS. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Standard Lookups task.
        title: Status
        maxLength: 1
      PersonalIncomeAmount:
        type: number
        description: The estimated gross annual income of the person.
        title: Annual Income
      PictureAttachment:
        description: The contact picture attachment resource is used to view, create, and update the contact's picture.
        title: Attachments
        $ref: '#/definitions/contacts-PictureAttachment'
      PlaceOfBirth:
        type: string
        description: The place where the person was born, such as city or country.
        title: Place of Birth
        maxLength: 60
      PreferredContactMethod:
        type: string
        description: The preferred method to contact the person. A list of accepted values is defined in the lookup HZ_PREFERRED_CONTACT_METHOD. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Contact Point Lookups task.
        title: Preferred Contact Method
        maxLength: 30
      PreferredFunctionalCurrency:
        type: string
        description: The default currency code for this contact. A list of accepted values is defined using the Setup and Maintenance work area, Manage Currencies task.
        title: Preferred Functional Currency
        maxLength: 15
      PreviousLastName:
        type: string
        description: The previous last name or surname of the person.
        title: Previous Last Name
        maxLength: 150
      PrimaryAddress:
        description: The primary address resource is used to view, create, or modify a primary address of a contact. A primary address is the default communication address of an entity.
        title: Contact Primary Addresses
        $ref: '#/definitions/contacts-PrimaryAddress'
      RecordSet:
        type: string
        description: The search results displayed under the selected record set.
        title: Record Set
        maxLength: 30
      RegistrationStatus:
        type: string
        description: Indicates if the contact is a favorite.
        title: Registration Status
        maxLength: 30
      Relationship:
        description: The relationship resource includes attributes that are used to store values while viewing, creating, or updating a relationship.
        title: Relationships
        $ref: '#/definitions/contacts-Relationship'
      RentOrOwnIndicator:
        type: string
        description: Indicates if this contact owns or rents his or her residence. A list of valid values for rent, own, and lease is defined in the lookup OWN_RENT_IND. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Standard Lookups task.
        title: Rent or own indicator
        maxLength: 30
      SalesAffinityCode:
        type: string
        description: The affinity of a contact to the deploying organization. A list of accepted values is defined in the lookup HZ_SLS_CNTCT_AFFINITY_CODE. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Contact Lookups task.
        title: Affinity
        maxLength: 30
      SalesBuyingRoleCode:
        type: string
        description: The roles played by a contact in the buying process, for example, decision maker or supporting role. A list of accepted values is defined in the lookup HZ_SLS_CNTCT_BUY_ROLE_CODE. Review and update the values for this attribute using the Setup and Maintenance work area, Manage Contact Lookups task.
        title: Buying Role
        maxLength: 30
      SalesProfileStatus:
        type: string
        description: A valid user defined status of the sales account.
        title: Status
        maxLength: 30
      SalesTeamMember:
        description: The sales team member resource represents a resource party and is assigned to a sales account team. A sales account team member has a defined access role for the sales account.
        title: Sales Account Resources
        $ref: '#/definitions/contacts-SalesTeamMember'
      Salutation:
        type: string
        description: The phrase used to address a contact party in any correspondence.
        title: Salutation
        maxLength: 60
      SalutoryIntroduction:
        type: string
        description: The title or a salutary introduction for a contact, such as Mr., Herr, and so on. A list of accepted values is defined in the lookup CONTACT_TITLE. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Standard Lookups task.
        title: Prefix
        maxLength: 30
      SecondLastName:
        type: string
        description: The second last name for a person. A list of accepted values is defined in the lookup HZ_PERSON_PROFILES. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Standard Lookups task.
        title: Second Last Name
        maxLength: 150
      SourceSystem:
        type: string
        description: The name of external source system where the contact party is imported from. The values are configured in Setup and Maintenance work area, Manage Trading Community Source Systems task.
        title: Source System
      SourceSystemReferenceValue:
        type: string
        description: The alternate unique identifier for the contact party from the external source system specified in the attribute SourceSystem.
        title: Source System Reference
      TaxpayerIdentificationNumber:
        type: string
        description: The taxpayer identification number, which is often a unique identifier of the contact. The typical values are taxpayer Id in USA or fiscal code or NIF in Europe.
        title: Taxpayer Identification Number
        maxLength: 20
      Title:
        type: string
        description: A professional or family title, such as Don or The Right Honorable.
        title: Title
        maxLength: 60
      Type:
        type: string
        description: The contact party type that defines whether the contact is a sales account, a prospect, a contact or any other user-defined party type. The default value is ZCA_CUSTOMER. A list of accepted values is defined in the lookup ZCA_CONTACT_TYPE. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Standard Lookups task.
        title: Type
        maxLength: 30
      UniqueNameSuffix:
        type: string
        description: The system generated or manually overridden suffix. The suffix is used to generate the PartyUniqueName attribute and is concatenated to the ContactName attribute to generate the PartyUniqueName. The primary address is defaulted as the suffix.
        title: Name Suffix
        maxLength: 540
      UpdateFlag:
        type: boolean
        description: Indicates if the record can be updated.
        title: Update Contact
      WorkPhoneAreaCode:
        type: string
        description: The area code for the contact's work phone.
        title: Area Code
        maxLength: 20
      WorkPhoneCountryCode:
        type: string
        description: The international country code for a contact's work phone number, such as 33 for France.
        title: Work Phone Country Code
        maxLength: 10
      WorkPhoneExtension:
        type: string
        description: The additional number addressed after initial connection to an internal telephone system.
        title: Extension
        maxLength: 20
      WorkPhoneNumber:
        type: string
        description: The work phone number formatted in the local format without the area code, country code, or extension.
        title: Phone
        maxLength: 40
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: Type LOV
      description: 'The list of values indicating the type of the contact, such as Customer or Prospect.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Type; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/SalesProfileTypeLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Indicates if the contact is a customer, prospect, or custom contact type.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - Type
      effectiveMethod: get
    - rel: lov
      title: SalesProfileStatus LOV
      description: 'The list of values indicating the status of the contact''s sales profile.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SalesProfileStatus; Target Attribute: LookupCode</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/SalesProfileStatusLookupLOV?fields=LookupCode
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - SalesProfileStatus
      effectiveMethod: get
    - rel: lov
      title: Gender LOV
      description: 'The list of values indicating the gender of the person, such as Male or Female.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Gender; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/GenderLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - Gender
      effectiveMethod: get
    - rel: lov
      title: MaritalStatus LOV
      description: 'The  list of values indicating the marital status of the person, such as Married or Single.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: MaritalStatus; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/MaritalStatusLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - MaritalStatus
      effectiveMethod: get
    - rel: lov
      title: PreferredFunctionalCurrency LOV
      description: 'The list of values indicating the preferred currency of the person, such as USD or GBP.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PreferredFunctionalCurrency; Target Attribute: CurrencyCode</li><li>Display Attribute: CurrencyCode</li><li>Display Attribute: Name</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/CurrenciesLOV?fields=CurrencyCode,Name
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          CurrencyCode:
            type: string
            description: The currency code such as USD, GBP used by a contact
          Name:
            type: string
            description: Display name for currencies such as USD, GBP used by a contact
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - PreferredFunctionalCurrency
      effectiveMethod: get
    - rel: lov
      title: Title LOV
      description: 'The list of values indicating the professional or family title of the contact, such as Mr., Herr, and so on.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Title; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/PersonPreNameAdjunctLookupVO?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: The title or a salutary introduction for a contact, such as Mr., Herr, and so on.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - Title
      effectiveMethod: get
    - rel: lov
      title: RentOrOwnIndicator LOV
      description: 'The list of values indicating whether the contact''s property is owned or rented.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RentOrOwnIndicator; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/RentOwnIndLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RentOrOwnIndicator
      effectiveMethod: get
    - rel: lov
      title: CertificationLevel LOV
      description: 'The list of values indicating the certification level of the contact, such as Minimum or Maximum.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CertificationLevel; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/CertificationLevelLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CertificationLevel
      effectiveMethod: get
    - rel: lov
      title: CertificationReasonCode LOV
      description: 'The list of values indicating the reasons for certifying a party, such as Manual or Third party.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CertificationReasonCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/CertificationReasonCodeLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CertificationReasonCode
      effectiveMethod: get
    - rel: lov
      title: PreferredContactMethod LOV
      description: 'The list of values indicating the preferred contact method of the person, such as mail or phone.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PreferredContactMethod; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/PreferredContactMethodLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - PreferredContactMethod
      effectiveMethod: get
    - rel: lov
      title: DepartmentCode LOV
      description: 'The list of values indicating the department which the person belongs to, such as Accounting and Consulting.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DepartmentCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/DepartmentCodeLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - DepartmentCode
      effectiveMethod: get
    - rel: lov
      title: DoNotCallFlag LOV
      description: 'The list of values that indicate whether you can call the person or not.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DoNotCallFlag; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/DoNotCallFlagLookupLOV?fields=LookupCode
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - DoNotCallFlag
      effectiveMethod: get
    - rel: lov
      title: DoNotContactFlag LOV
      description: 'The list of values that indicate whether you can contact the person or not.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DoNotContactFlag; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/DoNotContactFlagLookupLOV?fields=LookupCode
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - DoNotContactFlag
      effectiveMethod: get
    - rel: lov
      title: DoNotEmailFlag LOV
      description: 'The list of values that indicate whether you can email the person or not.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DoNotEmailFlag; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/DoNotEmailFlagLookupLOV?fields=LookupCode
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - DoNotEmailFlag
      effectiveMethod: get
    - rel: lov
      title: DoNotMailFlag LOV
      description: 'The list of values that indicate whether you can mail the person or not.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DoNotMailFlag; Target Attribute: LookupCode</li><li>Display Attribute: LookupCode</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/DoNotMailFlagLookupLOV?fields=LookupCode
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - DoNotMailFlag
      effectiveMethod: get
    - rel: lov
      title: JobTitleCode LOV
      description: 'The list of values indicating the job title of the person.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: JobTitleCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/JobTitleCodeLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - JobTitleCode
      effectiveMethod: get
    - rel: lov
      title: SalesAffinityCode LOV
      description: 'The list of values indicating the affinity of the person to the deploying organization, such as neutral and favorable.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SalesAffinityCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/SalesAffinityCodeLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - SalesAffinityCode
      effectiveMethod: get
    - rel: lov
      title: SalesBuyingRoleCode LOV
      description: 'The list of values indicating the role played by the person in the buying process, such as Support role and Key decision maker.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SalesBuyingRoleCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/SalesBuyingRoleCodeLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - SalesBuyingRoleCode
      effectiveMethod: get
    - rel: lov
      title: CurrencyCode LOV
      description: 'The list of values indicating the preferred currency of the person, such as USD and GBP.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CurrencyCode; Target Attribute: CurrencyCode</li><li>Display Attribute: Name</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/RatedCurrenciesLOV?fields=CurrencyCode,Name
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          CurrencyCode:
            type: string
            description: The currency code such as USD, GBP used by a contact
          Name:
            type: string
            description: Display name for currencies such as USD, GBP used by a contact.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CurrencyCode
      effectiveMethod: get
    - rel: lov
      title: DataCloudStatus LOV
      description: 'The list of values indicating the enrichment status of the person record, such as deleted and enriched.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DataCloudStatus; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/DataCloudStatusLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - DataCloudStatus
      effectiveMethod: get
    - rel: lov
      title: PartyStatus LOV
      description: 'The list of values indicating the status of the person''s record, such as active or inactive.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PartyStatus; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/StatusLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - PartyStatus
      effectiveMethod: get
    - rel: lov
      title: WorkPhoneCountryCode LOV
      description: 'The list of values indicating the international country codes for the contact''s work phone number.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: WorkPhoneCountryCode; Target Attribute: PhoneCountryCode</li><li>Display Attribute: PhoneCountryCode</li><li>Display Attribute: TerritoryShortName</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/WorkPhoneCountryCodeLOV?fields=PhoneCountryCode,TerritoryShortName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          PhoneCountryCode:
            type: string
            description: The international country code for a contact's work phone number, such as 33 for France.
          TerritoryShortName:
            type: string
            description: The area code for the contact's work phone.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - WorkPhoneCountryCode
      effectiveMethod: get
    - rel: lov
      title: MobileCountryCode LOV
      description: 'The list of values indicating the international country codes for the contact''s mobile phone number.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: MobileCountryCode; Target Attribute: PhoneCountryCode</li><li>Display Attribute: PhoneCountryCode</li><li>Display Attribute: TerritoryShortName</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/MobileCountryCodeLOV?fields=PhoneCountryCode,TerritoryShortName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          PhoneCountryCode:
            type: string
            description: The international country code for a contact's mobile phone number, such as 33 for France.
          TerritoryShortName:
            type: string
            description: The area code for the contact's mobile phone.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - MobileCountryCode
      effectiveMethod: get
    - rel: lov
      title: FaxCountryCode LOV
      description: 'The list of values indicating the international country codes for the contact''s fax number.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: FaxCountryCode; Target Attribute: PhoneCountryCode</li><li>Display Attribute: PhoneCountryCode</li><li>Display Attribute: TerritoryShortName</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/FaxCountryCodeLOV?fields=PhoneCountryCode,TerritoryShortName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          PhoneCountryCode:
            type: string
            description: The international country code for a contact's fax number, such as 33 for France.
          TerritoryShortName:
            type: string
            description: The area code for the contact's fax number.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - FaxCountryCode
      effectiveMethod: get
    - rel: lov
      title: HomePhoneCountryCode LOV
      description: 'The list of values indicating the international country codes for the contact''s home phone number.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: HomePhoneCountryCode; Target Attribute: PhoneCountryCode</li><li>Display Attribute: PhoneCountryCode</li><li>Display Attribute: TerritoryShortName</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/HomePhoneCountryCodeLOV?fields=PhoneCountryCode,TerritoryShortName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          PhoneCountryCode:
            type: string
            description: The international country code for a contact's home phone number, such as 33 for France.
          TerritoryShortName:
            type: string
            description: The area code for the contact's home phone.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - HomePhoneCountryCode
      effectiveMethod: get
    - rel: lov
      title: RecordSet LOV
      description: 'The list of values indicating the saved searches used to view persons, such as All Contacts and My Contacts.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RecordSet; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/SearchFilters?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RecordSet
      effectiveMethod: get
    - rel: lov
      title: ContactRole LOV
      description: 'The list of values indicating the different roles of the contact, such as Service contact.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ContactRole; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/ContactRoleLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ContactRole
      effectiveMethod: get
    - rel: lov
      title: RegistrationStatus LOV
      description: 'The list of values indicating the registration status of the contact, such as Pending and Approved.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RegistrationStatus; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /crmCommonApi/resources/latest/contacts/{PartyNumber}/lov/RegistrationStatusLookupLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RegistrationStatus
      effectiveMethod: get
  partnerTiers:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/partnerTiers-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  partnerTiers-item:
    type: object
    properties:
      CreatedBy:
        type: string
        description: Indicates the user who created the row.
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: Indicates the date and time the row was created.
      DeleteFlag:
        type: boolean
        description: Indicates if the partner tier can be deleted.
      Description:
        type: string
        description: The text describing the partner tier.
        maxLength: 1000
      LastUpdateDate:
        type: string
        format: date-time
        description: Indicates the date and time the row was last updated.
      LastUpdatedBy:
        type: string
        description: Indicates the user who last updated the row.
        maxLength: 64
      Name:
        type: string
        description: The name of the partner tier.
        title: Name
        maxLength: 155
      Ranking:
        type: integer
        format: int32
        description: The tier ranking, where 1 represents the top tier.
        title: Rank
      TierId:
        type: integer
        format: int64
        description: The system-generated unique identifier and primary key of the partner tier.
      UpdateFlag:
        type: boolean
        description: Indicates if the partner tier can be updated.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  programEnrollments:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/programEnrollments-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  programEnrollments-Notes:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/programEnrollments-Notes-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  programEnrollments-Notes-item:
    type: object
    properties:
      ContactRelationshipId:
        type: integer
        format: int64
        description: The identifier of the relationship populated when the note is associated with a contact.
        title: Contact Relationship ID
      CorpCurrencyCode:
        type: string
        description: The corporate currency code of the note associated with the contact. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup ZCA_COMMON_CORPORATE_CURRENCY. Review and update the profile option using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Corporate Currency Code
        maxLength: 15
      CreatedBy:
        type: string
        description: The user who created the note record.
        title: Created By
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time when the note record was created.
        title: Creation Date
      CreatorPartyId:
        type: integer
        format: int64
        description: The unique party identifier for the note creator.
        title: Creator Party ID
      CurcyConvRateType:
        type: string
        description: The currency conversion rate type associated with the note. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup ZCA_COMMON_RATE_TYPE. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Currency Conversion Rate Type
        maxLength: 30
      CurrencyCode:
        type: string
        description: The currency code associated with the note. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup ZCA_COMMON_CORPORATE_CURRENCY. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Currency
        maxLength: 15
      DeleteFlag:
        type: boolean
        description: Indicates whether the note is to be deleted. If the value is Y, then the note has to be deleted. The default value is N.
        title: Delete Indicator
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the note data was last updated.
        title: Last Update Date
      LastUpdateLogin:
        type: string
        description: The login of the user who last updated the record.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 64
      NoteId:
        type: integer
        format: int64
        description: The unique Identifier of the note associated with the contact. This is the primary key of the notes table.
        title: Note Id
      NoteTxt:
        type: string
        description: The actual note text.
        title: Note Text
      NoteTypeCode:
        type: string
        description: This code for categorization of the note type.
        title: Type
        maxLength: 30
      PartyId:
        type: integer
        format: int64
        description: The unique Identifier of the contact to which the note is associated. One of PartyId, PartyNumber or PartySourceSystem and PartySourceSystemReferenceValue keys is required to uniquely identify the contact record with which the address is associated.
        title: Party ID
      PartyName:
        type: string
        description: The name of a contact party.
        title: Author
        maxLength: 360
      SourceObjectCode:
        type: string
        description: The code of the source object such as Activities, Opportunities, as defined in OBJECTS Metadata.
        title: Related Object Type
        maxLength: 30
      SourceObjectId:
        type: string
        description: The primary key identifier of the source object such as Activities, Opportunities, as defined in OBJECTS Metadata.
        title: Related Object
        maxLength: 64
      UpdateFlag:
        type: boolean
        description: Indicates whether the note can be updated. If the value is Y, then the note can be updated. The default value is N.
        title: Update Indicator
      VisibilityCode:
        type: string
        description: The visibility level of the note.
        title: Visibility
        maxLength: 30
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: NoteTypeCode LOV
      description: 'The list of values for the type of the note, such as GENERAL, REFERENCE, or SPECIAL.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: NoteTypeCode; Target Attribute: MappedLookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/programEnrollments/{EnrollmentNumber}/child/Notes/{NoteId}/lov/NoteSourceTypeVA?fields=MappedLookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          MappedLookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - NoteTypeCode
      effectiveMethod: get
    - rel: lov
      title: VisibilityCode LOV
      description: 'The list of values for the visibility level of the note, such as PRIVATE, INTERNAL, or EXTERNAL.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: VisibilityCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/programEnrollments/{EnrollmentNumber}/child/Notes/{NoteId}/lov/NoteVisibilityLookupVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - VisibilityCode
      effectiveMethod: get
    - rel: lov
      title: CurrencyCode LOV
      description: 'The corporate currency code associated with the note, such as USD or INR, expressed as the standard, three-letter, ISO-4217 currency code.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CurrencyCode; Target Attribute: CurrencyCode</li><li>Display Attribute: CurrencyCode</li></ul>'
      method: get
      href: /salesApi/resources/latest/programEnrollments/{EnrollmentNumber}/child/Notes/{NoteId}/lov/RatedCurrenciesVA?fields=CurrencyCode
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CurrencyCode
      effectiveMethod: get
  programEnrollments-PartnerProgram:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/programEnrollments-PartnerProgram-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  programEnrollments-PartnerProgram-item:
    type: object
    properties:
      CreatedBy:
        type: string
        description: The user who created the program record.
        title: Created By
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time when the program record was created.
        title: Creation Date
      DeleteFlag:
        type: boolean
        description: Indicates if the record can be deleted.
      EndDateActive:
        type: string
        format: date
        description: The effective data when the program ends.
        title: End Date
      LastUpdateDate:
        type: string
        format: date-time
        description: The date and time when the program record was last updated.
        title: Last Updated Date
      LastUpdatedBy:
        type: string
        description: The user who updated the program record.
        title: Last Updated By
        maxLength: 64
      PartnerProgramId:
        type: integer
        format: int64
        description: The unique Identifier of the partner program associated with the enrollment. This is the primary key of the partnerprogram table.
        title: Program ID
      ProgramDescription:
        type: string
        description: The description of the program.
        title: Description
        maxLength: 1000
      ProgramManagerId:
        type: integer
        format: int64
        description: The unique identifier of the person managing the partner program.
        title: Program Manager ID
      ProgramManagerName:
        type: string
        description: The name of the program manager.
        title: Owner
        maxLength: 360
      ProgramName:
        type: string
        description: The name of the partner program.
        title: Name
        maxLength: 150
      ProgramNumber:
        type: string
        description: The unique number generated for the program.
        title: Program Number
        maxLength: 30
      ProgramType:
        type: string
        description: Indicates the type of the partner program. The accepted values are reseller and go to market.
        title: Type
        maxLength: 30
      StartDateActive:
        type: string
        format: date
        description: The effective date when the program starts.
        title: Start Date
      UpdateFlag:
        type: boolean
        description: Indicates if the record can be updated.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: ProgramManagerName LOV
      description: 'The value of the selected partner program''s owner, such as Colby Morris.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ProgramManagerName; Target Attribute: ResourceName</li><li>Source Attribute: ProgramManagerId; Target Attribute: PartyId</li><li>Display Attribute: ResourceFirstName</li><li>Display Attribute: ResourceLastName</li><li>Display Attribute: EmailAddress</li><li>Display Attribute: OrganizationName</li><li>Display Attribute: RoleName</li></ul>'
      method: get
      href: /salesApi/resources/latest/programEnrollments/{EnrollmentNumber}/child/PartnerProgram/{PartnerProgramId}/lov/Resources?fields=ResourceName,PartyId,ResourceFirstName,ResourceLastName,EmailAddress,OrganizationName,RoleName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          ResourceName:
            type: string
            description: The name of the owner of the partner program.
          PartyId:
            type: integer
            description: Unique identifier for the resource party corresponding to the partner program owner.
          ResourceFirstName:
            type: string
            description: The partner program owner's first name.
          ResourceLastName:
            type: string
            description: The partner program owner's last name.
          EmailAddress:
            type: string
            description: The partner program owner's email address.
          OrganizationName:
            type: string
            description: The partner program owner's resource organization name.
          RoleName:
            type: string
            description: The partner program owner's role.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ProgramManagerName
      - ProgramManagerId
      effectiveMethod: get
    - rel: lov
      title: ProgramType LOV
      description: 'The type of the selected partner program, such as Developer, Distributor, or Reseller, as defined in the program definition.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ProgramType; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/programEnrollments/{EnrollmentNumber}/child/PartnerProgram/{PartnerProgramId}/lov/ProgramTypes?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ProgramType
      effectiveMethod: get
  programEnrollments-ProgramBenefitDetails:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/programEnrollments-ProgramBenefitDetails-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  programEnrollments-ProgramBenefitDetails-item:
    type: object
    properties:
      BenefitListValue:
        type: string
        description: The value of the benefit. The attribute has a value when the DataType is of type List.
      BenefitValue:
        type: string
        description: The value of the benefit.
        title: Value
        maxLength: 150
      CategoryCode:
        type: string
        description: The category code of the benefit. For example, Financial, Sales, Support, and so on.
        title: Category
        maxLength: 30
      CreatedBy:
        type: string
        description: The date and time when the record was last updated.
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The user who last created the record.
      DataType:
        type: string
        description: The value type of the benefit. For example, Amount, List, Number,Text, Yes/No.
        title: Value Type
        maxLength: 30
      DeleteFlag:
        type: boolean
        description: Indicates if the record can be deleted.
      Description:
        type: string
        description: The text describing the benefit.
        title: Benefits Description
        maxLength: 1000
      LastUpdateDate:
        type: string
        format: date-time
        description: The date and time when the record was last updated.
        title: Last Updated Date
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 64
      Name:
        type: string
        description: The name of the benefit.
        title: Name
        maxLength: 155
      PartnerProgramId:
        type: integer
        format: int64
        description: The identifier of the partner program associated with the enrollment.
      ProgramBenefitDetailId:
        type: integer
        format: int64
        description: The unique identifer of the program benefit details.
      ProgramBenefitId:
        type: integer
        format: int64
        description: The unique identifier of the program benefit.
      TierId:
        type: integer
        format: int64
        description: The unique identifier of the associated tier for the program benefit.
        title: Tier
      TierName:
        type: string
        description: The Tier name of the benefit.
        title: Name
        maxLength: 155
      UpdateFlag:
        type: boolean
        description: Indicates if the record can be updated.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: TierId LOV
      description: 'The list of values for the program tier.The user creates the values by adding tier to a program.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: TierId; Target Attribute: TierId</li><li>Display Attribute: Name</li></ul>'
      method: get
      href: /salesApi/resources/latest/programEnrollments/{EnrollmentNumber}/child/ProgramBenefitDetails/{ProgramBenefitDetailId}/lov/ProgramTiers?fields=TierId,Name
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          TierId:
            type: integer
            description: Unique identifier and primary key of Tier.
          Name:
            type: string
            description: Display name of the Tier.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - TierId
      effectiveMethod: get
    - rel: lov
      title: Name LOV
      description: 'The list of values for the name of the Program benefit. The user creates the values while defining benefit(s).<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Name; Target Attribute: Name</li><li>Source Attribute: ProgramBenefitId; Target Attribute: ProgramBenefitId</li><li>Display Attribute: Name</li></ul>'
      method: get
      href: /salesApi/resources/latest/programEnrollments/{EnrollmentNumber}/child/ProgramBenefitDetails/{ProgramBenefitDetailId}/lov/Benefits?fields=Name,ProgramBenefitId
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          Name:
            type: string
            description: Display value for the name of the Benefit.
          ProgramBenefitId:
            type: integer
            description: Unique identifier and primary key of Benefit.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - Name
      - ProgramBenefitId
      effectiveMethod: get
    - rel: lov
      title: CategoryCode LOV
      description: 'The list of values for the benefit category such as Financial, Marketing, Sales, and so on. This field cannot be updated.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CategoryCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/programEnrollments/{EnrollmentNumber}/child/ProgramBenefitDetails/{ProgramBenefitDetailId}/lov/BenefitCategoryCodes?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CategoryCode
      effectiveMethod: get
    - rel: lov
      title: BenefitListValue LOV
      description: 'The list of values for the benefit list type. The user creates the values while defining benefit of list type.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: BenefitListValue; Target Attribute: BenefitListTypeValId</li><li>Display Attribute: ValueName</li></ul>'
      method: get
      href: /salesApi/resources/latest/programEnrollments/{EnrollmentNumber}/child/ProgramBenefitDetails/{ProgramBenefitDetailId}/lov/BenefitListTypeValues?fields=BenefitListTypeValId,ValueName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          BenefitListTypeValId:
            type: integer
            description: Unique identifier and primary key of Benefit list type values.
          ValueName:
            type: string
            description: Display value for the Benefit list type value which is specified by the user.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - BenefitListValue
      effectiveMethod: get
  programEnrollments-item:
    type: object
    properties:
      ActiveEnrollment:
        type: string
        description: Indicates the enrollment status. The accepted values active and inactive.
        maxLength: 255
      ApprovalDate:
        type: string
        format: date
        description: The date when the enrollment was approved.
        title: Approval Date
      CreatedBy:
        type: string
        description: The user who created the enrollment record.
        title: Created By
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time when the record was created.
        title: Creation Date
      EnrollmentNumber:
        type: string
        description: The unique number for the program enrollment.
        title: Enrollment Number
        maxLength: 30
      EnrollmentStatus:
        type: string
        description: Indicates the enrollment status. The accepted values are draft, pending, approved, rejected, terminated, and renewed.
        title: Status
        maxLength: 30
      ExpirationDate:
        type: string
        format: date
        description: The date when the enrollment expires.
        title: End Date
      LastUpdateDate:
        type: string
        format: date-time
        description: The date and time when the record was last updated.
        title: Last Updated Date
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 64
      Notes:
        description: The note resource is used to capture comments, information, or instructions for a program enrollment.
        title: Notes
        $ref: '#/definitions/programEnrollments-Notes'
      PartnerPartyId:
        type: integer
        format: int64
        description: The unique identifier of a partner.
      PartnerPartyName:
        type: string
        description: The name of the partner.
        title: Partner
        maxLength: 360
      PartnerProgram:
        description: The partner program resource is used to view, create, and update information about partner programs such as the name of the program, program description, validity period, and so on.
        title: Partner Programs
        $ref: '#/definitions/programEnrollments-PartnerProgram'
      PartnerProgramId:
        type: integer
        format: int64
        description: The unique identifier of a partner program.
      ProgramBenefitDetails:
        description: The program benefit details resource is used to view information about the program benefits for a program enrollment.
        title: Program Benefit Details
        $ref: '#/definitions/programEnrollments-ProgramBenefitDetails'
      ProgramDescription:
        type: string
        description: The description of the program.
        title: Program Description
        maxLength: 1000
      ProgramEnrollmentId:
        type: integer
        format: int64
        description: The unique identifier of a partner program enrollment.
      ProgramName:
        type: string
        description: The name of the partner program.
        title: Program
        maxLength: 150
      ProgramNumber:
        type: string
        description: The unique number generated for the program.
        title: Program Number
        maxLength: 30
      RemainingDays:
        type: string
        description: The number of days before the enrollment expires.
        title: Expiration in Days
        maxLength: 255
      RenewedEnrollment:
        type: string
        description: Indicates the renewal status of the enrollment. The accepted values are new and renewal.
        maxLength: 255
      RenewedFromId:
        type: integer
        format: int64
        description: The unique identifier of the enrollment from which the renewal enrollment is copied.
      StartDate:
        type: string
        format: date
        description: The effective date when the program enrollment starts.
        title: Start Date
      TerminationDate:
        type: string
        format: date
        description: The date when the enrollment terminates.
        title: Termination Date
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: EnrollmentStatus LOV
      description: 'The list of values for the enrollment status such as Draft, Pending, Approved, Rejected, Terminated, Expired, and Renewed.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: EnrollmentStatus; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/programEnrollments/{EnrollmentNumber}/lov/EnrollmentStatusLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - EnrollmentStatus
      effectiveMethod: get
    - rel: lov
      title: ProgramName LOV
      description: 'The list of values for the partner program, such as North American Reseller Program, as created previously by user.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ProgramName; Target Attribute: ProgramName</li><li>Source Attribute: PartnerProgramId; Target Attribute: PartnerProgramId</li><li>Display Attribute: ProgramName</li><li>Display Attribute: ProgramTypeMeaning</li><li>Display Attribute: StartDateActive</li><li>Display Attribute: EndDateActive</li></ul>'
      method: get
      href: /salesApi/resources/latest/programEnrollments/{EnrollmentNumber}/lov/PartnerProgramLookup?fields=ProgramName,PartnerProgramId,ProgramTypeMeaning,StartDateActive,EndDateActive
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          ProgramName:
            type: string
            description: Display name of the partner program.
          PartnerProgramId:
            type: integer
            description: Unique identifier for the partner program.
          StartDateActive:
            type: string
            description: Effective start date of the partner program.
          EndDateActive:
            type: string
            description: Effective end date of the partner program.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ProgramName
      - PartnerProgramId
      effectiveMethod: get
  partners:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/partners-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  partners-accountTeamMembers:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/partners-accountTeamMembers-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  partners-accountTeamMembers-item:
    type: object
    properties:
      AccessLevelCode:
        type: string
        description: The type of access granted to the resource as well as managers of the organizations. A list of accepted values is defined in the lookup ZCA_ACCESS_LEVEL. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Standard Lookups task.
        title: Access
        maxLength: 30
      AssignmentTypeCode:
        type: string
        description: The code indicating how the resource is assigned to the partner resource team. A list of accepted values is defined in the lookup ZCA_ASSIGNMENT_TYPE. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Standard Lookups task.
        maxLength: 30
      CreatedBy:
        type: string
        description: The user who created the record.
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time the record was created.
      EmailAddress:
        type: string
        description: The email address of the resource.
        title: E-Mail
        maxLength: 320
      FormattedPhoneNumber:
        type: string
        description: The phone number of the resource.
        title: Phone
      LastUpdateDate:
        type: string
        format: date-time
        description: The date on which the record is last updated.
      LastUpdateLogin:
        type: string
        description: The user login for the user who last updated the record.
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        maxLength: 64
      MemberFunctionCode:
        type: string
        description: The code indicating the role of a sales team member in the resource team such as Integrator, Executive Sponsor, and Technical Account Manager. A list of accepted values is defined in the lookup FND_LOOKUPS. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Function
        maxLength: 30
      OrganizationRole:
        type: string
        description: The role of the resource in the organization.
        title: Title
      PartnerAccountResourceId:
        type: integer
        format: int64
        description: The unique identifier of the party that owns the partner.
        title: Partner Account Resource ID
      ResourceId:
        type: integer
        format: int64
        description: The unique identifier of the sale profile of the resource.
        title: Account Team Member
      ResourceName:
        type: string
        description: The name of the resource.
        title: Name
        maxLength: 360
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: AccessLevelCode LOV
      description: 'The list of values for the type of access granted to the resource as well as managers of the organizations, such as Edit or Full.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AccessLevelCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/partners/{CompanyNumber}/child/accountTeamMembers/{PartnerAccountResourceId}/lov/accessLevelsLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - AccessLevelCode
      effectiveMethod: get
    - rel: lov
      title: AssignmentTypeCode LOV
      description: 'The list of values for the code indicating how the resource is assigned to the partner resource team, such as Manual or Rule based.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AssignmentTypeCode; Target Attribute: LookupCode</li></ul>'
      method: get
      href: /salesApi/resources/latest/partners/{CompanyNumber}/child/accountTeamMembers/{PartnerAccountResourceId}/lov/assignmentTypesLOV?fields=LookupCode
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - AssignmentTypeCode
      effectiveMethod: get
    - rel: lov
      title: MemberFunctionCode LOV
      description: 'The list of values for the code indicating the role of a sales team member in the resource team such as Integrator, Executive Sponsor, and Technical Account Manager.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: MemberFunctionCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/partners/{CompanyNumber}/child/accountTeamMembers/{PartnerAccountResourceId}/lov/memberFunctionsLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - MemberFunctionCode
      effectiveMethod: get
  partners-attachments:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/partners-attachments-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  partners-attachments-item:
    type: object
    properties:
      CategoryName:
        type: string
        description: The category of the attachment.
        title: Category
        maxLength: 30
      ContentRepositoryFileShared:
        type: boolean
        description: Indicates whether the attachment is shared.
        title: Shared
      CreatedBy:
        type: string
        description: The user who created the attachment.
        maxLength: 255
      CreationDate:
        type: string
        format: date-time
        description: The date when the attachment record was created.
      DatatypeCode:
        type: string
        description: The value that indicates the data type code of the attachment.
        title: Type
        maxLength: 30
      Description:
        type: string
        description: The description of the attachment.
        title: Description
        maxLength: 255
      DmFolderPath:
        type: string
        description: The folder path of the attachment.
        maxLength: 1000
      ErrorStatusCode:
        type: string
        description: The error code, if any, for the attachment.
        title: Error Status Code
      ErrorStatusMessage:
        type: string
        description: The error message, if any, for the attachment.
        title: Error Status Message
      ExpirationDate:
        type: string
        format: date-time
        description: The expiration date of the contents in the attachment.
        title: Expiration Date
      FileContents:
        type: string
        format: binary
        description: The contents of the attachment.
        title: File Contents
      FileName:
        type: string
        description: The file name of the attachment.
        title: File Name
        maxLength: 2048
      FileUrl:
        type: string
        description: The URL of the attachment.
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the record was last updated.
        title: Last Update Date
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 255
      Title:
        type: string
        description: The title of the attachment.
        title: Title
      UploadedFileContentType:
        type: string
        description: The content type of the attachment.
      UploadedFileLength:
        type: integer
        format: int64
        description: The length of the attachment file.
      UploadedFileName:
        type: string
        description: The name of the attachment file.
      UploadedText:
        type: string
        description: The text of the attachment.
      Uri:
        type: string
        description: The URI of the attachment.
        title: Uri
        maxLength: 4000
      Url:
        type: string
        description: The URL of the attachment.
        maxLength: 4000
      UserName:
        type: string
        description: The login associated with the attachment.
        title: Category Name
        maxLength: 255
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  partners-certifications:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/partners-certifications-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  partners-certifications-item:
    type: object
    properties:
      CertificationCode:
        type: string
        description: The code of the certification.
        maxLength: 30
      CertificationName:
        type: string
        description: The name of the certification.
        title: Meaning
        maxLength: 80
      PartnerMultivalLovId:
        type: integer
        format: int64
        description: The unique identifier for partner certifications.
        title: Certification ID
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  partners-contacts:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/partners-contacts-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  partners-contacts-item:
    type: object
    properties:
      AddressLineOne:
        type: string
        description: The first line for address.
        title: Address Line 1
        maxLength: 240
      AddressLineThree:
        type: string
        description: The third line for address.
        title: Address Line 3
        maxLength: 240
      AddressLineTwo:
        type: string
        description: The second line for address.
        title: Address Line 2
        maxLength: 240
      City:
        type: string
        description: The city element of the address.
        title: City
        maxLength: 60
      ContactName:
        type: string
        description: The derived name of the contact.
        title: Name
        maxLength: 450
      Country:
        type: string
        description: The country code of the address.
        title: Country
        maxLength: 2
      CreatedBy:
        type: string
        description: The user who created the record.
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time the record was created.
      EmailAddress:
        type: string
        description: The e-mail address of the partner contact.
        title: E-Mail
        maxLength: 320
      FirstName:
        type: string
        description: The first name of the person.
        title: First Name
        maxLength: 150
      FormattedAddress:
        type: string
        description: The formatted address of the partner contact.
        title: Primary Address
      FormattedMobileNumber:
        type: string
        description: The formatted mobile phone number information.
        title: Phone Number
      FormattedWorkPhoneNumber:
        type: string
        description: The formatted work phone number information.
        title: Phone Number
      JobTitle:
        type: string
        description: The job title of the primary contact.
        title: Job Title
        maxLength: 100
      LastName:
        type: string
        description: The last name of the person.
        title: Last Name
        maxLength: 150
      LastNamePrefix:
        type: string
        description: The prefix for the last name of a person, such as De, Van. For example, if a person's name is Hans De Vries, then the last name prefix De is captured using this attribute.
        title: Last Name Prefix
        maxLength: 30
      LastUpdateDate:
        type: string
        format: date-time
        description: The date on which the record is last updated.
      LastUpdateLogin:
        type: string
        description: The user login for the user who last updated the record.
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        maxLength: 64
      ManagerName:
        type: string
        description: The name of the manager of partner contact.
      ManagerPartyId:
        type: integer
        format: int64
        description: The party identifier of the manager of partner contact.
        title: Manager Party ID
      MiddleName:
        type: string
        description: The middle name of the person.
        title: Middle Name
        maxLength: 60
      MobileAreaCode:
        type: string
        description: The area code for partner contact's mobile phone.
        title: Area Code
        maxLength: 20
      MobileCountryCode:
        type: string
        description: The international country code for a partner contact's mobile phone number, such as 33 for France.
        title: Phone Country Code
        maxLength: 10
      MobileExtension:
        type: string
        description: The additional number used after initial connection to an internal telephone system.
        title: Extension
        maxLength: 20
      MobileNumber:
        type: string
        description: The mobile phone number of partner contact formatted in the local format. The number should not include area code, country code, or extension.
        title: Phone
        maxLength: 40
      PartyId:
        type: integer
        format: int64
        description: The unique internal identifier of a partner contact party. Generated by the system during creation.
      PartyNumber:
        type: string
        description: The unique identifier for the partner contact party. Can be system-generated or user-provided during create, based on the profile option HZ_GENERATE_PARTY_NUMBER.
        title: Registry ID
        maxLength: 30
      PersonPreNameAdjunct:
        type: string
        description: The preferred name adjacency of a resource.
        title: Prefix
        maxLength: 30
      PostalCode:
        type: string
        description: The postal code as defined by the formal countrywide postal system.
        title: Postal Code
        maxLength: 60
      PrimaryAddressId:
        type: integer
        format: int64
        description: The unique identifier for the address that is generated internally during create. One of AddressId, AddressNumber or SourceSystem and SourceSystemReferenceValue keys is used to identify the address record during update.
      PrimaryFlag:
        type: boolean
        description: Indicates whether this partner contact is primary contact of partner or not. If the value is True, then this partner contact is a primary contact.
        title: Primary Contact Indicator
      RoleId:
        type: integer
        format: int64
        description: The identifier of resource role of the partner contact.
        title: Role ID
      RoleName:
        type: string
        description: The name of the resource role for partner contact.
      State:
        type: string
        description: The state element of the address.
        title: State
        maxLength: 60
      WorkPhoneAreaCode:
        type: string
        description: The area code for the partner contact's work phone.
        title: Area Code
        maxLength: 20
      WorkPhoneCountryCode:
        type: string
        description: The international country code for a partner contact's work phone number, such as 33 for France.
        title: Phone Country Code
        maxLength: 10
      WorkPhoneExtension:
        type: string
        description: The additional number used after initial connection to an internal telephone system.
        title: Extension
        maxLength: 20
      WorkPhoneNumber:
        type: string
        description: The work phone number of a partner contact formatted in the local format without the area code, country code, or extension.
        title: Phone
        maxLength: 40
      isSelfRegistration:
        type: string
        description: Indicates whether the partner registration approval process will be invoked or not. If the value is Y, then the process will be invoked.
        title: Self-Registered
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
      userdetails:
        description: A user account detail resource is used to view, create, or modify the user account details for the partner contact.
        title: User Account Details
        $ref: '#/definitions/partners-contacts-userdetails'
    x-links:
    - rel: lov
      title: PersonPreNameAdjunct LOV
      description: 'The list of values for the Person Prefix such as Mr., Dr.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PersonPreNameAdjunct; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/partners/{CompanyNumber}/child/contacts/{PartyNumber}/lov/PersonPreNameAdjunctLOV?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - PersonPreNameAdjunct
      effectiveMethod: get
    - rel: lov
      title: WorkPhoneCountryCode LOV
      description: 'The list of values for the Work Phone country code of the partner contact, such as 1 for US, 44 for UK.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: WorkPhoneCountryCode; Target Attribute: PhoneCountryCode</li><li>Display Attribute: PhoneCountryCode</li><li>Display Attribute: TerritoryShortName</li></ul>'
      method: get
      href: /salesApi/resources/latest/partners/{CompanyNumber}/child/contacts/{PartyNumber}/lov/PhoneCountryCodeLOV?fields=PhoneCountryCode,TerritoryShortName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          PhoneCountryCode:
            type: string
            description: Unique code for the lookup.
          TerritoryShortName:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - WorkPhoneCountryCode
      effectiveMethod: get
    - rel: lov
      title: MobileCountryCode LOV
      description: 'The list of values for the mobile country code of the partner contact, such as 1 for US, 44 for UK.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: MobileCountryCode; Target Attribute: PhoneCountryCode</li><li>Display Attribute: PhoneCountryCode</li><li>Display Attribute: TerritoryShortName</li></ul>'
      method: get
      href: /salesApi/resources/latest/partners/{CompanyNumber}/child/contacts/{PartyNumber}/lov/PhoneCountryCodeLOV?fields=PhoneCountryCode,TerritoryShortName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          PhoneCountryCode:
            type: string
            description: Unique code for the lookup.
          TerritoryShortName:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - MobileCountryCode
      effectiveMethod: get
    - rel: lov
      title: Country LOV
      description: 'The list of values for the country code of the partner contact, such as US and UK.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Country; Target Attribute: TerritoryCode</li><li>Display Attribute: TerritoryShortName</li></ul>'
      method: get
      href: /salesApi/resources/latest/partners/{CompanyNumber}/child/contacts/{PartyNumber}/lov/CountriesLOV?fields=TerritoryCode,TerritoryShortName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          TerritoryCode:
            type: string
            description: Unique code for the lookup.
          TerritoryShortName:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - Country
      effectiveMethod: get
  partners-contacts-userdetails:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/partners-contacts-userdetails-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  partners-contacts-userdetails-item:
    type: object
    properties:
      UserAccountStatus:
        type: string
        description: The status of the user account of partner contact.
      Username:
        type: string
        description: The user account name of partner contact.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  partners-expertises:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/partners-expertises-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  partners-expertises-item:
    type: object
    properties:
      ExpertiseCode:
        type: string
        description: The expertise code of the partner expertise.
        maxLength: 30
      ExpertiseName:
        type: string
        description: The expertise name of the partner expertise.
        title: Meaning
        maxLength: 80
      PartnerMultivalLovId:
        type: integer
        format: int64
        description: The unique identifier for partner expertise.
        title: Expertise ID
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  partners-geographies:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/partners-geographies-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  partners-geographies-item:
    type: object
    properties:
      GeographyId:
        type: string
        description: The geography ID for the geography served.
        maxLength: 30
      GeographyName:
        type: string
        description: The name of the geography served.
        maxLength: 360
      PartnerDimMembersId:
        type: integer
        format: int64
        description: The unique identifier for the partner geography .
        title: Geography ID
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  partners-industries:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/partners-industries-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  partners-industries-item:
    type: object
    properties:
      ClassificationCategory:
        type: string
        description: The classification category of the industry served.
        maxLength: 30
      ClassificationCode:
        type: string
        description: The classification code of the industry served.
        title: Partner Type
        maxLength: 30
      ClassificationName:
        type: string
        description: The classification name of the industry served.
        maxLength: 360
      PartnerDimMembersId:
        type: integer
        format: int64
        description: The unique identifier of the industry with the partner.
        title: Industry ID
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  partners-item:
    type: object
    properties:
      AccountDirectorId:
        type: integer
        format: int64
        description: The unique identifier of the partner account owner.
        title: Account Director ID
      AddressLineOne:
        type: string
        description: The first line for address.
        title: Address Line 1
        maxLength: 240
      AddressLineThree:
        type: string
        description: The third line for address.
        title: Address Line 3
        maxLength: 240
      AddressLineTwo:
        type: string
        description: The second line for address.
        title: Address Line 2
        maxLength: 240
      AnnualRevenue:
        type: number
        description: The partner company's annual revenue.
        title: Annual Revenue
      BusinessScope:
        type: string
        description: The physical class of business in which a business participates, such as local, national, or international.
        title: Business Scope
        maxLength: 20
      CeoName:
        type: string
        description: The name of the chief executive officer of the partner.
        title: Chief Executive Name
        maxLength: 240
      City:
        type: string
        description: The city of the identifying address.
        title: City
        maxLength: 60
      CompanyNumber:
        type: string
        description: The partner's company number.
        title: Partner Number
        maxLength: 30
      ComplianceReviewedDate:
        type: string
        format: date
        description: The date when the compliance review that determines the partner's compliance status was last completed.
        title: Compliance Reviewed Date
      ComplianceStatus:
        type: string
        description: Indicates if the partner is compliant with organization's criteria. If the value is Y, then the partner is a compliant. The default value is N.
        title: Compliance Status
        maxLength: 50
      ControlYr:
        type: number
        description: The year when current ownership gained control.
        title: Organization Control Year
      CorpCurrencyCode:
        type: string
        description: The corporate currency code of the Partner. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup<br>ZCA_COMMON_CORPORATE_CURRENCY. Review and update the profile option using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        maxLength: 15
      Country:
        type: string
        description: The country code of the address.
        title: Country
        maxLength: 2
      CreatedBy:
        type: string
        description: The user who created the record.
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time the record was created.
      CurrencyCode:
        type: string
        description: The currency code associated with the Partner. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup<br>ZCA_COMMON_CORPORATE_CURRENCY. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        maxLength: 15
      DUNSNumberC:
        type: string
        description: The DUNS number, a unique, nine-digit identification number that is assigned to business entities by Dun & Bradstreet.
        title: D-U-N-S Number
        maxLength: 30
      DbRating:
        type: string
        description: The Dun & Bradstreet credit rating.
        title: D&B Credit Rating
        maxLength: 5
      EligibleForPublicProfile:
        type: string
        description: Indicates if the partner is eligible for publishing their public profile. If the value is True, then the partner is eligible.
        title: Eligible for Public Profile
        maxLength: 1
      EmailAddress:
        type: string
        description: The e-mail address of the contact point.
        title: E-Mail
        maxLength: 320
      EmailFormat:
        type: string
        description: Indicates the preferred format for e-mail addressed to this address, such as HTML or ASCII.
        title: E-Mail Format
        maxLength: 30
      EmployeesTotal:
        type: number
        description: The total number of employees.
        title: Number of Employees
      FaxNumber:
        type: string
        description: The fax number of partner organization.
        title: Phone
        maxLength: 40
      FormattedAddress:
        type: string
        description: The formatted address of the partner.
        title: Primary Address
      HomeCountry:
        type: string
        description: The home country of the partner.
        title: Home Country
        maxLength: 2
      IndstClassCategory:
        type: string
        description: The classification category of the industry to which the partner belongs.
        title: Classification Category
        maxLength: 30
      IndstClassCode:
        type: string
        description: The classification code of the industry to which the partner belongs.
        title: Classification Code
        maxLength: 30
      IndustryName:
        type: string
        description: The classification name of the industry to which the partner belongs.
        title: Classification Code Meaning
        maxLength: 80
      IsSelfRegisteredPartner:
        type: string
        description: Indicates whether this partner is self-registered or not. If the value is Y, then the partner is self-registered. If you submit a Partner POST or PATCH call with this flag set to Y, then the partner approval process is initiated. If you submit a POST or PATCH call with this flag set to N, or this flag is omitted, then the partner approval process is not initiated.
        maxLength: 80
      JgzzFiscalCode:
        type: string
        description: The tax identification number of the partner.
        title: Taxpayer Identification Number
        maxLength: 20
      LastUpdateDate:
        type: string
        format: date-time
        description: The date on which the record is last updated.
      LastUpdateLogin:
        type: string
        description: The user login for the user who last updated the record.
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        maxLength: 64
      LineOfBusiness:
        type: string
        description: The type of business activities performed at this site.
        title: Line of Business
        maxLength: 240
      OpportunitiesWonPriorYear:
        type: number
        description: The opportunities that the partner sales representatives closed and won in the prior fiscal year.
        title: Opportunities Won Prior Year
      OpportunitiesWonYTD:
        type: number
        description: The opportunities that the partner sales representatives closed and won in the current fiscal year-to-date.
        title: Opportunities Won Year To Date
      OrganizationName:
        type: string
        description: The name of the partner.
        title: Organization Name
        maxLength: 360
      OrganizationProfileId:
        type: integer
        format: int64
        description: The unique identifier for the partner profile.
      OrganizationSize:
        type: string
        description: The size of the organization based on its revenue, number of employees, and so on.
        title: Organization Size
        maxLength: 30
      OwnerName:
        type: string
        description: The Owner Name of the partner organization.
        title: Name
        maxLength: 450
      PartnerLevel:
        type: string
        description: The relative tier of the partner.
        title: Partner Level
        maxLength: 50
      PartnerSummary:
        type: string
        description: The long company description of the partner.
        title: Partner Summary
        maxLength: 4000
      PartyId:
        type: integer
        format: int64
        description: The unique identifier of the partner.
      PhoneAreaCode:
        type: string
        description: The area code within a country code.
        title: Area Code
        maxLength: 20
      PhoneCountryCode:
        type: string
        description: The international country code for a telephone number, such as 33 for France.
        title: Phone Country Code
        maxLength: 10
      PhoneLineType:
        type: string
        description: The lookup code for the type of phone line, such as general, fax, inbound, or outbound.
        title: Type
        maxLength: 30
      PhoneNumber:
        type: string
        description: A telephone number formatted in the local format. The number should not include area code, country code, or extension.
        title: Phone
        maxLength: 40
      PostalCode:
        type: string
        description: The postal code of the address.
        title: Postal Code
        maxLength: 60
      PrincipalName:
        type: string
        description: The name of the highest ranking person in the organization.
        title: Principal Name
        maxLength: 240
      PublicStatus:
        type: string
        description: The status of approval of public profile.
        title: Public Status
        maxLength: 50
      SolutionOverview:
        type: string
        description: The overview description of partner solutions.
        title: Solution Overview
        maxLength: 4000
      SourceType:
        type: string
        description: The type of the source object such as Opportunities or Partners as defined in the object metadata.
      State:
        type: string
        description: The state element of the address.
        title: State
        maxLength: 60
      Status:
        type: string
        description: The status of the partner's relationship with the organization. This value is maintained by the channel manager.
        title: Status
        maxLength: 50
      StockSymbol:
        type: string
        description: The corporate stock symbol of the organization as listed in stock exchanges.
        title: Stock Symbol
        maxLength: 20
      Synergy:
        type: string
        description: The description of the value of the partnership between the organization and partner.
        maxLength: 4000
      TierId:
        type: integer
        format: int64
        description: The unique identifier of the tier that the partner belongs to.
      TierName:
        type: string
        description: The name of the tier that the partner belongs to.
        maxLength: 155
      URL:
        type: string
        description: The URL for the partner's web presence.
        title: URL
        maxLength: 2000
      UpdateFlag:
        type: boolean
        description: Indicates whether the partner object can be updated by the current user or not. If the value is True, then the partner object can be updated.
      WebType:
        type: string
        description: The prefix class to a web address, such as FTP or HTTP.
        title: Protocol
        maxLength: 60
      YearEstablished:
        type: integer
        format: int32
        description: The year that the organization started it business operations.
        title: Year Established
      accountTeamMembers:
        description: A partner account team members resource is used to view, create, or modify the group of team members who will work with the partner. The team members are responsible for a partner account, and have access to edit the partner account information.
        title: Partner Account Team Members
        $ref: '#/definitions/partners-accountTeamMembers'
      attachments:
        description: An attachments resource is used to view, create, modify or delete the partner's attachments.
        title: Attachments
        $ref: '#/definitions/partners-attachments'
      certifications:
        description: A certification resource is used to view, create, or modify the certifications of a partner, such as Specialist.
        title: Partner Certifications
        $ref: '#/definitions/partners-certifications'
      contacts:
        description: A partner contact resource is used to view, create, or modify the contacts of the partner company. For example, partner sales rep, partner sales manager, partner administrator.
        title: Partner Contacts
        $ref: '#/definitions/partners-contacts'
      expertises:
        description: An expertises resource is used to view, create, or modify the partner's expertises.
        title: Expertises
        $ref: '#/definitions/partners-expertises'
      geographies:
        description: A partner geography resource is used to view, create, or modify the geographies that the partner operates in, such as, US or CA.
        title: Geographies
        $ref: '#/definitions/partners-geographies'
      industries:
        description: An industry resource is used to view, create, or modify the industries that a channel partner works with. For example, a partner's industry can be manufactory or automotive.
        title: Industries
        $ref: '#/definitions/partners-industries'
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
      notes:
        description: A notes resource is used to view, create, or modify the notes captured regarding the partner. For example, you can have notes for comments, information, or instructions.
        title: Notes
        $ref: '#/definitions/partners-notes'
      productSpecialities:
        description: A focus area resource is used to view, create, or modify the partner's focus areas. For example, a partner's focus area can be green servers.
        title: Focus Areas
        $ref: '#/definitions/partners-productSpecialities'
      types:
        description: A partner type resource is used to view, create, or modify the relationships you have with the partner. For example, a partner can be reseller, distributor, or both.
        title: Partner Types
        $ref: '#/definitions/partners-types'
    x-links:
    - rel: lov
      title: Country LOV
      description: 'The list of values for the country code of the partner, such as US and UK.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Country; Target Attribute: TerritoryCode</li><li>Display Attribute: TerritoryShortName</li></ul>'
      method: get
      href: /salesApi/resources/latest/partners/{CompanyNumber}/lov/CountryLookup?fields=TerritoryCode,TerritoryShortName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          TerritoryCode:
            type: string
            description: Unique code for the lookup.
          TerritoryShortName:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - Country
      effectiveMethod: get
    - rel: lov
      title: PartnerLevel LOV
      description: 'The list of values for the relative level of the partner, such as Platinum, Gold, Silver.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PartnerLevel; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/partners/{CompanyNumber}/lov/PartnerLevelLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - PartnerLevel
      effectiveMethod: get
    - rel: lov
      title: Status LOV
      description: 'The list of values for the status of the partner''s relationship with the organization, for example, Prospective, Registered, Active, Expired, Terminated.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Status; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/partners/{CompanyNumber}/lov/PartnerStatusLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - Status
      effectiveMethod: get
    - rel: lov
      title: OrganizationSize LOV
      description: 'The list of values for size of the organization based on its revenue, number of employees, and so on.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: OrganizationSize; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/partners/{CompanyNumber}/lov/OrganizationSizeLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - OrganizationSize
      effectiveMethod: get
    - rel: lov
      title: ComplianceStatus LOV
      description: 'The list of values that indicate if the partner is compliant with organization''s criteria, such as Compliant or Not Compliant.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ComplianceStatus; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/partners/{CompanyNumber}/lov/PartnerComplianceStatusLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ComplianceStatus
      effectiveMethod: get
    - rel: lov
      title: PublicStatus LOV
      description: 'The list of values for the status of approval of public profile, for example, Draft, Submitted, Approved, Returned.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PublicStatus; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/partners/{CompanyNumber}/lov/PartnerPublicStatusLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - PublicStatus
      effectiveMethod: get
    - rel: lov
      title: IsSelfRegisteredPartner LOV
      description: 'The list of values that indicate whether the partner registration approval process will be invoked or not, such as Y, N. If the value is Y, then the process will be invoked.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: IsSelfRegisteredPartner; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/partners/{CompanyNumber}/lov/YesNoLookupPVO?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - IsSelfRegisteredPartner
      effectiveMethod: get
  partners-notes:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/partners-notes-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  partners-notes-item:
    type: object
    properties:
      ContactRelationshipId:
        type: integer
        format: int64
        description: The relationship ID populated when the note is associated with a contact.
        title: Contact Relationship ID
      CorpCurrencyCode:
        type: string
        description: The corporate currency code of the note associated with the contact. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup<br>ZCA_COMMON_CORPORATE_CURRENCY.Review and update the profile option using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Corporate Currency Code
        maxLength: 15
      CreatedBy:
        type: string
        description: The user who created the note record.
        title: Created By
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time when the note record was created.
        title: Creation Date
      CreatorPartyId:
        type: integer
        format: int64
        description: The unique party identifier for the note creator.
        title: Creator Party ID
      CurcyConvRateType:
        type: string
        description: The currency conversion rate type associated with the note. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup ZCA_COMMON_RATE_TYPE. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Currency Conversion Rate Type
        maxLength: 30
      CurrencyCode:
        type: string
        description: The currency code associated with the note. This attribute is used by CRM Extensibility framework. A list of accepted values is defined in the lookup<br>ZCA_COMMON_CORPORATE_CURRENCY. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Trading Community Common Lookups task.
        title: Currency
        maxLength: 15
      DeleteFlag:
        type: boolean
        description: Indicates whether the note is to be deleted. If the value is Y, then the note has to be deleted. The default value is N.
        title: Delete Indicator
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the note data was last updated.
        title: Last Update Date
      LastUpdateLogin:
        type: string
        description: The login of the user who last updated the record.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 64
      NoteId:
        type: integer
        format: int64
        description: The unique note identifier.
        title: Note Id
      NoteTxt:
        type: string
        description: The actual note text.
        title: Note Text
      NoteTypeCode:
        type: string
        description: The code for categorization of the note type.
        title: Type
        maxLength: 30
      PartyId:
        type: integer
        format: int64
        description: The unique identifier of the contact to which the note is associated.
        title: Party ID
      PartyName:
        type: string
        description: The name of this party.
        title: Author
        maxLength: 360
      SourceObjectCode:
        type: string
        description: The code of the source object such as Activities, Opportunities, as defined in OBJECTS Metadata.
        title: Related Object Type
        maxLength: 30
      SourceObjectId:
        type: string
        description: The primary key identifier of the source object such as Activities, Opportunities, as defined in OBJECTS Metadata.
        title: Related Object
        maxLength: 64
      UpdateFlag:
        type: boolean
        description: Indicates whether the note can be updated. If the value is Y, then the note can be updated. The default value is N.
        title: Update Indicator
      VisibilityCode:
        type: string
        description: Specifies the visibility level of the note.
        title: Visibility
        maxLength: 30
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: NoteTypeCode LOV
      description: 'The list of values for the note type code for categorization of note, such as General or Official.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: NoteTypeCode; Target Attribute: MappedLookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/partners/{CompanyNumber}/child/notes/{NoteId}/lov/NoteSourceTypeVA?fields=MappedLookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          MappedLookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - NoteTypeCode
      effectiveMethod: get
    - rel: lov
      title: VisibilityCode LOV
      description: 'The list of values for the visibility level of the note, such as External or Internal.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: VisibilityCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/partners/{CompanyNumber}/child/notes/{NoteId}/lov/NoteVisibilityLookupVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          LookupCode:
            type: string
            description: Unique code for the lookup.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - VisibilityCode
      effectiveMethod: get
    - rel: lov
      title: CurrencyCode LOV
      description: 'The corporate currency code associated with the note, such as USD or INR, expressed as the standard, three-letter, ISO-4217 currency code.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CurrencyCode; Target Attribute: CurrencyCode</li><li>Display Attribute: CurrencyCode</li></ul>'
      method: get
      href: /salesApi/resources/latest/partners/{CompanyNumber}/child/notes/{NoteId}/lov/RatedCurrenciesVA?fields=CurrencyCode
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          CurrencyCode:
            type: string
            description: Unique code & display value for the lookup.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CurrencyCode
      effectiveMethod: get
  partners-productSpecialities:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/partners-productSpecialities-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  partners-productSpecialities-item:
    type: object
    properties:
      PartnerDimMembersId:
        type: integer
        format: int64
        description: The unique identifier of the specialty with the partner.
        title: Specialty ID
      ProductId:
        type: string
        description: The unique identifier associated with a product specialty.
        maxLength: 30
      ProductName:
        type: string
        description: The product name of the product specialty.
        maxLength: 360
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  partners-types:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/partners-types-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  partners-types-item:
    type: object
    properties:
      PartnerTypeCode:
        type: string
        description: The partner type code for the partner type.
        title: Partner Type
        maxLength: 30
      PartnerTypeName:
        type: string
        description: The partner type name, such as Value Added Reseller.
        maxLength: 360
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  partnerPrograms:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/partnerPrograms-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  partnerPrograms-PartnerProgramCountries:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/partnerPrograms-PartnerProgramCountries-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  partnerPrograms-PartnerProgramCountries-item:
    type: object
    properties:
      CountryCode:
        type: string
        description: The country code to which the partner program applies.
        maxLength: 2
      CreatedBy:
        type: string
        description: Indicates the user who created the row.
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: Indicates the date and time the row was created.
      DeleteFlag:
        type: boolean
        description: Indicates whether the program countries can be deleted. If the value is Y, then the program countries can be deleted. The default value is N.
      LastUpdateDate:
        type: string
        format: date-time
        description: Indicates the date and time the row was last updated.
      LastUpdatedBy:
        type: string
        description: Indicates the user who last updated the row.
        maxLength: 64
      PartnerProgramId:
        type: integer
        format: int64
        description: The unique identifier for the partner program to which the country has been added.
      ProgramCountryId:
        type: integer
        format: int64
        description: The system-generated unique identifier and primary key for the program country.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  partnerPrograms-ProgramBenefitDetails:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/partnerPrograms-ProgramBenefitDetails-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  partnerPrograms-ProgramBenefitDetails-item:
    type: object
    properties:
      BenefitListValue:
        type: string
        description: The list value of the program tier benefit when the value type of program benefit is "List".
      BenefitValue:
        type: string
        description: The value of a program tier benefit in a format appropriate for the program benefit's value type.
        title: Value
        maxLength: 150
      CategoryCode:
        type: string
        description: The program benefit category.
        title: Category
        maxLength: 30
      CreatedBy:
        type: string
        description: Indicates the user who created the row.
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: Indicates the date and time the row was created.
      DataType:
        type: string
        description: The value type of the program benefit.
        title: Value Type
        maxLength: 30
      DeleteFlag:
        type: boolean
        description: Indicates whether the program benefit can be deleted. If the value is Y, then the program benefit can be deleted. The default value is N.
      Description:
        type: string
        description: The text describing the program benefit.
        title: Benefits Description
        maxLength: 1000
      LastUpdateDate:
        type: string
        format: date-time
        description: Indicates the date and time the row was last updated.
        title: Last Updated Date
      LastUpdatedBy:
        type: string
        description: Indicates the user who last updated the row.
        title: Last Updated By
        maxLength: 64
      Name:
        type: string
        description: The name of the program tier benefit.
        title: Name
        maxLength: 155
      PartnerProgramId:
        type: integer
        format: int64
        description: The unique identifier for the partner program to which the program tier benefit has been added.
      ProgramBenefitDetailId:
        type: integer
        format: int64
        description: The system-generated unique identifier and primary key of the program tier benefit.
      ProgramBenefitId:
        type: integer
        format: int64
        description: The unique identifier for a program benefit added to a program or program tier.
      TierId:
        type: integer
        format: int64
        description: The unique identifier for a tier to which a program tier benefit applies.
        title: Tier
      TierName:
        type: string
        description: The name of a tier to which a program tier benefit applies.
        title: Name
        maxLength: 155
      UpdateFlag:
        type: boolean
        description: Indicates whether the program benefit can be updated. If the value is Y, then the program benefit can be updated. The default value is N.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: TierId LOV
      description: 'The list of values indicating the partner program tier to which a program-tier benefit applies, such as Platinum, Gold, or Silver. The tiers are created by the user.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: TierId; Target Attribute: TierId</li><li>Display Attribute: Name</li></ul>'
      method: get
      href: /salesApi/resources/latest/partnerPrograms/{ProgramNumber}/child/ProgramBenefitDetails/{ProgramBenefitDetailId}/lov/ProgramTiers?fields=TierId,Name
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          TierId:
            type: integer
            description: Unique identifier and primary key for the tier.
          Name:
            type: string
            description: Display value or name of the tier entered by the user.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - TierId
      effectiveMethod: get
    - rel: lov
      title: Name LOV
      description: 'The list of values indicating the partner program benefit name, such as Additional Discount or Welcome Kit. No out-of-the-box values. The benefits are created by the user.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: Name; Target Attribute: Name</li><li>Source Attribute: ProgramBenefitId; Target Attribute: ProgramBenefitId</li><li>Display Attribute: Name</li></ul>'
      method: get
      href: /salesApi/resources/latest/partnerPrograms/{ProgramNumber}/child/ProgramBenefitDetails/{ProgramBenefitDetailId}/lov/Benefits?fields=Name,ProgramBenefitId
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          Name:
            type: string
            description: Display name of the benefit entered by the user.
          ProgramBenefitId:
            type: integer
            description: Unique identifier and primary key for the benefit.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - Name
      - ProgramBenefitId
      effectiveMethod: get
    - rel: lov
      title: CategoryCode LOV
      description: 'The list of values indicating the category of the partner program or program-tier benefit, such as Financial, Sales, or Marketing.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CategoryCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/partnerPrograms/{ProgramNumber}/child/ProgramBenefitDetails/{ProgramBenefitDetailId}/lov/BenefitCategoryCodes?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CategoryCode
      effectiveMethod: get
    - rel: lov
      title: BenefitListValue LOV
      description: 'The list of values indicating the program or program-tier benefit when the value type of the program benefit is List. List values are created previously by user as part of the benefit definition.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: BenefitListValue; Target Attribute: BenefitListTypeValId</li><li>Display Attribute: ValueName</li></ul>'
      method: get
      href: /salesApi/resources/latest/partnerPrograms/{ProgramNumber}/child/ProgramBenefitDetails/{ProgramBenefitDetailId}/lov/BenefitListTypeValues?fields=BenefitListTypeValId,ValueName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          BenefitListTypeValId:
            type: integer
            description: Unique identifier and primary key for each list value, for a benefit of "List" value type.
          ValueName:
            type: string
            description: Display value entered by the user for each list value, for a benefit of "List" value type.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - BenefitListValue
      effectiveMethod: get
  partnerPrograms-ProgramTiers:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/partnerPrograms-ProgramTiers-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  partnerPrograms-ProgramTiers-item:
    type: object
    properties:
      BadgeImageName:
        type: string
        description: The badge image name of the program tier.
        title: Badge
        maxLength: 100
      CreatedBy:
        type: string
        description: Indicates the user who created the row.
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: Indicates the date and time the row was created.
      DeleteFlag:
        type: boolean
        description: Indicates whether the program tier should be deleted. If the value is Y, then the program tier has to be deleted. The default value is N.
      EnrollmentCount:
        type: integer
        format: int32
        description: The count of enrollments referencing the program tier.
        title: Enrollments
      LastUpdateDate:
        type: string
        format: date-time
        description: Indicates the user who last updated the row.
      LastUpdatedBy:
        type: string
        description: Indicates the date and time the row was last updated.
        maxLength: 64
      Name:
        type: string
        description: The name of the program tier.
        title: Name
        maxLength: 155
      PartnerProgramId:
        type: integer
        format: int64
        description: The unique identifier for the partner program to which the tier has been added.
      ProgramTierId:
        type: integer
        format: int64
        description: The unique identifier for a program tier added to a program.
      Ranking:
        type: integer
        format: int32
        description: The rank of the program tier.
        title: Rank
      TierId:
        type: integer
        format: int64
        description: The unique identifier of the Tier which is being added to the program.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: TierId LOV
      description: 'The list of values indicating the tiers.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: TierId; Target Attribute: TierId</li><li>Display Attribute: Name</li></ul>'
      method: get
      href: /salesApi/resources/latest/partnerPrograms/{ProgramNumber}/child/ProgramTiers/{ProgramTierId}/lov/Tiers?fields=TierId,Name
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          TierId:
            type: integer
            description: Unique identifier and primary key for the tier.
          Name:
            type: string
            description: Display value or name of the tier entered by the user.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - TierId
      effectiveMethod: get
  partnerPrograms-item:
    type: object
    properties:
      CreatedBy:
        type: string
        description: Indicates the user who created the row.
        title: Created By
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: Indicates the date and time when the row was created.
        title: Creation Date
      DeleteFlag:
        type: boolean
        description: Indicates whether the program can be deleted. If the value is Y, then the program can be deleted. The default value is N.
      EndDateActive:
        type: string
        format: date
        description: The end date of the partner program.
        title: End Date
      LastUpdateDate:
        type: string
        format: date-time
        description: Indicates the date and time when the row was last updated.
        title: Last Updated Date
      LastUpdatedBy:
        type: string
        description: Indicates the user who last updated the row.
        title: Last Updated By
        maxLength: 64
      PartnerProgramCountries:
        description: The child of a partner program that allows for management of countries.
        title: Countries
        $ref: '#/definitions/partnerPrograms-PartnerProgramCountries'
      PartnerProgramId:
        type: integer
        format: int64
        description: The system-generated unique identifier and primary key of the partner program.
        title: Program ID
      ProgramBenefitDetails:
        description: The child of a partner program that allows for management of program benefits.
        title: Program Benefit Details
        $ref: '#/definitions/partnerPrograms-ProgramBenefitDetails'
      ProgramDescription:
        type: string
        description: The text describing the program.
        title: Description
        maxLength: 1000
      ProgramManagerId:
        type: integer
        format: int64
        description: The unique identifier for the owner of the partner program.
        title: Program Manager ID
      ProgramManagerName:
        type: string
        description: The name of the owner/manager of the partner program.
        title: Owner
        maxLength: 360
      ProgramName:
        type: string
        description: The name of the partner program.
        title: Name
        maxLength: 150
      ProgramNumber:
        type: string
        description: The unique number generated for each program.
        title: Program Number
        maxLength: 30
      ProgramTiers:
        description: The child of a partner program that allows for management of tiers for a given program.
        title: Tiers
        $ref: '#/definitions/partnerPrograms-ProgramTiers'
      ProgramType:
        type: string
        description: The type of partner program.
        title: Type
        maxLength: 30
      StartDateActive:
        type: string
        format: date
        description: The start date of the partner program.
        title: Start Date
      UpdateFlag:
        type: boolean
        description: Indicates whether the program can be updated. If the value is Y, then the program can be updated. The default value is N.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: ProgramManagerName LOV
      description: 'The list of values indicating the name of the owner or manager of the partner program, such as Colby Morris.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ProgramManagerName; Target Attribute: ResourceName</li><li>Source Attribute: ProgramManagerId; Target Attribute: PartyId</li><li>Display Attribute: ResourceFirstName</li><li>Display Attribute: ResourceLastName</li><li>Display Attribute: EmailAddress</li><li>Display Attribute: OrganizationName</li><li>Display Attribute: RoleName</li></ul>'
      method: get
      href: /salesApi/resources/latest/partnerPrograms/{ProgramNumber}/lov/Resources?fields=ResourceName,PartyId,ResourceFirstName,ResourceLastName,EmailAddress,OrganizationName,RoleName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          ResourceName:
            type: string
            description: The name of the owner of the partner program, i.e., the channel manager responsible for this program.
          PartyId:
            type: integer
            description: Unique identifier for the resource party corresponding to the partner program owner.
          ResourceFirstName:
            type: string
            description: The partner program owner's first name.
          ResourceLastName:
            type: string
            description: The partner program owner's last name.
          EmailAddress:
            type: string
            description: The partner program owner's email address.
          OrganizationName:
            type: string
            description: The partner program owner's resource organization name.
          RoleName:
            type: string
            description: The partner program owner's role.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ProgramManagerName
      - ProgramManagerId
      effectiveMethod: get
    - rel: lov
      title: ProgramType LOV
      description: 'The list of values indicating the type of the partner program, such as Developer, Distributor, or Reseller.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ProgramType; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/partnerPrograms/{ProgramNumber}/lov/ProgramTypes?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ProgramType
      effectiveMethod: get
  activities:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/activities-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  activities-ActivityAssignee:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/activities-ActivityAssignee-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  activities-ActivityAssignee-item:
    type: object
    properties:
      ActivityAssigneeId:
        type: integer
        format: int64
        description: The unique identifier for the surrogate activity assignee.
      ActivityId:
        type: integer
        format: int64
        description: The unique identifier of the parent activity.
      AssigneeId:
        type: integer
        format: int64
        description: The unique identifier of the assignee associated with the activity.
      AssigneeName:
        type: string
        description: The name of the assignee.
      AssigneePartyNumber:
        type: string
        description: The unique number of the activity resource.
      AttendeeFlag:
        type: boolean
        description: Indicates if the resource attended the activity. If True, the resource attended.
      CorpCurrencyCode:
        type: string
        description: The corporate currency used by the activity assignee.
        maxLength: 15
      CreatedBy:
        type: string
        description: The user who created the activity assignee.
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time of when the activity assignee was created.
      CurcyConvRateType:
        type: string
        description: The rate of currency conversion for an activity assignee.
        maxLength: 30
      CurrencyCode:
        type: string
        description: The currency used for an activity assignee.
        maxLength: 15
      DismissFlag:
        type: boolean
        description: Indicates if the activity has been dismissed.
      JobName:
        type: string
        description: The job name for the activity assignee.
      LastUpdateDate:
        type: string
        format: date-time
        description: The last updated date and time of the activity assignee.
      LastUpdateLogin:
        type: string
        description: The unique identifier of the user who last updated the activity assignee.
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The unique identifier of the user who last updated the activity assignee.
        maxLength: 64
      Phone:
        type: string
        description: The phone number of the contact.
      PrimaryEmail:
        type: string
        description: The e-mail address of the activity assignee contact.
      PrimaryFormattedAddress:
        type: string
        description: The primary formatted address information of an activity assignee.
      ReminderDatetime:
        type: string
        format: date-time
        description: The date and time to send the appointment reminder.
      ReminderPeriod:
        type: integer
        format: int32
        description: The capture of how soon before the appointment to send a reminder.
      ResponseCode:
        type: string
        description: The indicator to decide whether a reminder is needed.
        maxLength: 30
      ShowTimeAsCode:
        type: string
        description: 'The choice of display of time on your calender for an appointment, for example: free, busy, tentative.'
        maxLength: 30
      UserLastUpdateDate:
        type: string
        format: date-time
        description: The date and time when the record was last updated by a user in the disconnect mode.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: ReminderPeriod LOV
      description: 'The list of values indicating how soon before the appointment to send a reminder.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ReminderPeriod; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/child/ActivityAssignee/{ActivityAssigneeUniqID}/lov/ReminderListVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ReminderPeriod
      effectiveMethod: get
    - rel: lov
      title: ResponseCode LOV
      description: 'The list of values to decide whether a reminder is needed.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ResponseCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/child/ActivityAssignee/{ActivityAssigneeUniqID}/lov/ResponseCodeListVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ResponseCode
      effectiveMethod: get
    - rel: lov
      title: ShowTimeAsCode LOV
      description: 'The list of values indicating the display of time on your calender for an appointment, such as free, busy, tentative.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ShowTimeAsCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/child/ActivityAssignee/{ActivityAssigneeUniqID}/lov/ShowTimeAsCodeListVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ShowTimeAsCode
      effectiveMethod: get
    - rel: lov
      title: AssigneeName LOV
      description: 'The list of values indicating the name of the assignee.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AssigneeName; Target Attribute: ResourceName</li><li>Source Attribute: AssigneeId; Target Attribute: PartyId</li><li>Source Attribute: PrimaryEmail; Target Attribute: EmailAddress</li><li>Source Attribute: Phone; Target Attribute: FormattedPhoneNumber</li><li>Source Attribute: AssigneePartyNumber; Target Attribute: PartyNumber</li><li>Display Attribute: ResourceName</li><li>Display Attribute: EmailAddress</li><li>Display Attribute: FormattedPhoneNumber</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/child/ActivityAssignee/{ActivityAssigneeUniqID}/lov/AssigneeListVA?fields=ResourceName,PartyId,EmailAddress,FormattedPhoneNumber,PartyNumber
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - AssigneeName
      - AssigneeId
      - PrimaryEmail
      - Phone
      - AssigneePartyNumber
      effectiveMethod: get
    - rel: lov
      title: CurrencyCode LOV
      description: 'The list of values indicating the corporate currency used by the activity assignee.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CurrencyCode; Target Attribute: CurrencyCode</li><li>Display Attribute: CurrencyCode</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/child/ActivityAssignee/{ActivityAssigneeUniqID}/lov/RatedCurrenciesVA?fields=CurrencyCode
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CurrencyCode
      effectiveMethod: get
    - rel: lov
      title: AttendeeFlag LOV
      description: 'The list of values indicating if the resource attended the activity. If True, the resource attended.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AttendeeFlag; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/child/ActivityAssignee/{ActivityAssigneeUniqID}/lov/YesNoAttendeeFlagLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - AttendeeFlag
      effectiveMethod: get
    - rel: lov
      title: DismissFlag LOV
      description: 'The list of values indicating if the activity has been dismissed.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DismissFlag; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/child/ActivityAssignee/{ActivityAssigneeUniqID}/lov/YesNoLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - DismissFlag
      effectiveMethod: get
  activities-ActivityContact:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/activities-ActivityContact-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  activities-ActivityContact-item:
    type: object
    properties:
      ActivityContactId:
        type: integer
        format: int64
        description: The unique identifier for the surrogate activity contact.
      ActivityId:
        type: integer
        format: int64
        description: The unique identifier of the parent activity for the objective.
      Affinity:
        type: string
        description: The affinity of an activity contact to the deploying organization. A list of accepted values is defined in the lookup HZ_SLS_CNTCT_AFFINITY_CODE. Review and update the value for this attribute using the Setup and Maintenance work area, Manage Contact Lookups task.
      AttendeeFlag:
        type: boolean
        description: Indicates if the contact attended the activity. If True, the contact attended.
      BuyingRole:
        type: string
        description: The roles played by the activity contact in the buying process, for example, decision maker or supporting role. A list of accepted values is defined in the lookup HZ_SLS_CNTCT_BUY_ROLE_CODE. Review and update the values for this attribute using the Setup and Maintenance work area, Manage Contact Lookups task.
      ContactAccount:
        type: string
        description: The account associated with the activity contact.
      ContactAccountId:
        type: integer
        format: int64
        description: The unique identifier of the account associated with the activity contact.
      ContactEmail:
        type: string
        description: The e-mail address of the activity contact.
      ContactId:
        type: integer
        format: int64
        description: The unique identifier of the contact associated with the activity.
      ContactJobTitle:
        type: string
        description: The job title of the activity contact.
      ContactName:
        type: string
        description: The name of the contact for the activity.
      ContactPartyNumber:
        type: string
        description: The unique number of the activity contact.
      ContactPhone:
        type: string
        description: The phone number of the activtity contact.
      CorpCurrencyCode:
        type: string
        description: The corporate currency used by the activity contact.
        maxLength: 15
      CreatedBy:
        type: string
        description: The user who created the activity contact.
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time when the activity contact was created.
      CurcyConvRateType:
        type: string
        description: The rate of currency conversion for an activity contact.
        maxLength: 30
      CurrencyCode:
        type: string
        description: The currency used for an activity contact.
        maxLength: 15
      DoNotCallFlag:
        type: boolean
        description: Indicates the contact should not be called.
      DoNotContactFlag:
        type: boolean
        description: Indicates the contact should not be contacted.
      DoNotEmailFlag:
        type: boolean
        description: Indicates the contact should not be emailed.
      LastUpdateDate:
        type: string
        format: date-time
        description: The date and time of when the activity contact was last updated.
      LastUpdateLogin:
        type: string
        description: The unique identifier of the user who last updated the activity contact.
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The unique identifier of the user who last updated the activity contact. This is defaulted by the system.
        maxLength: 64
      ObjectVersionNumber:
        type: integer
        format: int32
        description: The number of updates on an activity contact row.
      PrimaryContactFlag:
        type: boolean
        description: Indicates if this contact is the primary contact.
      PrimaryFormattedAddress:
        type: string
        description: The formatted address information of the activity contact.
      RelationshipId:
        type: integer
        format: int64
        description: The unique identifier of the relationship of the contact.
      UserLastUpdateDate:
        type: string
        format: date-time
        description: The date and time of when the contact was last updated by a user in the disconnect mode.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: ContactName LOV
      description: 'The list of values indicating the name of the contact for the activity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ContactName; Target Attribute: PartyName</li><li>Source Attribute: ContactId; Target Attribute: PartyId</li><li>Source Attribute: RelationshipId; Target Attribute: RelationshipId</li><li>Source Attribute: ContactEmail; Target Attribute: PrimaryEmailAddress</li><li>Source Attribute: ContactPhone; Target Attribute: PrimaryFormattedPhoneNumber</li><li>Source Attribute: ContactJobTitle; Target Attribute: JobTitle</li><li>Source Attribute: ContactPartyNumber; Target Attribute: PartyNumber</li><li>Display Attribute: PartyName</li><li>Display Attribute: PrimaryEmailAddress</li><li>Display Attribute: PrimaryFormattedPhoneNumber</li><li>Display Attribute: JobTitle</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/child/ActivityContact/{ActivityContactUniqID}/lov/ContactListVA?fields=PartyName,PartyId,RelationshipId,PrimaryEmailAddress,PrimaryFormattedPhoneNumber,JobTitle,PartyNumber
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ContactName
      - ContactId
      - RelationshipId
      - ContactEmail
      - ContactPhone
      - ContactJobTitle
      - ContactPartyNumber
      effectiveMethod: get
    - rel: lov
      title: CurrencyCode LOV
      description: 'The list of values indicating the currency used for an activity contact.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CurrencyCode; Target Attribute: CurrencyCode</li><li>Display Attribute: CurrencyCode</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/child/ActivityContact/{ActivityContactUniqID}/lov/RatedCurrenciesVA?fields=CurrencyCode
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CurrencyCode
      effectiveMethod: get
    - rel: lov
      title: AttendeeFlag LOV
      description: 'The list of values indicating the contact attendance.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AttendeeFlag; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/child/ActivityContact/{ActivityContactUniqID}/lov/YesNoAttendeeFlagLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - AttendeeFlag
      effectiveMethod: get
  activities-ActivityObjectives:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/activities-ActivityObjectives-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  activities-ActivityObjectives-item:
    type: object
    properties:
      ActivityId:
        type: integer
        format: int64
        description: The unique identifier of the parent activity.
      CompletedFlag:
        type: boolean
        description: Indicates if the activity objective is completed. If True, the activity is completed.
      ConflictId:
        type: integer
        format: int64
        description: The unique identifier for the conflict in the activity objectives.
      CorpCurrencyCode:
        type: string
        description: The corporate currency used by the activity objectives.
        maxLength: 15
      CreatedBy:
        type: string
        description: The user who created the activity objective.
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time when the activity objective was created.
      CurcyConvRateType:
        type: string
        description: The rate of currency conversion for an activity objective.
        maxLength: 30
      CurrencyCode:
        type: string
        description: The currency used for an activity objective.
        maxLength: 15
      LastUpdateDate:
        type: string
        format: date-time
        description: The date and time when the activity objective was last updated.
      LastUpdateLogin:
        type: string
        description: The unique identifier of the user who last updated the activity objective.
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the activity objective.
        maxLength: 64
      ObjectiveCode:
        type: string
        description: The objective of the activity.
        maxLength: 30
      ObjectiveFreefmtText:
        type: string
        description: The text area to describe the objective of the activity.
        maxLength: 80
      ObjectiveId:
        type: integer
        format: int64
        description: The unique identifier of the objective.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: ObjectiveCode LOV
      description: 'The list of values indicating the objective of the activity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ObjectiveCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/child/ActivityObjectives/{ObjectiveId}/lov/ObjectiveLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ObjectiveCode
      effectiveMethod: get
    - rel: lov
      title: CurrencyCode LOV
      description: 'The list of values indicating the currency used for an activity assignee.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CurrencyCode; Target Attribute: CurrencyCode</li><li>Display Attribute: CurrencyCode</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/child/ActivityObjectives/{ObjectiveId}/lov/RatedCurrenciesVA?fields=CurrencyCode
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CurrencyCode
      effectiveMethod: get
  activities-Attachments:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/activities-Attachments-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  activities-Attachments-item:
    type: object
    properties:
      CategoryName:
        type: string
        description: The category of the attachment.
        title: Category
        maxLength: 30
      ContentRepositoryFileShared:
        type: boolean
        description: Indicates whether the attachment is shared.
        title: Shared
      CreatedBy:
        type: string
        description: The user who created the attachment.
        maxLength: 255
      CreationDate:
        type: string
        format: date-time
        description: The date when the attachment record was created.
      DatatypeCode:
        type: string
        description: A value that  indicates the data type.
        title: Type
        maxLength: 30
      Description:
        type: string
        description: The description of the attachment.
        title: Description
        maxLength: 255
      DmFolderPath:
        type: string
        description: The folder path of the attachment.
        maxLength: 1000
      ErrorStatusCode:
        type: string
        description: The error code, if any, for the attachment.
        title: Error Status Code
      ErrorStatusMessage:
        type: string
        description: The error message, if any, for the attachment.
        title: Error Status Message
      ExpirationDate:
        type: string
        format: date-time
        description: The expiration date of the contents in the attachment.
        title: Expiration Date
      FileContents:
        type: string
        format: binary
        description: The contents of the attachment.
        title: File Contents
      FileName:
        type: string
        description: The file name of the attachment.
        title: File Name
        maxLength: 2048
      FileUrl:
        type: string
        description: The URL of the attachment.
      LastUpdateDate:
        type: string
        format: date-time
        description: The date when the record was last updated.
        title: Last Update Date
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 255
      Title:
        type: string
        description: The title of the attachment.
        title: Title
      UploadedFileContentType:
        type: string
        description: The content type of the attachment.
      UploadedFileLength:
        type: integer
        format: int64
        description: The length of the attachment file.
      UploadedFileName:
        type: string
        description: The name of the attachment file.
      UploadedText:
        type: string
        description: The text of the attachment.
      Uri:
        type: string
        description: The URI of the attachment.
        title: Uri
        maxLength: 4000
      Url:
        type: string
        description: The URL of the attachment.
        maxLength: 4000
      UserName:
        type: string
        description: The login associated with the attachment.
        title: Category Name
        maxLength: 255
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  activities-Note:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/activities-Note-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  activities-Note-item:
    type: object
    properties:
      ContactRelationshipId:
        type: integer
        format: int64
        description: The unique relationship identifier populated when the note is associated with a contact.
        title: Contact Relationship ID
      CorpCurrencyCode:
        type: string
        description: The corporate currency used by the note.
        title: Corporate Currency Code
        maxLength: 15
      CreatedBy:
        type: string
        description: The user who created the row.
        title: Created By
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time of when the row in the Who column was created.
        title: Creation Date
      CreatorPartyId:
        type: integer
        format: int64
        description: The unique identifier of the person who created the note.
        title: Creator Party ID
      CurcyConvRateType:
        type: string
        description: The rate of currency conversion for a note.
        title: Currency Conversion Rate Type
        maxLength: 30
      CurrencyCode:
        type: string
        description: The currency used by a note.
        title: Currency
        maxLength: 15
      DeleteFlag:
        type: boolean
        description: Indicates whether the note is to be deleted. If the value is Y, then the note has to be deleted. The default value is N.
        title: Delete Indicator
      LastUpdateDate:
        type: string
        format: date-time
        description: The date and time of when the last update of the row was made in the Who column.
        title: Last Update Date
      LastUpdateLogin:
        type: string
        description: The login of the user who last updated the record.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the record.
        title: Last Updated By
        maxLength: 64
      NoteId:
        type: integer
        format: int64
        description: The unique note identifier.
        title: Note Id
      NoteTxt:
        type: string
        description: The column to store the note text.
        title: Note Text
      NoteTypeCode:
        type: string
        description: The note type code for categorization of the note.
        title: Type
        maxLength: 30
      SourceObjectCode:
        type: string
        description: The source object code for the source object as defined in the objects metadata.
        title: Related Object Type
        maxLength: 30
      SourceObjectId:
        type: string
        description: The unique identifier of the source object such as activities, opportunities, as defined in the objects metadata.
        title: Related Object
        maxLength: 64
      UpdateFlag:
        type: boolean
        description: Indicates whether the note can be updated. If the value is Y, then the note can be updated. The default value is N.
        title: Update Indicator
      VisibilityCode:
        type: string
        description: The visibility level of the note.
        title: Visibility
        maxLength: 30
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: NoteTypeCode LOV
      description: 'The list of values indicating the note type code for categorization of the note, such as adjustment, asset, beneficiaries.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: NoteTypeCode; Target Attribute: MappedLookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/child/Note/{NoteId}/lov/NoteSourceTypeVA?fields=MappedLookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          MappedLookupCode:
            type: string
            description: The unique code of the note mapping.
          Meaning:
            type: string
            description: Display value for the lookup in the application.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - NoteTypeCode
      effectiveMethod: get
    - rel: lov
      title: VisibilityCode LOV
      description: 'The list of values indicating the visibility level of the note, such as internal, external, private.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: VisibilityCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/child/Note/{NoteId}/lov/NoteVisibilityLookupVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - VisibilityCode
      effectiveMethod: get
    - rel: lov
      title: CurrencyCode LOV
      description: 'The list of values indicating the currency used by a note.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CurrencyCode; Target Attribute: CurrencyCode</li><li>Display Attribute: CurrencyCode</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/child/Note/{NoteId}/lov/RatedCurrenciesVA?fields=CurrencyCode
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CurrencyCode
      effectiveMethod: get
  activities-item:
    type: object
    properties:
      AccountId:
        type: integer
        format: int64
        description: 'The unique identifier of the activity account. Examples of account are: customer, organization, person, partner.'
      AccountName:
        type: string
        description: The name of the account associated with the activity.
        maxLength: 255
      ActivityAssignee:
        description: The activity captures the assignees/resources associated to the activity.
        title: Activity Assignees
        $ref: '#/definitions/activities-ActivityAssignee'
      ActivityContact:
        description: The activity captures the contacts associated to the activity.
        title: Activity Contacts
        $ref: '#/definitions/activities-ActivityContact'
      ActivityCreatedBy:
        type: string
        description: The user who created the activity.
        maxLength: 64
      ActivityCreationDate:
        type: string
        format: date-time
        description: The date when the record was created.
      ActivityDescription:
        type: string
        description: A text area for capturing information about the activity.
      ActivityEndDate:
        type: string
        format: date-time
        description: The date and time of when an appointment ends. The time when a task is completed.
      ActivityFunctionCode:
        type: string
        description: The activity that compares tasks with appointments.
        maxLength: 30
      ActivityId:
        type: integer
        format: int64
        description: The unique identifier of the activity.
      ActivityLastUpdateLogin:
        type: string
        description: The date when the record was last updated.
        maxLength: 32
      ActivityMtgMinutes:
        type: string
        description: The minutes of meeting of the activity.
      ActivityNumber:
        type: string
        description: The unique number of the activity. The number can also be generated from an external source.
        maxLength: 64
      ActivityObjectives:
        description: The activity captures the objectives associated to the activity.
        title: Activity Objectives
        $ref: '#/definitions/activities-ActivityObjectives'
      ActivityStartDate:
        type: string
        format: date-time
        description: The starting date and time of an appointment or a task. The default value for an appointment is null. The default value for a task is the date and time of when a task is created.
      ActivityTimezone:
        type: string
        description: Represents the time zone that the activity needs to be created in, other than the default logged in the user's timezone preference.
      ActivityTypeCode:
        type: string
        description: The type or category of the activity.
        maxLength: 30
      ActivityUpdateDate:
        type: string
        format: date-time
        description: The date when the record was last updated.
      ActivityUpdatedBy:
        type: string
        description: The login of the user who last updated the record.
        maxLength: 64
      ActivityUserLastUpdateDate:
        type: string
        format: date-time
        description: The date when the record was last updated by the activity user.
      AllDayFlag:
        type: boolean
        description: Indicates whether the appointment is for the entire day. If the value is True, the appointment is for the entire day. The default value is False.
      AssessmentId:
        type: integer
        format: int64
        description: The unique identifier of the assessment that is associated to the activity or the activity template.
      Attachments:
        description: The attachment resource is used to view, create, and update attachments of an account. An attachment includes additional information about an account.
        title: Activity Attachments
        $ref: '#/definitions/activities-Attachments'
      AutoLogSource:
        type: string
        description: The name of the source for the activity.
        maxLength: 30
      BpId:
        type: integer
        format: int64
        description: The unique identifier of the business plan.
      BusinessPlanName:
        type: string
        description: The name of the business plan associated with the activity.
        maxLength: 255
      CallReportUpcomingYN:
        type: string
        description: Indicates Y, N, M for upcoming appointments.
      CallReportYN:
        type: string
        description: Indicates whether the activity is associated with a call report.
      CampaignId:
        type: integer
        format: int64
        description: The unique identifier of the related campaign.
      CampaignName:
        type: string
        description: The name of the campaign associated with the activity.
      ClaimId:
        type: integer
        format: int64
        description: The unique identifier of the claim.
      ClaimName:
        type: string
        description: The name of the claim associated with the activity.
        maxLength: 255
      CorpCurrencyCode:
        type: string
        description: The corporate currency used by the activity.
        maxLength: 15
      CreatedBy:
        type: string
        description: The user who created the activity.
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date when the activity was created.
      CurcyConvRateType:
        type: string
        description: The rate of currency conversion for an activity.
        maxLength: 30
      CurrencyCode:
        type: string
        description: The currency used by the activity.
        maxLength: 15
      CustomerAccountId:
        type: integer
        format: int64
        description: The unique identifier of the customer account related to the activity.
      DealId:
        type: integer
        format: int64
        description: The unique identifier of the related deal.
      DealNumber:
        type: string
        description: The unique number of the deal associated to the activity. The number can also be generated from an external source.
        title: Deal Registration
      DelegatorId:
        type: integer
        format: int64
        description: The activity resource that delegated activity ownership to another resource.
      DelegatorName:
        type: string
        description: The name of the activity resource that delegated activity ownership to another resource.
        maxLength: 255
      DeleteFlag:
        type: boolean
        description: Indicates if the activity has been deleted.
      DirectionCode:
        type: string
        description: The direction options for an activity. The options are inbound/outbound, optional. The default value is null.
        maxLength: 30
      DoNotCallFlag:
        type: boolean
        description: Indicates that the primary contact must not be called.
      DueDate:
        type: string
        format: date
        description: The date the task activity is due to be completed.
      Duration:
        type: number
        description: The duration of an appointment or task.
      FundRequestId:
        type: integer
        format: int64
        description: The unique identifier of the fund request.
      FundRequestName:
        type: string
        description: The name of the fund request associated with the activity.
        maxLength: 255
      LastUpdateDate:
        type: string
        format: date-time
        description: The date and time when the activity was last updated.
      LastUpdateLogin:
        type: string
        description: The unique identifier of the user who last logged in to the application.
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the activity.
        maxLength: 64
      LeadId:
        type: integer
        format: int64
        description: The unique identifier of the related lead.
      LeadName:
        type: string
        description: The activity lead name.
        maxLength: 255
      Location:
        type: string
        description: The location of the appointment.
        maxLength: 200
      LocationId:
        type: integer
        format: int64
        description: The unique identifier of the account or contact location.
      MobileActivityCode:
        type: string
        description: The external mobile used for the activity.
        maxLength: 50
      Note:
        description: A note data object that captures comments, information or instructions for an Oracle Fusion Applications business object.
        title: Notes
        $ref: '#/definitions/activities-Note'
      ObjectiveId:
        type: integer
        format: int64
        description: The unique identifier of the objective.
      OpportunityId:
        type: integer
        format: int64
        description: The unique identifier of the related opportunity.
      OpportunityName:
        type: string
        description: The name of the opportunity associated with the activity.
        maxLength: 255
      OtherPartyPhoneNumber:
        type: string
        description: The inbound phone number that is used to make a call. Identifies the phone number dialled for outbound calls.
        maxLength: 40
      OutcomeCode:
        type: string
        description: The outcome of the activity.
        maxLength: 30
      OutlookFlag:
        type: boolean
        description: Indicates whether the activity is created in Outlook. If the value is Y, then the activity is created in Outlook and synchronized.
      OutlookIdentifier:
        type: string
        description: The unique identifier for the activity in Outlook.
        maxLength: 256
      OwnerAddress:
        type: string
        description: The address of the activity owner.
      OwnerEmailAddress:
        type: string
        description: The e-mail address of the activity owner.
      OwnerId:
        type: integer
        format: int64
        description: The unique identifier of the activity owner. Identifies only resources.
      OwnerName:
        type: string
        description: The name of the owner of the activity.
        maxLength: 255
      OwnerPhoneNumber:
        type: string
        description: The phone number of the activity owner.
      ParentActivityId:
        type: integer
        format: int64
        description: The related activity ID, only applicable if the record is a follow up activity.
      PartnerEnrollmentId:
        type: integer
        format: int64
        description: The related program enrollment.
      PartnerProgramId:
        type: integer
        format: int64
        description: The unique identifier of the related partner program.
      PartnerProgramName:
        type: string
        description: The name of the partner program associated with the activity.
      PartnerUsageFlag:
        type: boolean
        description: Indicates whether the activity is created for an organization account with usage as Partner.
      PercentageComplete:
        type: number
        description: The amount of activity completed in percentage. This is a free form numeric value ranging from 0 to 100.
      PrimaryContactEmailAddress:
        type: string
        description: The e-mail address of the primary contact for the activity.
      PrimaryContactId:
        type: integer
        format: int64
        description: The unique identifier of the activity contact.
      PrimaryContactName:
        type: string
        description: The name of the primary contact of the activity.
        maxLength: 255
      PrimaryFormattedAddress:
        type: string
        description: The formatted address information of the activity primary contact.
      PrimaryFormattedPhoneNumber:
        type: string
        description: The phone number of the primary contact.
      PriorityCode:
        type: string
        description: 'The priority of the activity priority. The default value is 2. The possible values are: 1, 2, 3.'
        maxLength: 30
      PrivateFlag:
        type: boolean
        description: Indicates whether the activity is private.
      RecurDay:
        type: integer
        format: int64
        description: The recurrence of an appointment on a specific day of the month.
      RecurEndDate:
        type: string
        format: date-time
        description: The date when a recurring activity ends.
      RecurEveryOptionFlag:
        type: boolean
        description: Indicates the frequency of recurrence of an activity. If the recurrence is everyday of the week, it is set to Y if it is weekdays only, it is set to N. The recurring options are every day, week, month, year, and so on.
      RecurExceptionFlag:
        type: boolean
        description: Indicates if the appointment instance is updated outside the recurring appointment series.
      RecurFrequency:
        type: number
        description: The frequency with which the recurring appointment series repeats.
      RecurFriFlag:
        type: boolean
        description: The recurrence of an appointment on every Friday.
      RecurMonFlag:
        type: boolean
        description: The recurrence of an appointment on every Monday.
      RecurMonth:
        type: string
        description: The recurrence of an appointment in a specified month.
        maxLength: 30
      RecurNumberOfInstances:
        type: number
        description: The specific number of occurrences for the series, after which the recurring series ends.
      RecurOrigInstDate:
        type: string
        format: date-time
        description: The original date of a recurring appointment instance.
      RecurPattern:
        type: string
        description: The recurring appointment for a specific week, for example, First, Second, Third, Fourth, Last. The recurrence can be monthly or yearly.
        maxLength: 30
      RecurRecType:
        type: string
        description: For Internal Use Only. Either "I" for instance or "S" for series or "N" for non-recurring. Do not populate it if Activity is of type Task.
        maxLength: 1
      RecurSatFlag:
        type: boolean
        description: Indicates if the activity recurs on Saturday.
      RecurSeriesId:
        type: integer
        format: int64
        description: The unique identifier for the series that links instances of a series together.
      RecurSunFlag:
        type: boolean
        description: Indicates if the activity recurs on Sunday.
      RecurThuFlag:
        type: boolean
        description: Indicates if the activity recurs on Thursday.
      RecurTueFlag:
        type: boolean
        description: Indicates if the activity recurs on Tuesday.
      RecurTypeCode:
        type: string
        description: 'Indicates how often an appointment recurs, for example: Daily, Weekly, Monthly, Yearly.'
        maxLength: 30
      RecurWedFlag:
        type: boolean
        description: Indicates if the activity recurs on Wednesday.
      RecurWeekday:
        type: string
        description: 'The activity that recurs on every weekday, for example: Monday to Sunday, Weekday, Weekend, Day.'
        maxLength: 30
      ReferenceCustomerActTypeCode:
        type: string
        description: The activity that refers to the activity of a customer. To be used as an extension only.
        maxLength: 30
      ReferenceCustomerId:
        type: integer
        format: int64
        description: The unique identifier of the referenced customer who is associated with the activity.
      ReminderPeriod:
        type: string
        description: Indicates when the reminder should be sent.
      ResponseCode:
        type: string
        description: Indicates whether a reminder is required.
      SalesObjectiveName:
        type: string
        description: The name of the sales objective associated with the activity.
        maxLength: 255
      ShowTimeAs:
        type: string
        description: The choice of display of time on your calendar for an activity.
      SortDate:
        type: string
        format: date-time
        description: The date used to sort the activities. The sort date can be the appointment start date, the task due date, or the task complete date.
      SourceObjectCode:
        type: string
        description: The object associated with the activity.
      SourceObjectId:
        type: integer
        format: int64
        description: The unique identifier of the object associated with the activity.
      SrId:
        type: integer
        format: int64
        description: The unique identifier of the related service request.
      SrNumber:
        type: string
        description: The unique number of the service request.
        maxLength: 255
      StatusCode:
        type: string
        description: The status of the activity. The default value is Not Started.
        maxLength: 30
      Subject:
        type: string
        description: The unique subject, name, or title of the activity.
        maxLength: 500
      SubmittedBy:
        type: integer
        format: int64
        description: The user who submitted the Call Report.
      SubmittedByName:
        type: string
        description: The user who submitted the Call Report.
        maxLength: 255
      SubmittedDate:
        type: string
        format: date-time
        description: The date and time when the Call Report was submitted.
      SwitchCallId:
        type: string
        description: The unique identifier of the call, on the external phone system.
        maxLength: 128
      TemplateDuration:
        type: number
        description: The duration in mumber of days, for the template activity. This attribute is used with the start date when generating an activity from a template in order to calculate the due date.
      TemplateLeadTime:
        type: number
        description: The lead time that is calculated from the activity start date, for the template activity.
      UpdateFlag:
        type: boolean
        description: Indicates if the activity has been updated.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: ActivityFunctionCode LOV
      description: 'The list of values for an activity that compares tasks with appointments.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ActivityFunctionCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/ActivityFunctionCodeListVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ActivityFunctionCode
      effectiveMethod: get
    - rel: lov
      title: StatusCode LOV
      description: 'The list of values indicating the status of the activity. The default value is Not Started.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: StatusCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/StatusCodeListVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - StatusCode
      effectiveMethod: get
    - rel: lov
      title: ActivityTypeCode LOV
      description: 'The list of values indicating the type or category of the activity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ActivityTypeCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/ActivityTypeCodeListVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ActivityTypeCode
      effectiveMethod: get
    - rel: lov
      title: AllDayFlag LOV
      description: 'The list of values indicating whether the appointment is for the entire day, such as True or False.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AllDayFlag; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/YesNoAllDayLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - AllDayFlag
      effectiveMethod: get
    - rel: lov
      title: DirectionCode LOV
      description: 'The list of values indicating the direction options for an activity, such as inbound/outbound, optional. The default value is null.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DirectionCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/DirectionCodeListVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - DirectionCode
      effectiveMethod: get
    - rel: lov
      title: OutcomeCode LOV
      description: 'The list of values of an outcome of the activity such as call transferred, at risk, captured issue.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: OutcomeCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/OutcomeCodeListVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - OutcomeCode
      effectiveMethod: get
    - rel: lov
      title: PriorityCode LOV
      description: 'The list of values indicating the priority of the activity priority. The default value is 2. The possible values are: 1, 2, 3.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PriorityCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/PriorityCodeListVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - PriorityCode
      effectiveMethod: get
    - rel: lov
      title: RecurDay LOV
      description: 'The list of values indicating the recurrence of an appointment on a specific day of the month, such as 1, 10, 12, 17.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RecurDay; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/RecurDayListVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RecurDay
      effectiveMethod: get
    - rel: lov
      title: RecurMonth LOV
      description: 'The list of values indicating the recurrence of an appointment in a specified month, such as April, June, March.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RecurMonth; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/RecurMonthListVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RecurMonth
      effectiveMethod: get
    - rel: lov
      title: RecurPattern LOV
      description: 'The list of values indicating the recurring appointment for a specific week, such as First, Second, Third, Fourth, Last. The recurrence can be monthly or yearly.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RecurPattern; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/RecurPatternListVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RecurPattern
      effectiveMethod: get
    - rel: lov
      title: RecurTypeCode LOV
      description: 'The list of values indicating how often an appointment recurs, such as Daily, Weekly, Monthly, Yearly.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RecurTypeCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/RecurTypeCodeListVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RecurTypeCode
      effectiveMethod: get
    - rel: lov
      title: RecurWeekday LOV
      description: 'The list of values indicating the activity that recurs on every weekday, such as Monday to Sunday, Weekday, Weekend, Day.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: RecurWeekday; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/RecurWeekDayListVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - RecurWeekday
      effectiveMethod: get
    - rel: lov
      title: AccountName LOV
      description: 'The list of values indicating the name of the account associated with the activity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: AccountName; Target Attribute: PartyUniqueName</li><li>Source Attribute: AccountId; Target Attribute: PartyId</li><li>Source Attribute: AccountStatus; Target Attribute: Status</li><li>Display Attribute: PartyUniqueName</li><li>Display Attribute: PreferredContactEmail</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/AccountListVA?fields=PartyUniqueName,PartyId,Status,PreferredContactEmail
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - AccountName
      - AccountId
      - AccountStatus
      effectiveMethod: get
    - rel: lov
      title: OwnerName LOV
      description: 'The list of values indicating the name of the owner of the activity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: OwnerName; Target Attribute: ResourceName</li><li>Source Attribute: OwnerId; Target Attribute: PartyId</li><li>Display Attribute: ResourceName</li><li>Display Attribute: EmailAddress</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/OwnerListVA?fields=ResourceName,PartyId,EmailAddress
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - OwnerName
      - OwnerId
      effectiveMethod: get
    - rel: lov
      title: PrimaryContactName LOV
      description: 'The list of values indicating the name of the primary contact of the activity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PrimaryContactName; Target Attribute: PartyName</li><li>Source Attribute: PrimaryContactId; Target Attribute: PartyId</li><li>Display Attribute: PartyName</li><li>Display Attribute: PrimaryEmailAddress</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/PrimaryContactListVA?fields=PartyName,PartyId,PrimaryEmailAddress
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - PrimaryContactName
      - PrimaryContactId
      effectiveMethod: get
    - rel: lov
      title: LeadName LOV
      description: 'The list of values indicating the activity lead name.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: LeadName; Target Attribute: LeadName</li><li>Display Attribute: LeadName</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/ObjectVA?fields=LeadName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - LeadName
      effectiveMethod: get
    - rel: lov
      title: OpportunityName LOV
      description: 'The list of values indicating the name of the opportunity associated with the activity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: OpportunityName; Target Attribute: Name</li><li>Display Attribute: Name</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/ObjectVA?fields=Name
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - OpportunityName
      effectiveMethod: get
    - rel: lov
      title: CampaignName LOV
      description: 'The list of values indicating the name of the campaign associated with the activity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CampaignName; Target Attribute: AssociatedObjectName</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/ObjectVA?fields=AssociatedObjectName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CampaignName
      effectiveMethod: get
    - rel: lov
      title: CurrencyCode LOV
      description: 'The list of values indicating the currency used by the activity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CurrencyCode; Target Attribute: CurrencyCode</li><li>Display Attribute: CurrencyCode</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/RatedCurrenciesVA?fields=CurrencyCode
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CurrencyCode
      effectiveMethod: get
    - rel: lov
      title: PartnerProgramName LOV
      description: 'The list of values indicating the name of the partner program associated with the activity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PartnerProgramName; Target Attribute: ProgramName</li><li>Source Attribute: PartnerProgramId; Target Attribute: PartnerProgramId</li><li>Display Attribute: ProgramName</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/PartnerProgramsListVA?fields=ProgramName,PartnerProgramId
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - PartnerProgramName
      - PartnerProgramId
      effectiveMethod: get
    - rel: lov
      title: ShowTimeAs LOV
      description: 'The list of values indicating the choice of display of time on your calendar for an activity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ShowTimeAs; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/ShowTimeAsVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ShowTimeAs
      effectiveMethod: get
    - rel: lov
      title: ResponseCode LOV
      description: 'The list of values indicating whether a reminder is needed.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ResponseCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/ResponseCodeVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ResponseCode
      effectiveMethod: get
    - rel: lov
      title: ReminderPeriod LOV
      description: 'The list of values indicating when the reminder should be sent, such as one hour before, 15 minutes before.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ReminderPeriod; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/ReminderPeriodVA?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ReminderPeriod
      effectiveMethod: get
    - rel: lov
      title: PrivateFlag LOV
      description: 'The list of values indicating whether the activity is private.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: PrivateFlag; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/YesNoLookup?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - PrivateFlag
      effectiveMethod: get
    - rel: lov
      title: DealNumber LOV
      description: 'The list of values indicating the unique number of the deal associated to the activity. The number can also be generated from an external source.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DealNumber; Target Attribute: AssociatedObjectName</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/ObjectVA?fields=AssociatedObjectName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - DealNumber
      effectiveMethod: get
    - rel: lov
      title: DelegatorName LOV
      description: 'The list of values indicating the name of the activity resource that delegated activity ownership to another resource.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DelegatorName; Target Attribute: ResourceName</li><li>Source Attribute: DelegatorId; Target Attribute: PartyId</li><li>Display Attribute: ResourceName</li><li>Display Attribute: EmailAddress</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/OwnerListVA?fields=ResourceName,PartyId,EmailAddress
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - DelegatorName
      - DelegatorId
      effectiveMethod: get
    - rel: lov
      title: SubmittedByName LOV
      description: 'The list of values indicating the user who submitted the Call Report.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SubmittedByName; Target Attribute: ResourceName</li><li>Source Attribute: SubmittedBy; Target Attribute: PartyId</li><li>Display Attribute: ResourceName</li><li>Display Attribute: EmailAddress</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/OwnerListVA?fields=ResourceName,PartyId,EmailAddress
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - SubmittedByName
      - SubmittedBy
      effectiveMethod: get
    - rel: lov
      title: SrNumber LOV
      description: 'The list of values indicating the service request number.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SrNumber; Target Attribute: AssociatedObjectName</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/ObjectVA?fields=AssociatedObjectName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - SrNumber
      effectiveMethod: get
    - rel: lov
      title: ClaimId LOV
      description: 'The list of values indicating the unique identifier of the claim.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ClaimId; Target Attribute: ClaimId</li><li>Source Attribute: MdfRequestId; Target Attribute: FundRequestId</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/ClaimPVO2?fields=ClaimId,FundRequestId
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ClaimId
      - MdfRequestId
      effectiveMethod: get
    - rel: lov
      title: SalesObjectiveName LOV
      description: 'The list of values indicating the name of the sales objective associated with the activity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: SalesObjectiveName; Target Attribute: AssociatedObjectName</li><li>Display Attribute: AssociatedObjectName</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/ObjectVA?fields=AssociatedObjectName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - SalesObjectiveName
      effectiveMethod: get
    - rel: lov
      title: BusinessPlanName LOV
      description: 'The list of values indicating the name of the business plan associated with the activity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: BusinessPlanName; Target Attribute: AssociatedObjectName</li><li>Display Attribute: AssociatedObjectName</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/ObjectVA?fields=AssociatedObjectName
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - BusinessPlanName
      effectiveMethod: get
    - rel: lov
      title: ClaimName LOV
      description: 'The list of values indicating the name of the claim associated with the activity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ClaimName; Target Attribute: ClaimName</li><li>Source Attribute: ClaimId; Target Attribute: ClaimId</li><li>Source Attribute: MdfRequestId; Target Attribute: FundRequestId</li><li>Display Attribute: ClaimName</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/ClaimPVO1?fields=ClaimName,ClaimId,FundRequestId
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ClaimName
      - ClaimId
      - MdfRequestId
      effectiveMethod: get
    - rel: lov
      title: FundRequestName LOV
      description: 'The list of values indicating the name of the fund request associated with the activity.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: FundRequestName; Target Attribute: FundRequestName</li><li>Source Attribute: FundRequestId; Target Attribute: FundRequestId</li><li>Display Attribute: FundRequestName</li></ul>'
      method: get
      href: /salesApi/resources/latest/activities/{ActivityNumber}/lov/FundRequestPVO1?fields=FundRequestName,FundRequestId
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - FundRequestName
      - FundRequestId
      effectiveMethod: get
  categories:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/categories-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  categories-item:
    type: object
    properties:
      CategoryId:
        type: integer
        format: int64
        description: The unique identifier of the category.
      CategoryName:
        type: string
        description: The name of the category.
        maxLength: 400
      CategoryShortName:
        type: string
        description: The short name of the category. This value is auto-generated from CategoryName. However, you can edit the name to make it a unique value, if required.
        maxLength: 240
      CreatedBy:
        type: string
        description: The user who created the category.
        title: Created By
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: The date and time when the category was created.
        title: Creation Date
      EnabledFlag:
        type: boolean
        description: Indicates whether the category is enabled. If enabled, the value is Y, else the value is N.
      LastUpdateDate:
        type: string
        format: date-time
        description: The date and time when the category was last updated.
        title: Last Updated Date
      LastUpdateLogin:
        type: string
        description: The session login associated with the user who last updated the row.
        title: Last Update Login
        maxLength: 32
      LastUpdatedBy:
        type: string
        description: The user who last updated the category.
        title: Last Updated By
        maxLength: 64
      OriginalSystemReference:
        type: string
        description: The reference to the original system from which the category was imported (if imported).
        maxLength: 255
      ParentCategoryId:
        type: integer
        format: int64
        description: The unique identifier of the parent category. The value is NULL, if the category is the root category.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  partnerProgramBenefits:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/partnerProgramBenefits-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  partnerProgramBenefits-BenefitListTypeValues:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/partnerProgramBenefits-BenefitListTypeValues-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  partnerProgramBenefits-BenefitListTypeValues-item:
    type: object
    properties:
      BenefitListTypeValId:
        type: integer
        format: int64
        description: The system-generated unique identifier and primary key of the benefit.
      CreatedBy:
        type: string
        description: Indicates the user who created the row.
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: Indicates the date and time the row was created.
      DeleteFlag:
        type: boolean
        description: Indicates if the benefit list type value can be deleted.
      LastUpdateDate:
        type: string
        format: date-time
        description: Indicates the date and time the row was last updated.
      LastUpdatedBy:
        type: string
        description: Indicates the user who last updated the row.
        maxLength: 64
      ProgramBenefitId:
        type: integer
        format: int64
        description: The program benefit ID of the benefit list type value - parent ID.
      UpdateFlag:
        type: boolean
        description: Indicates if the benefit list type value can be updated.
      ValueName:
        type: string
        description: The name of the benefit list type value.
        title: Value
        maxLength: 155
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
  partnerProgramBenefits-item:
    type: object
    properties:
      BenefitListTypeValues:
        description: The child of program benefits that is used to manage benefit list values for list type of benefits.
        title: Benefit List Values
        $ref: '#/definitions/partnerProgramBenefits-BenefitListTypeValues'
      CategoryCode:
        type: string
        description: The benefit category.
        title: Category
        maxLength: 30
      CreatedBy:
        type: string
        description: Indicates the user who created the row.
        maxLength: 64
      CreationDate:
        type: string
        format: date-time
        description: Indicates the date and time the row was created.
      DataType:
        type: string
        description: The value type of the benefit.
        title: Value Type
        maxLength: 30
      DeleteFlag:
        type: boolean
        description: Indicates if the benefit can be deleted.
      Description:
        type: string
        description: The text describing the benefit.
        title: Description
        maxLength: 1000
      LastUpdateDate:
        type: string
        format: date-time
        description: Indicates the date and time the row was last updated.
        title: Last Updated Date
      LastUpdatedBy:
        type: string
        description: Indicates the user who last updated the row.
        title: Last Updated By
        maxLength: 64
      LastUpdatedByName:
        type: string
        description: Indicates the name of the user who last updated the row.
        title: Updater Name
      Name:
        type: string
        description: The name of the benefit.
        title: Name
        maxLength: 155
      ProgramBenefitId:
        type: integer
        format: int64
        description: The system-generated unique identifier and primary key of the benefit.
      UpdateFlag:
        type: boolean
        description: Indicates if the benefit can be updated.
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: DataType LOV
      description: 'The list of values indicating the value type of the benefit, such as Amount, List, Number, Percent, or Text.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DataType; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/partnerProgramBenefits/{ProgramBenefitId}/lov/BenefitDataTypes?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - DataType
      effectiveMethod: get
    - rel: lov
      title: CategoryCode LOV
      description: 'The list of values indicating the category of the benefit, such as Financial, Sales, or Marketing.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: CategoryCode; Target Attribute: LookupCode</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/partnerProgramBenefits/{ProgramBenefitId}/lov/BenefitCategoryCodes?fields=LookupCode,Meaning
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties: {}
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - CategoryCode
      effectiveMethod: get
  products:
    type: object
    properties:
      count:
        type: integer
        description: The number of resource instances returned in the current range.
        title: Count
      hasMore:
        type: boolean
        description: Indicates whether more resources are available on the server than the subset returned in the response. If the value is true, then there are more resources to retrieve from the server. The default value is false.
        title: HasMore
      items:
        type: array
        description: The items in the collection.
        title: Items
        items:
          $ref: '#/definitions/products-item'
      limit:
        type: integer
        description: The actual paging size used by the server.
        title: Limit
      links:
        type: array
        description: The link relations associated with the resource instance.
        title: Items
        items:
          $ref: '#/definitions/link'
      offset:
        type: integer
        description: The offset value used in the current page.
        title: Offset
  products-item:
    type: object
    properties:
      DefaultUOM:
        type: string
        description: The default unit of measure (UOM) for the product.
        title: UOM
        maxLength: 25
      EligibleToSell:
        type: string
        description: Indicates whether the product is eligible to be sold.
        title: Meaning
        maxLength: 80
      ProductType:
        type: string
        description: The meaning of the sales product type code.
        title: Meaning
        maxLength: 80
      links:
        type: array
        description: Link Relations
        title: Items
        items:
          $ref: '#/definitions/link'
    x-links:
    - rel: lov
      title: EligibleToSell LOV
      description: 'The list of values to indicate whether the product is eligible to be sold or not. The valid values are Y and N.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: EligibleToSell; Target Attribute: Meaning</li><li>Source Attribute: EligibleToSellFlag; Target Attribute: LookupCode</li><li>Source Attribute: EligibleToSellLookupType; Target Attribute: LookupType</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/products/{productsUniqID}/lov/EligibleToSellLookupPVOLovVA?fields=Meaning,LookupCode,LookupType
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          Meaning:
            type: string
            description: Display value for the lookup in the application.
          LookupCode:
            type: string
            description: Unique code for the lookup.
          LookupType:
            type: string
            description: Type of the lookup.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - EligibleToSell
      - EligibleToSellFlag
      - EligibleToSellLookupType
      effectiveMethod: get
    - rel: lov
      title: ProductType LOV
      description: 'The list of values for the type of sales product, such as Goods, Included Warranty, and Extended Warranty.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: ProductType; Target Attribute: Meaning</li><li>Source Attribute: ProductTypeCode; Target Attribute: LookupCode</li><li>Source Attribute: SalesProductLookupType; Target Attribute: LookupType</li><li>Display Attribute: Meaning</li></ul>'
      method: get
      href: /salesApi/resources/latest/products/{productsUniqID}/lov/ProductTypeLovVA?fields=Meaning,LookupCode,LookupType
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          Meaning:
            type: string
            description: Display value for the lookup in the application.
          LookupCode:
            type: string
            description: Unique code for the lookup.
          LookupType:
            type: string
            description: Type of the product.
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - ProductType
      - ProductTypeCode
      - SalesProductLookupType
      effectiveMethod: get
    - rel: lov
      title: DefaultUOM LOV
      description: 'The list of values for the default unit of measure (UOM) for the product, such as Each, Kgs, and Grams.<p>The following properties are defined on the LOV link relation:</p><ul><li>Source Attribute: DefaultUOM; Target Attribute: UnitOfMeasure</li><li>Source Attribute: DefaultUOMCode; Target Attribute: UomCode</li></ul>'
      method: get
      href: /salesApi/resources/latest/products/{productsUniqID}/lov/UnitOfMeasureVVOLovVA?fields=UnitOfMeasure,UomCode
      mediaType: application/vnd.oracle.adf.resourcecollection+json
      encType: application/x-www-form-urlencoded
      targetSchema:
        properties:
          UnitOfMeasure:
            type: string
            description: Display value of the unit of measure (UOM).
          UomCode:
            type: string
            description: Unique code of the unit of measure (UOM).
        type: object
      schema:
        properties:
          limit:
            type: integer
            description: This parameter restricts the number of resources returned inside the resource collection. If the limit exceeds the resource count then the framework will only return the available resources.
          offset:
            type: integer
            description: Used to define the starting position of the resource collection. If offset exceeds the resource count then no resources are returned. Default value is 0.
          totalResults:
            type: boolean
            description: The resource collection representation will include the "estimated row count" when "?totalResults=true", otherwise the count is not included.  The default value is "false".
          onlyData:
            type: boolean
            description: The resource item payload will be filtered in order to contain only data (no links section, for example).
          dependency:
            type: string
            description: 'This parameter specifies dependencies which are attributes that are set before and rolled back after generating the response. Generally they are used to preview the effects of an attribute change. The attributes specified in this parameter are always set in the resource instance in question. When a child resource collection is requested and the parameter is set, the attributes will be set in the parent resource instance before generating the resource collection payload. The value of this query parameter is a set of dependency attributes.  Example: dependency=ProductId=2<br><br>Format: &lt;attr1&gt;=&lt;val1&gt;,&lt;attr2&gt;=&lt;value2&gt;'
          orderBy:
            type: string
            description: This parameter orders a resource collection based on the specified attributes.  The parameter value is a comma-separated string of attribute names, each optionally followed by a colon and "asc" or "desc".  Specify "asc" for ascending and "desc" for descending. The default value is "asc".  For example, ?orderBy=field1:asc,field2:desc
          links:
            items:
              $ref: '#/definitions/link'
            type: array
            description: The link relations associated with the resource instance.
        type: object
      o:properties:
      - DefaultUOM
      - DefaultUOMCode
      effectiveMethod: get
