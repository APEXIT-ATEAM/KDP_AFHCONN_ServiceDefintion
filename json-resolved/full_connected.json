{
    "swagger": "2.0",
    "info": {
        "description": "These are OIC Integration APIs for Brewer Management",
        "version": "1.0.1",
        "title": "AMP OIC APIs",
        "contact": {
            "email": "bryan.arndorfer_ex@kdrp.com"
        }
    },
    "host": "virtserver.swaggerhub.com",
    "basePath": "/barndorfer/install/1.0.0",
    "tags": [
        {
            "name": "User Management",
            "description": "Integration name AMSUserlist - get, update, reset Password, deactivate user operations"
        },
        {
            "name": "Brewer Management",
            "description": "Operations available to regular developers"
        },
        {
            "name": "Account Management",
            "description": "Integration name AMSGetkadaccountnamefilter get"
        },
        {
            "name": "Consumption and Alerts",
            "description": "Integration covering alters functionalities"
        },
        {
            "name": "Dashboard",
            "description": "Integration covering Dashboard APIs"
        },
        {
            "name": "File Management",
            "description": "Integration covering File Management"
        },
        {
            "name": "Media Management",
            "description": "Integration covering Media Management"
        },
        {
            "name": "Install",
            "description": "Integration covering brewer installation related API's"
        }
    ],
    "schemes": [
        "https"
    ],
    "paths": {
        "/ic/api/AMSUserlist/1.0/getUserList": {
            "get": {
                "tags": [
                    "User Management",
                    "getUserList"
                ],
                "summary": "get User List",
                "description": "By passing in the appropriate options, you can search for\navailable user lsit in the system\n",
                "operationId": "getUserList",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "KADAccountId",
                        "in": "query",
                        "description": "pass an optional KADAccountId string for looking up user",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "UserId",
                        "in": "query",
                        "description": "pass an optional UserId string for looking up user",
                        "required": false,
                        "type": "string"
                    },
		{
                        "name": "ReqForSearchUserId",
                        "in": "query",
                        "description": "pass an optional UserId string for looking up user",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "search results matching criteria",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserList"
                            }
                        }
                    },
                    "400": {
                        "description": "bad input parameter"
                    }
                }
            }
          },
        "/ic/api/AMSUserlist/1.0/getUserInfo": {
            "get": {
                "tags": [
                    "User Management",
                    "getUserInfo"
                ],
                "summary": "get User Info",
                "description": "By passing in the appropriate options, you can search for\navailable user lsit in the system\n",
                "operationId": "getUserInfo",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "KADAccountId",
                        "in": "query",
                        "description": "pass an  KADAccountId string for looking up user",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "UserId",
                        "in": "query",
                        "description": "pass an  UserId string for looking up user",
                        "required": false,
                        "type": "string"
                    },
		
		{
                        "name": "ReqForSearchUserId",
                        "in": "query",
                        "description": "pass an  UserId string for looking up user",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "search results matching criteria",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserList"
                            }
                        }
                    },
                    "400": {
                        "description": "bad input parameter"
                    }
                }
            }
        },
        "/ic/api/AMSUserlist/1.0/deactivateUser": {
             "delete": {
                "tags": [
                    "User Management"
					,"deactivateUser"
                ],
                "summary": "deactivateUser",
                "description": "deactivate user",
                "operationId": "deactivateUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "UserId",
                        "in": "query",
                        "description": "pass an  UserId string",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for deactivating user"
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
		},
        "/ic/api/AMSUserlist/1.0/resetPassword": {
            "post": {
                "tags": [
                    "User Management",
					"resetPassword"
                ],
                "summary": "resetPassword",
                "description": "Reset password for user",
                "operationId": "resetPassword",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
			{
                        "name": "KADAccountId",
                        "in": "query",
                        "description": "pass an  KADAccountId string for looking up user",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "UserId",
                        "in": "query",
                        "description": "pass an  UserId string",
                        "required": false,
                        "type": "string"
                    },
			{
                        "name": "ReqForSearchUserId",
                        "in": "query",
                        "description": "pass an  UserId string",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for reset password (success/failure)"
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSUserlist/1.0/resendInvite": {
            "get": {
                "tags": [
                    "User Management",
                    "resendInvite"
                ],
                "summary": "resend Invite for  User ",
                "description": "By passing in the appropriate options, you can search for\navailable user lsit in the system\n",
                "operationId": "resendInvite",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "KADAccountId",
                        "in": "query",
                        "description": "pass an optional KADAccountId string for looking up user",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "UserId",
                        "in": "query",
                        "description": "pass an optional UserId string for looking up user",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "search results matching criteria",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserList"
                            }
                        }
                    },
                    "400": {
                        "description": "bad input parameter"
                    }
                }
            }
        },
        "/ic/api/AMSGetPlacementLocListFilter/1.0/getPlacementLocListFilter": {
            "get": {
                "tags": [
                    "Brewer Management",
                    "getPlacementLocListFilter"
                ],
                "summary": "getPlacementLocListFilter",
                "description": "By passing in the appropriate options, you can search for\navailable result in the system\n",
                "operationId": "getPlacementLocListFilter",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "PlacementLocationName",
                        "in": "query",
                        "description": "pass an optional PlacementLocationName string",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "search results matching criteria",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LocationList"
                            }
                        }
                    },
                    "400": {
                        "description": "bad input parameter"
                    }
                }
            }
        },
        "/ic/api/AMSGetBusinessAccountListFilter/1.0/getBusinessAccountListFilter": {
            "get": {
                "tags": [
                    "Brewer Management",
                    "getBusinessAccountListFilter"
                ],
                "summary": "getBusinessAccountListFilter",
                "description": "By passing in the appropriate options, you can search for\navailable result in the system\n",
                "operationId": "getBusinessAccountListFilter",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "PartnerId",
                        "in": "query",
                        "description": "pass an optional PartnerId string",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "BusinessAccountName",
                        "in": "query",
                        "description": "pass an optional BusinessAccountName string",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "search results matching criteria",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountList"
                            }
                        }
                    },
                    "400": {
                        "description": "bad input parameter"
                    }
                }
            }
        },
        "/ic/api/AMSGetalertConsumptioncounts/1.0/getAlertConsumptionCounts": {
            "get": {
                "tags": [
                    "Brewer Management",
                    "getAlertConsumptionCounts"
                ],
                "summary": "getAlertConsumptionCounts",
                "description": "By passing in the appropriate options, you can search for\navailable result in the system\n",
                "operationId": "getAlertConsumptionCounts",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "AlertName",
                        "in": "query",
                        "description": "pass an optional AlertName string",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "search results matching criteria",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Alerts"
                            }
                        }
                    },
                    "400": {
                        "description": "bad input parameter"
                    }
                }
            }
        },
        "/ic/api/AMSGetbrewerdetail/1.0/getBrewerDetail": {
            "get": {
                "tags": [
                    "Brewer Management",
                    "getBrewerDetail"
                ],
                "summary": "getBrewerDetail",
                "description": "By passing in the appropriate options, you can search for\navailable result in the system\n",
                "operationId": "getBrewerDetail",
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "DeviceId",
                        "in": "query",
                        "description": "pass an optional DeviceId string",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "SerialNumber",
                        "in": "query",
                        "description": "pass an optional DeviceId string",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "search results matching criteria",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BrewerDetailsList"
                            }
                        }
                    },
                    "400": {
                        "description": "bad input parameter"
                    }
                }
            }
        },
        "/ic/api/AMSGetbrewerlist/1.0/getBrewerList": {
            "get": {
                "tags": [
                    "Brewer Management",
                    "getBrewerList"
                ],
                "summary": "getBrewerList",
                "description": "getBrewerList",
                "operationId": "getBrewerList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "KADAccountId",
                        "in": "query",
                        "description": "pass an  KADAccountId string",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "BusinessAccountId",
                        "in": "query",
                        "description": "pass an optional BusinessAccountId string",
                        "required": false,
                        "type": "string"
                    },
					{
                        "name": "PlacementLocation",
                        "in": "query",
                        "description": "pass an  PlacementLocation string",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "DeviceType",
                        "in": "query",
                        "description": "pass an optional DeviceType string",
                        "required": false,
                        "type": "string"
                    },
					{
                        "name": "Status",
                        "in": "query",
                        "description": "pass an  Status string",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "RegistrationDate",
                        "in": "query",
                        "description": "pass an optional RegistrationDate string",
                        "required": false,
                        "type": "string"
                    },
					{
                        "name": "RegistrationApproval",
                        "in": "query",
                        "description": "pass an  RegistrationApproval string",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for get brewer list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BrewerDetailsListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetbusinessaccountcontact/1.0/getBusinessAccountContact": {
            "get": {
                "tags": [
                    "Install",
                    "getBusinessAccountContact"
                ],
                "summary": "getBusinessAccountContact",
                "description": "getBusinessAccountContact",
                "operationId": "getBusinessAccountContact",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "BusinessAccountId",
                        "in": "query",
                        "description": "pass an optional BusinessAccountId string for looking up user",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for get brewer list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountList"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetbrewerdetailinstall/1.0/getBrewerDetailInstall": {
            "get": {
                "tags": [
                    "Install",
                    "getBrewerDetailInstall"
                ],
                "summary": "getBrewerDetailInstall",
                "description": "getBrewerDetailInstall",
                "operationId": "getBrewerDetailInstall",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "SerialNumber",
                        "in": "query",
                        "description": "pass an optional SerialNumber string for looking up user",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for get brewer installation details list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BrewerDetailsList"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetuserorglist/1.0/getUserOrgList": {
            "get": {
                "tags": [
                    "Install",
                    "getUserOrgList"
                ],
                "summary": "getUserOrgList",
                "description": "getUserOrgList",
                "operationId": "getUserOrgList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "UserId",
                        "in": "query",
                        "description": "pass an optional UserId string for looking up user",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for get user list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserList"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSCreateofficeaccount/1.0/createOfficeAccount": {
            "post": {
                "tags": [
                    "Install",
                    "createOfficeAccount"
                ],
                "summary": "createOfficeAccount",
                "description": "createOfficeAccount",
                "operationId": "createOfficeAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "AccountList",
                        "description": "create office account",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AccountList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for create office account",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountList"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetbrewerlocationlist/1.0/getBrewerLocationList": {
            "get": {
                "tags": [
                    "Install",
                    "getBrewerLocationList"
                ],
                "summary": "getBrewerLocationList",
                "description": "getBrewerLocationList",
                "operationId": "getBrewerLocationList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "BrewerDetailsList",
                        "description": "get Brewer location details list filter parameters",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrewerDetailsList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for get brewer location list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BrewerDetailsList"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSUpdatebrewer/1.0/updateBrewer": {
            "patch": {
                "tags": [
                    "Install",
                    "updateBrewer"
                ],
                "summary": "updateBrewer",
                "description": "updateBrewer",
                "operationId": "updateBrewer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "BrewerDetailsList",
                        "description": "update Brewer details parameters",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrewerDetailsList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for update brewer",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BrewerResponseDetailsList"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSSubmitinstallationrequest/1.0/submitInstallationRequest": {
            "post": {
                "tags": [
                    "Install",
                    "submitInstallationRequest"
                ],
                "summary": "submitInstallationRequest",
                "description": "submitInstallationRequest",
                "operationId": "submitInstallationRequest",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "BrewerDetailsList",
                        "description": "submit Brewer installation request parameters",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrewerDetailsList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for install brewer request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BrewerDetailsList"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSCreateuser/1.0/createUser": {
            "post": {
                "tags": [
                    "Install",
                    "createUser"
                ],
                "summary": "createUser",
                "description": "createUser",
                "operationId": "createUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "UserList",
                        "description": "create user  parameters",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/UserList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for create user",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserList"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSUninstallbrewer/1.0/uninstallBrewer": {
            "post": {
                "tags": [
                    "Install",
                    "uninstallBrewer"
                ],
                "summary": "uninstallBrewer",
                "description": "uninstallBrewer",
                "operationId": "uninstallBrewer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "BrewerDetailsList",
                        "description": "uninstall Brewer parameters",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrewerDetailsList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for uninstall Brewerlist",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BrewerResponseDetailsList"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetmasterbrandlovs/1.0/getMasterBrandLOVs": {
            "get": {
                "tags": [
                    "Consumption and Alerts",
                    "getMasterBrandLOVs"
                ],
                "summary": "getMasterBrandLOVs",
                "description": "getMasterBrandLOVs",
                "operationId": "getMasterBrandLOVs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "MasterBrandName",
                        "in": "query",
                        "description": "pass an optional MasterBrandName string for looking up brand",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for get brand list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Brands"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetbrandlovs/1.0/getBrandLOVs": {
            "get": {
                "tags": [
                    "Consumption and Alerts",
                    "getBrandLOVs"
                ],
                "summary": "getBrandLOVs",
                "description": "getBrandLOVs",
                "operationId": "getBrandLOVs",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "MasterBrandName",
                        "in": "query",
                        "description": "pass an optional MasterBrandName string for looking up brand",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for get brand list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Brands"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetvarietyfilter/1.0/getVarietyFilter": {
            "get": {
                "tags": [
                    "Consumption and Alerts",
                    "getVarietyFilter"
                ],
                "summary": "getVarietyFilter",
                "description": "getVarietyFilter",
                "operationId": "getVarietyFilter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "variety",
                        "in": "query",
                        "description": "pass an optional variety string for looking up user",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for get variety list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Variety"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetalertnamefilter/1.0/getAlertNameFilter": {
            "get": {
                "tags": [
                    "Consumption and Alerts",
                    "getAlertNameFilter"
                ],
                "summary": "getAlertNameFilter",
                "description": "getAlertNameFilter",
                "operationId": "getAlertNameFilter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "AlertName",
                        "in": "query",
                        "description": "pass an optional AlertName string for looking up Alerts",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for get alert list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Alerts"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetalertlist/1.0/getAlertList": {
            "get": {
                "tags": [
                    "Consumption and Alerts",
                    "getAlertList"
                ],
                "summary": "getAlertList",
                "description": "getAlertList",
                "operationId": "getAlertList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "AlertName",
                        "in": "query",
                        "description": "pass an optional AlertName string for looking up alerts",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for get alert List",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Alerts"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetalertlist/1.0/getAlertResolution": {
            "get": {
                "tags": [
                    "Consumption and Alerts",
                    "getAlertResolution"
                ],
                "summary": "getAlertResolution",
                "description": "getAlertResolution",
                "operationId": "getAlertResolution",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "AlertName",
                        "in": "query",
                        "description": "pass an optional AlertName string for lookup in knowledger base",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for get alert knowledge lookup",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Alerts"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSExportalerts/1.0/exportAlerts": {
            "post": {
                "tags": [
                    "Consumption and Alerts",
                    "exportAlerts"
                ],
                "summary": "exportAlerts",
                "description": "exportAlerts",
                "operationId": "exportAlerts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Alerts",
                        "description": "Export Alerts",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Alerts"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for export of alerts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Alerts"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetmediapldetail/1.0/getMediaPLDetail": {
            "get": {
                "tags": [
                    "Media Management",
                    "getMediaPLDetail"
                ],
                "summary": "getMediaPLDetail",
                "description": "getMediaPLDetail",
                "operationId": "getMediaPLDetail",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "MediaId",
                        "in": "query",
                        "description": "pass an MediaId string for looking up Media",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "KADAccountId",
                        "in": "query",
                        "description": "pass an KADAccountId string for looking up Media",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "BusinessAccountId",
                        "in": "query",
                        "description": "pass an BusinessAccountId string for looking up Media",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for get Media Details",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MediaDetails"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetmediapllist/1.0/getMediaPLList": {
            "get": {
                "tags": [
                    "Media Management",
                    "getMediaPLList"
                ],
                "summary": "getMediaPLList",
                "description": "getMediaPLList",
                "operationId": "getMediaPLList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "MediaId",
                        "in": "query",
                        "description": "pass an  MediaId string for looking up Media",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "KADAccountId",
                        "in": "query",
                        "description": "pass an  KADAccountId string for looking up Media",
                        "required": false,
                        "type": "string"
                    },
                    {
                        "name": "BusinessAccountId",
                        "in": "query",
                        "description": "pass an  BusinessAccountId string for looking up Media",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for get Media list",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/MediaDetailsList"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSCreatemediaplaylist/1.0/createMediaPlayList": {
            "post": {
                "tags": [
                    "Media Management",
                    "createMediaPlayList"
                ],
                "summary": "createMediaPlayList",
                "description": "createMediaPlayList",
                "operationId": "createMediaPlayList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "createMediaPlayListRequest",
                        "description": "create Media playlist",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/createMediaPlayListRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for creation of media playlist",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/createMediaPlayListResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSPublishmedia/1.0/publishMedia": {
            "post": {
                "tags": [
                    "Media Management",
                    "publishMedia"
                ],
                "summary": "publishMedia",
                "description": "publishMedia",
                "operationId": "publishMedia",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "PublishUnpublishMediaRequest",
                        "description": "Publish Media",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PublishUnpublishMediaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for publish of media",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PublishUnpublishMediaResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSUnpublishmedia/1.0/unpublishMedia": {
            "post": {
                "tags": [
                    "Media Management",
                    "unpublishMedia"
                ],
                "summary": "unpublishMedia",
                "description": "unpublishMedia",
                "operationId": "unpublishMedia",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "PublishUnpublishMediaRequest",
                        "description": "unpublish Media",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/PublishUnpublishMediaRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for unpublish of media",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/PublishUnpublishMediaResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetalertcountsbycriticality/1.0/getAlertCountsByCriticality": {
            "get": {
                "tags": [
                    "Dashboard",
                    "getAlertCountsByCriticality"
                ],
                "summary": "getAlertCountsByCriticality",
                "description": "getAlertCountsByCriticality",
                "operationId": "getAlertCountsByCriticality",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "AlertName",
                        "in": "query",
                        "description": "pass an optional AlertName string for getting count by Criticality",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for getting count by criticality",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Alerts"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetbrewerstatistics/1.0/getbrewerStatistics": {
            "post": {
                "tags": [
                    "Dashboard",
                    "getbrewerStatistics"
                ],
                "summary": "getbrewerStatistics",
                "description": "getbrewerStatistics",
                "operationId": "getbrewerStatistics",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "BrewerDetailsList",
                        "description": "getbrewerStatistics",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrewerDetailsList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for getting brewer details statistic",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BrewerDetailsList"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetaccountsbyconsumption/1.0/getAccountsByConsumption": {
            "post": {
                "tags": [
                    "Dashboard",
                    "getAccountsByConsumption"
                ],
                "summary": "getAccountsByConsumption",
                "description": "getAccountsByConsumption",
                "operationId": "getAccountsByConsumption",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "AccountList",
                        "description": "get Accounts by Consumption",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/AccountList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for get account by consumption",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountList"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetavgbrewers&Consumption/1.0/getavgBrewersConsumption": {
            "post": {
                "tags": [
                    "Dashboard",
                    "getavgBrewersConsumption"
                ],
                "summary": "getavgBrewersConsumption",
                "description": "getavgBrewersConsumption",
                "operationId": "getavgBrewersConsumption",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "BrewerDetailsList",
                        "description": "get Avg Brewers Consumption",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrewerDetailsList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results get Avg Brewers Consumption",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/BrewerDetailsList"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSConsumption/1.0/getAlertandConsumptionCounts": {
            "post": {
                "tags": [
                    "Consumption and Alerts",
                    "getAlertandConsumptionCounts"
                ],
                "summary": "getAlertandConsumptionCounts",
                "description": "getAlertandConsumptionCounts",
                "operationId": "getAlertandConsumptionCounts",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Consumption",
                        "description": "get Alert and Consumption Counts",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Consumption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for get Alert and Consumption Counts",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Consumption"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSConsumption/1.0/getConsumptionList": {
            "post": {
                "tags": [
                    "Consumption and Alerts",
                    "getConsumptionList"
                ],
                "summary": "getConsumptionList",
                "description": "getConsumptionList",
                "operationId": "getConsumptionList",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "Consumption",
                        "description": "get Consumption List",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/Consumption"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for get Consumption List",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Consumption"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetnotificationscount/1.0/getNotificationsCount": {
            "get": {
                "tags": [
                    "Dashboard",
                    "getNotificationsCount"
                ],
                "summary": "getNotificationsCount",
                "description": "getNotificationsCount",
                "operationId": "getNotificationsCount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "AlertName",
                        "in": "query",
                        "description": "pass an optional AlertName string for getting Notification count",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for getting notification count",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Alerts"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetkadaccountnamefilter/1.0/getKADAccountNameFilter": {
            "get": {
                "tags": [
                    "Account Management",
                    "getKADAccountNameFilter"
                ],
                "summary": "getKADAccountNameFilter",
                "description": "getKADAccountNameFilter",
                "operationId": "getKADAccountNameFilter",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "KADAccountName",
                        "in": "query",
                        "description": "pass an optional KADAccountName string for getting KAD account list based on account name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for getting KAD account list based on account name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountList"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetBusinessAccountByKADAccount/1.0/getBusinessAccountLoVByKADAccount": {
            "get": {
                "tags": [
                    "Account Management",
                    "getBusinessAccountLoVByKADAccount"
                ],
                "summary": "getBusinessAccountLoVByKADAccount",
                "description": "getBusinessAccountLoVByKADAccount",
                "operationId": "getBusinessAccountLoVByKADAccount",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "KADAccountName",
                        "in": "query",
                        "description": "pass an KADAccountName string for getting Business account list based on account name",
                        "required": false,
                        "type": "string"
                    },
					{
                        "name": "KADAccountNumber",
                        "in": "query",
                        "description": "pass an KADAccountNumber string for getting Business account list based on account name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for getting KAD account list based on account name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountList"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSGetKADAccountByUser/1.0/getKADAccountLoVByUser": {
            "get": {
                "tags": [
                    "Account Management,getKADAccountLoVByUser"
                ],
                "summary": "getKADAccountLoVByUser",
                "description": "getKADAccountLoVByUser",
                "operationId": "getKADAccountLoVByUser",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "name": "user",
                        "in": "query",
                        "description": "pass an optional user string for getting KAD account list based on user name",
                        "required": false,
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for getting KAD account list based on user name",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/AccountList"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        },
        "/ic/api/AMSRegisterBrewer/1.0/registerBrewer": {
            "post": {
                "tags": [
                    "Install,registerBrewer"
                ],
                "summary": "registerBrewer",
                "description": "registerBrewer",
                "operationId": "registerBrewer",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "parameters": [
                    {
                        "in": "body",
                        "name": "BrewerDetailsList",
                        "description": "register Brewer request parameters",
                        "required": false,
                        "schema": {
                            "$ref": "#/definitions/BrewerDetailsList"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "results for register brewer request",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/RegisterBrewerResponse"
                            }
                        }
                    },
                    "400": {
                        "description": "invalid input, object invalid"
                    },
                    "409": {
                        "description": "an existing item already exists"
                    }
                }
            }
        }
    },
    "definitions": {
        "BrewerDetailsList": {
            "type": "object",
            "required": [
                "UserID",
				"AssetId",
				"KADAccountId",
                "BrewCount",
                "BrewerPartnerId",
                "ContactId",
                "DeviceType",
                "Firmware",
                "Model",
                "NetworkConnection",
                "PlacementLocation",
                "RegistrationApprovalStatus",
                "RegistrationDate",
                "SerialNumber",
                "Status",
                "WarrantyEndDate",
                "deviceId"
            ],
            "properties": {
                "SerialNumber": {
                    "type": "string",
                    "format": "uuid",
                    "example": "SerialNumber"
                },
                "DeviceType": {
                    "type": "string",
                    "format": "uuid",
                    "example": "DeviceType"
                },
                "PlacementLocation": {
                    "type": "string",
                    "format": "uuid",
                    "example": "PlacementLocation"
                },
                "Status": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Status"
                },
                "KABBusinessAccount": {
                    "type": "string",
                    "format": "uuid",
                    "example": "KABBusinessAccount"
                },
                "RegistrationApprovalStatus": {
                    "type": "string",
                    "format": "uuid",
                    "example": "RegistrationApprovalStatus"
                },
                "RegistrationDate": {
                    "type": "string",
                    "format": "uuid",
                    "example": "RegistrationDate"
                },
                "deviceId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "deviceId"
                },
                "AssetId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "AssetId"
                },
                "WarrantyEndDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2016-08-29T09:12:33.001Z"
                },
                "Model": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Model"
                },
                "Firmware": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Firmware"
                },
                "BrewCount": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Model"
                },
                "NetworkConnection": {
                    "type": "string",
                    "format": "uuid",
                    "example": "NetworkConnection"
                },
                "BrewerPartnerId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "BrewerPartnerId"
                },
                "UserID": {
                    "type": "string",
                    "format": "uuid",
                    "example": "UserID"
                },
                "KADAccountId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "KADAccountId"
                },
                "ContactId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "ContactId"
                }
            }
        },
        "BrewerResponseDetailsList": {
            "type": "object",
            "required": [
                "AssetId",
                "BrewCount",
                "BrewerPartnerId",
                "ContactId",
                "DeviceType",
                "ErrorDescription",
                "ErrroCode",
                "Firmware",
                "Model",
                "NetworkConnection",
                "PlacementLocation",
                "RegistrationApprovalStatus",
                "RegistrationDate",
                "SerialNumber",
                "Status",
                "WarrantyEndDate",
                "deviceId"
            ],
            "properties": {
                "Status": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Status"
                },
                "ErrroCode": {
                    "type": "string",
                    "format": "uuid",
                    "example": "ErrroCode"
                },
                "ErrorDescription": {
                    "type": "string",
                    "format": "uuid",
                    "example": "ErrorDescription"
                },
                "SerialNumber": {
                    "type": "string",
                    "format": "uuid",
                    "example": "SerialNumber"
                },
                "DeviceType": {
                    "type": "string",
                    "format": "uuid",
                    "example": "DeviceType"
                },
                "PlacementLocation": {
                    "type": "string",
                    "format": "uuid",
                    "example": "PlacementLocation"
                },
                "KABBusinessAccount": {
                    "type": "string",
                    "format": "uuid",
                    "example": "KABBusinessAccount"
                },
                "RegistrationApprovalStatus": {
                    "type": "string",
                    "format": "uuid",
                    "example": "RegistrationApprovalStatus"
                },
                "RegistrationDate": {
                    "type": "string",
                             "format": "date-time",
                    "example": "2016-08-29T09:12:33.001Z"
                },
                "deviceId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "deviceId"
                },
                "AssetId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "AssetId"
                },
                "WarrantyEndDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2016-08-29T09:12:33.001Z"
                },
                "Model": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Model"
                },
                "Firmware": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Firmware"
                },
                "BrewCount": {
                    "type": "string",
                    "format": "uuid",
                    "example": "BrewCount"
                },
                "NetworkConnection": {
                    "type": "string",
                    "format": "uuid",
                    "example": "NetworkConnection"
                },
                "BrewerPartnerId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "BrewerPartnerId"
                },
                "ContactId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "ContactId"
                }
            }
        },
        "UserList": {
            "type": "object",
            "required": [
                "EmailAddress",
                "ErrorCode",
                "ErrorMessage",
                "FirstName",
                "LastName",
                "PartnerID",
                "PartnerName",
                "Status",
                "UserId",
				"Address",
				"PhoneNumber"
            ],
            "properties": {
                "FirstName": {
                    "type": "string",
                    "format": "uuid",
                    "example": "FirstName"
                },
                "LastName": {
                    "type": "string",
                    "format": "uuid",
                    "example": "LastName"
                },
                "UserId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "UserId"
                },
                "EmailAddress": {
                    "type": "string",
                    "format": "uuid",
                    "example": "EmailAddress"
                },
                "Status": {
                    "type": "string",
                    "format": "SUCCESS",
                    "example": "Status"
                },
                "ErrorCode": {
                    "type": "string",
                    "format": "uuid",
                    "example": "ErrorCode"
                },
                "ErrorMessage": {
                    "type": "string",
                    "format": "uuid",
                    "example": "ErrorMessage"
                },
                "PartnerID": {
                    "type": "string",
                    "format": "uuid",
                    "example": "PartnerID"
                },
                "PartnerName": {
                    "type": "string",
                    "format": "uuid",
                    "example": "PartnerName"
                },
                "Address": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Address"
                },
		"CreatedDate": {
                     "type": "string",
                    "format": "date-time",
                    "example": "2016-08-29T09:12:33.001Z"
                },
		"Role": {
                     "type": "string",
                    "format": "uuid",
                    "example": "Role"
                },
                "PhoneNumber": {
                    "type": "string",
                    "format": "uuid",
                    "example": "PhoneNumber"
                }				
            }
        },
        "AccountList": {
            "type": "object",
            "required": [
                "BusinessAccountId",
                "BusinessAccountName",
                "EmailAddress",
                "FirstName",
                "KADAccountId",
                "KADAccountName",
                "LastName",
                "ListOfContact",
                "PrimaryContactId",
                "PrimaryContactName"
            ],
            "properties": {
                "BusinessAccountId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "BusinessAccountId"
                },
                "BusinessAccountName": {
                    "type": "string",
                    "format": "uuid",
                    "example": "BusinessAccountName"
                },
                "KADAccountName": {
                    "type": "string",
                    "format": "uuid",
                    "example": "KADAccountName"
                },
                "FirstName": {
                    "type": "string",
                    "format": "uuid",
                    "example": "FirstName"
                },
                "LastName": {
                    "type": "string",
                    "format": "uuid",
                    "example": "LastName"
                },
                "EmailAddress": {
                    "type": "string",
                    "format": "uuid",
                    "example": "EmailAddress"
                },
                "KADAccountId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "KADAccountId"
                },
                "PrimaryContactId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "PrimaryContactId"
                },
                "PrimaryContactName": {
                    "type": "string",
                    "format": "uuid",
                    "example": "PrimaryContactName"
                },
                "ListOfContact": {
                    "type": "array",
					"items": {
                                "$ref": "#/definitions/ListOfContact"
					}					
                }
            }
        },
        "Brands": {
            "type": "object",
            "required": [
                "BrandName",
                "MasterBrandName"
            ],
            "properties": {
                "MasterBrandName": {
                    "type": "string",
                    "format": "uuid",
                    "example": "MasterBrandName"
                },
                "BrandName": {
                    "type": "string",
                    "format": "uuid",
                    "example": "BrandName"
                }
            }
        },
		"ListOfContact": {
            "type": "object",
            "required": [
				"UserId"
            ],
            "properties": {
                "UserId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "UserId"
                }
            }
        },
        "Alerts": {
            "type": "object",
            "required": [
                "AlertName",
                "AlertType",
                "BusinessAccount",
                "Count",
                "Date",
                "Description",
                "KADAccount",
                "SerialNumber",
                "Severity"
            ],
            "properties": {
                "AlertName": {
                    "type": "string",
                    "format": "uuid",
                    "example": "AlertName"
                },
                "AlertType": {
                    "type": "string",
                    "format": "uuid",
                    "example": "AlertType"
                },
                "Description": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Description"
                },
                "Severity": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Severity"
                },
                "Date": {
                    "type": "string",
                            "format": "date-time",
                    "example": "2016-08-29T09:12:33.001Z"
                },
                "KADAccount": {
                    "type": "string",
                    "format": "uuid",
                    "example": "KADAccount"
                },
                "BusinessAccount": {
                    "type": "string",
                    "format": "uuid",
                    "example": "BusinessAccount"
                },
                "SerialNumber": {
                    "type": "string",
                    "format": "uuid",
                    "example": "SerialNumber"
                },
                "Count": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Count"
                }
            }
        },
        "Consumption": {
            "type": "object",
            "required": [
                "KADAccountId",
                "BusinessAccountId",
                "MasterBrand",
                "Brand",
                "LidType",
                "BrewDate",
                "Variety",
                "SerialNum",
                "KADAccountName",
                "BusinessAccountName",
                "UserID",
                "COUNTConsumption",
                "COUNTAlert",
                "AVGConsumption"
            ],
            "properties": {
                "KADAccountId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "KADAccountId"
                },
                "BusinessAccountId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "BusinessAccountId"
                },
                "MasterBrand": {
                    "type": "string",
                    "format": "uuid",
                    "example": "MasterBrand"
                },
                "Brand": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Brand"
                },
                "LidType": {
                    "type": "string",
                    "format": "uuid",
                    "example": "LidType"
                },
                "BrewDate": {
                    "type": "string",
                            "format": "date-time",
                    "example": "2016-08-29T09:12:33.001Z"
                },
                "Variety": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Variety"
                },
                "SerialNum": {
                    "type": "string",
                    "format": "uuid",
                    "example": "SerialNum"
                },
                "KADAccountName": {
                    "type": "string",
                    "format": "uuid",
                    "example": "KADAccountName"
                },
                "BusinessAccountName": {
                    "type": "string",
                    "format": "uuid",
                    "example": "BusinessAccountName"
                },
                "UserID": {
                    "type": "string",
                    "format": "uuid",
                    "example": "UserID"
                },
                "COUNTConsumption": {
                    "type": "string",
                    "format": "uuid",
                    "example": "COUNTConsumption"
                },
                "COUNTAlert": {
                    "type": "string",
                    "format": "uuid",
                    "example": "COUNTAlert"
                },
                "AVGConsumption": {
                    "type": "string",
                    "format": "uuid",
                    "example": "AVGConsumption"
                }
            }
        },
        "Variety": {
            "type": "object",
            "required": [
                "VarietyName"
            ],
            "properties": {
                "VarietyName": {
                    "type": "string",
                    "format": "uuid",
                    "example": "VarietyName"
                }
            }
        },
        "LocationList": {
            "type": "object",
            "required": [
                "PlacementLocationName"
            ],
            "properties": {
                "PlacementLocationName": {
                    "type": "string",
                    "format": "uuid",
                    "example": "PlacementLocationName"
                }
            }
        },
		 "PublishUnpublishMediaRequest": {
            "type": "object",
            "required": [
                "SerialNumberList",
                "MediaId"
            ],
            "properties": {
                "MediaId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "MediaId"
                },
                "SerialNumberList": {
                    "type": "array",
					"items": {
                                "$ref": "#/definitions/SerialNumber"
					}					
                }
            }
        },
		 "SerialNumber": {
            "type": "object",
            "required": [
                "SerialNumber"
            ],
            "properties": {
                "SerialNumber": {
                    "type": "string",
                    "format": "uuid",
                    "example": "SerialNumber"
                }
            }
        },
		"PublishUnpublishMediaResponse": {
            "type": "object",
            "required": [
                "Status",
                "ErrorMessage"
            ],
            "properties": {
                "Status": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Success"
                },
                "ErrorMessage": {
                    "type": "string",
                    "format": "uuid",
                    "example": "NA"
                }
            }
        },
		 "MediaPLList": {
            "type": "object",
            "required": [
                "BusinessAccountId",
                "KADAccountId",
                "MediaId",
                "Image",
                "Title",
                "Type",
				"Status",
                "NumberOfBrewer",
                "LastModified"
               
                
            ],
            "properties": {
                "Image": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Image"
                },
                "Title": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Title"
                },
                "Type": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Type"
                },
                "Status": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Status"
                },
                "NumberofBrewer": {
                    "type": "string",
                    "format": "uuid",
                    "example": "NumberofBrewer"
                },
                "LastModified": {
                    "type": "string",
                     "format": "date-time",
                    "example": "2016-08-29T09:12:33.001Z"
                },
                "MediaId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "MediaId"
                },
                "KADAccountId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "KADAccountId"
                },
                "BusinessAccountId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "BusinessAccountId"
                }
            }
        },
		 "createMediaPlayListRequest": {
            "type": "object",
            "required": [
                "PlayListName",
                "PlayListNumber",
                "Description",
                "Type",
                "KADAccount",
				"BusinessAccount",
                "DefaultBrewerId",
                "LastModified",
				"LastModifiedAMPUserId",
				"MediaList"
            ],
            "properties": {
                "PlayListName": {
                    "type": "string",
                    "format": "uuid",
                    "example": "PlayListName"
                },
                "PlayListNumber": {
                    "type": "string",
                    "format": "uuid",
                    "example": "PlayListNumber"
                },
                "Description": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Description"
                },
                "Type": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Type"
                },
                "KADAccount": {
                    "type": "string",
                    "format": "uuid",
                    "example": "KADAccount"
                },
                "BusinessAccount": {
                    "type": "string",
                    "format": "uuid",
                    "example": "BusinessAccount"
                },
                "DefaultBrewerId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "DefaultBrewerId"
                },
                "LastModified": {
                    "type": "string",
                    "format": "date-time",
                    "example": "LastModified"
                },
                "LastModifiedAMPUserId": {
                    "type": "string",
                    "format": "uuid",
                    "example": "LastModifiedAMPUserId"
                },
                "Medialist": {
                    "type": "array",
					"items": {
                                "$ref": "#/definitions/Medialist"
					}					
                }
            }
        },
		"Medialist": {
            "type": "object",
            "required": [
                "ImageName",
				"ImageURL",
				"Order",
				"TransitionTime",
				"MediaNumber",
				"LastModifiedAMPUserId",
				"Type"
			],
			"properties": {
                 "ImageName": {
                    "type": "string",
                    "format": "uuid",
                    "example": "ImageName"
                },
                "ImageURL": {
                    "type": "string",
                    "format": "uuid",
                    "example": "ImageURL"
                },
                "Order": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Order"
                },
                "TransitionTime": {
                    "type": "string",
                    "format": "uuid",
                    "example": "TransitionTime"
                },
                "MediaNumber": {
                    "type": "string",
                    "format": "date-time",
                    "example": "MediaNumber"
                },
                "LastModifiedAMPUserId": {
		
                    "type": "string",
                    "format": "uuid",
                    "example": "LastModifiedAMPUserId"
                },
                "Type": {
                    "type": "string",
                    "format": "Type",
                    "example": "Type"
                }
            }
        },
		"MediaDetailsList": {
            "type": "object",
            "required": [
                "Image",
				"Title",
				"Type",
				"URL",
				"Status",
				"NumberOfBrewer",
				"LastModified"				
            ],
			"properties": {
                 "Image": {
                    "type": "string",
                    "format": "uuid",
                    "example": "ImageName"
                },
                "Title": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Title"
                },
                "Type": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Type"
                },
                "URL": {
                    "type": "string",
                    "format": "uuid",
                    "example": "https://google.com/image.png"
                },
				"Status": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Status"
                },
                "NumberOfBrewer": {
                    "type": "string",
                    "format": "uuid",
                    "example": "NumberOfBrewer"
                },
                "LastModified": {
                    "type": "string",  
					"format": "date-time",
                    "example": "2016-08-29T09:12:33.001Z"
                }

            }
        },
		"MediaDetails": {
            "type": "object",
            "required": [
                "ImageName",
				"Title",
				"Description",
				"URL"					
            ],
			"properties": {
                 "ImageName": {
                    "type": "string",
                    "format": "uuid",
                    "example": "ImageName"
                },
                "Title": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Title"
                },
                "Description": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Description"
                },
                "URL": {
                    "type": "string",
                    "format": "uuid",
                    "example": "URL"
                }
            }
        },
		"createMediaPlayListResponse": {
            "type": "object",
            "required": [
                "Status",
                "ErrorMessage"
            ],
            "properties": {
                "Status": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Success"
                },
                "ErrorMessage": {
                    "type": "string",
                    "format": "uuid",
                    "example": "NA"
                }
            }
        },
		"BrewerDetailsListResponse": {
            "type": "object",
            "required": [
                "SerialNumber",
                "DeviceType",
                "PlacementLocation",
                "Status",
				"KADAccount",
				"BusinessAccount",
                "RegistrationApprovalStatus",
                "RegistrationDate",
                "Model"                
            ],
            "properties": {
                "SerialNumber": {
                    "type": "string",
                    "format": "uuid",
                    "example": "SerialNumber"
                },
                "DeviceType": {
                    "type": "string",
                    "format": "uuid",
                    "example": "DeviceType"
                },
                "PlacementLocation": {
                    "type": "string",
                    "format": "uuid",
                    "example": "PlacementLocation"
                },
                "Status": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Status"
                },
                "KADAccount": {
                    "type": "string",
                    "format": "uuid",
                    "example": "KADBusinessAccount"
                },
                "BusinessAccount": {
                    "type": "string",
                    "format": "uuid",
                    "example": "KADBusinessAccount"
                },
                "RegistrationApprovalStatus": {
                    "type": "string",
                    "format": "uuid",
                    "example": "RegistrationApprovalStatus"
                },
                "RegistrationDate": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2016-08-29T09:12:33.001Z"
                },
                "Model": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Model"
                }
            }
        },
		"RegisterBrewerResponse": {
            "type": "object",
            "required": [
                "Status",
                "ErrorMessage"
            ],
            "properties": {
                "Status": {
                    "type": "string",
                    "format": "uuid",
                    "example": "Success"
                },
                "ErrorMessage": {
                    "type": "string",
                    "format": "uuid",
                    "example": "NA"
                }
            }
        },
       
       
    }
}
