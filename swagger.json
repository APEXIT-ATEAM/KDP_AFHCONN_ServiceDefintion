{
  "swagger" : "2.0",
  "info" : {
    "description" : "These are APIs for Uninstall",
    "version" : "1.0.0",
    "title" : "AMP OIC APIs",
    "contact" : {
      "email" : "bryan.arndorfer_ex@kdrp.com"
    }
  },
  "host" : "virtserver.swaggerhub.com",
  "basePath" : "/ic/api/1.0",
  "tags" : [ {
    "name" : "OIC",
    "description" : "TEST"
  }, {
    "name" : "OIOT",
    "description" : "Test"
  }, {
    "name" : "OEC",
    "description" : "Test"
  }, {
    "name" : "AZURE",
    "description" : "Test"
  } ],
  "schemes" : [ "https" ],
  "paths" : {
    "/uninstall_start" : {
      "post" : {
        "tags" : [ "OIC" ],
        "summary" : "Submit SR to uninstall brewer",
        "description" : "By passing in the appropriate parameters, the uninstall process begins\n",
        "operationId" : "uninstall_start",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "$ref" : "#/parameters/header_partnerID"
        }, {
          "$ref" : "#/parameters/requesterID"
        }, {
          "in" : "body",
          "name" : "InstallRequest",
          "description" : "submit Brewer un-installation request parameters",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/InstallRequest"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS"
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "description" : "incorrect security"
          }
        }
      }
    },
    "/o_iot_cleanup" : {
      "post" : {
        "tags" : [ "OIC" ],
        "summary" : "call to cleanup O IOT items",
        "description" : "call to cleanup O IOT items\n",
        "operationId" : "o_iot_cleanup",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "clean",
          "description" : "submit iot id to clean up",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/O_IOT_REQUEST"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS"
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "description" : "incorrect security"
          }
        }
      }
    },
    "/azure_iot_cleanup" : {
      "post" : {
        "tags" : [ "OIC" ],
        "summary" : "uninstall brewer in Azure IOT",
        "description" : "uninstall brewer in Azure IOT",
        "operationId" : "azure_iot_cleanup",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "clean",
          "description" : "submit iot id to clean up",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/O_IOT_REQUEST"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS"
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "description" : "incorrect security"
          }
        }
      }
    },
    "/iot/api/v2/devices/{device-id}" : {
      "delete" : {
        "tags" : [ "OIOT" ],
        "summary" : "o_iot_device_deactivate",
        "description" : "Deactivate Device",
        "operationId" : "o_iot_device_deactivate",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "device-id",
          "in" : "path",
          "description" : "pass a device-id",
          "required" : true,
          "type" : "string"
        } ],
        "responses" : {
          "204" : {
            "description" : "Successfully processed."
          },
          "403" : {
            "description" : "Forbidden. The server understood the request, but is refusing to fulfill it. Authorization will not help and the request SHOULD NOT be repeated."
          },
          "401" : {
            "description" : "Unauthorized. The request requires user authentication."
          },
          "404" : {
            "description" : "Not Found. The server has not found anything matching the Request-URI. No indication is given of whether the condition is temporary or permanent."
          }
        }
      }
    },
    "/KGMAsset_c{OEC_DEVICE_ID}" : {
      "post" : {
        "tags" : [ "OEC" ],
        "summary" : "reset asset in KGMAsset + Installbased Asset",
        "description" : "oec_deactivate_device\n",
        "operationId" : "oec_deactivate_device_kgm",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "OEC_DEVICE_ID",
          "in" : "path",
          "required" : true,
          "description" : "send in the OEC Device ID needing changes",
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "values needed in EC",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EC_KGMAssetUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS"
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "description" : "incorrect security"
          }
        }
      }
    },
    "/installedBaseAssets{OEC_DEVICE_ID}" : {
      "post" : {
        "tags" : [ "OEC" ],
        "summary" : "reset asset in KGMAsset + Installbased Asset",
        "description" : "oec_deactivate_device\n",
        "operationId" : "oec_deactivate_device_ib",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "OEC_DEVICE_ID",
          "in" : "path",
          "required" : true,
          "description" : "send in teh OEC Device ID needing changes",
          "type" : "string"
        }, {
          "in" : "body",
          "name" : "body",
          "description" : "values needed in EC",
          "required" : true,
          "schema" : {
            "$ref" : "#/definitions/EC_IBAssetUpdate"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "SUCCESS"
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "401" : {
            "description" : "incorrect security"
          }
        }
      }
    },
    "/azure_deactivate_device" : {
      "post" : {
        "tags" : [ "AZURE" ],
        "summary" : "azure_deactivate_device",
        "description" : "!!!Awaiting Azure IOT service!!!\n",
        "operationId" : "azure_deactivate_device",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "PlacementLocationName",
          "in" : "query",
          "description" : "pass an optional PlacementLocationName string",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria"
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/azure_factoryreset_device" : {
      "post" : {
        "tags" : [ "AZURE" ],
        "summary" : "azure factoryreset on device",
        "description" : "!!!Awaiting Azure IOT service!!!\n",
        "operationId" : "azure_factoryreset_device",
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "name" : "PlacementLocationName",
          "in" : "query",
          "description" : "pass an optional PlacementLocationName string",
          "required" : false,
          "type" : "string"
        } ],
        "responses" : {
          "200" : {
            "description" : "search results matching criteria"
          },
          "400" : {
            "description" : "bad input parameter"
          }
        }
      }
    },
    "/serviceRequests" : {
      "post" : {
        "tags" : [ "OEC" ],
        "summary" : "sr_create",
        "description" : "sr_create\n",
        "operationId" : "sr_create",
        "produces" : [ "application/json" ],
        "security" : [ {
          "basicAuth" : [ ]
        } ],
        "parameters" : [ {
          "name" : "test",
          "in" : "body",
          "description" : "search results matching criteria",
          "schema" : {
            "properties" : {
              "SeverityCd" : {
                "type" : "string",
                "example" : "ORA_SVC_SEV3"
              },
              "ChannelTypeCd" : {
                "type" : "string",
                "example" : "WEB_AMP"
              },
              "BUOrgId" : {
                "type" : "string",
                "example" : 300000000473163
              },
              "Category_c" : {
                "type" : "string",
                "example" : "SVC_BREWER_UNINSTALLATION"
              },
              "AssetSerialNumber_Id_c" : {
                "type" : "string",
                "example" : 300000419003656
              },
              "Scanned_c" : {
                "type" : "string",
                "example" : "N"
              },
              "AmpRequestorUserId_c" : {
                "type" : "string",
                "example" : 300000412298942
              },
              "RequestedPartnerId_c" : {
                "type" : "string",
                "example" : 300000312756369
              },
              "AlertNum_c" : {
                "type" : "string",
                "example" : "B1"
              },
              "AMP_ContactId_Id_c" : {
                "type" : "string",
                "example" : 300000418860710
              },
              "AMP_Requestor_Id_c" : {
                "type" : "string",
                "example" : 300000412298942
              },
              "RequestedPlacementDesc_c" : {
                "type" : "string",
                "example" : "Bryan Home-3"
              },
              "AmpRequestedCurrentAccount_Id_c" : {
                "type" : "string",
                "example" : 300000418909023
              },
              "Title" : {
                "type" : "string",
                "example" : "UnInstallRequest"
              }
            }
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Success"
          },
          "400" : {
            "description" : "bad input parameter"
          },
          "404" : {
            "description" : "not found"
          }
        }
      }
    }
  },
  "definitions" : {
    "LocationList" : {
      "type" : "object"
    },
    "BrewerDetail" : {
      "type" : "object",
      "required" : [ "assetId", "bewCount", "brewerPartnerId", "contactId", "deviceType", "dataRecipeVer", "appUIVersion", "model", "networkConnection", "placementLocation", "registrationStatus", "registrationDate", "serialNumber", "status", "warrantyEndDate", "deviceId" ],
      "properties" : {
        "serialNumber" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "450.000.0000"
        },
        "deviceType" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "pod2cup"
        },
        "placementLocation" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "1st floor Cafetaria"
        },
        "status" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Registered"
        },
        "registrationStatus" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Approved"
        },
        "registrationDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "UTC Datetime when registration request was approved",
          "example" : "2016-08-29T09:12:33.001Z"
        },
        "deviceId" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "00000000123abc"
        },
        "assetId" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "00000002347647a"
        },
        "warrantyEndDate" : {
          "type" : "string",
          "format" : "date-time",
          "description" : "Warranty End Date in OEC",
          "example" : "2016-08-29T09:12:33.001Z"
        },
        "model" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "K4500"
        },
        "dataRecipeVer" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "1.1.1"
        },
        "appUIVersion" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "0.0.1"
        },
        "brewCount" : {
          "type" : "integer",
          "format" : "uuid",
          "example" : 0
        },
        "networkConnection" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Online"
        },
        "brewerPartnerId" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "d00000000123"
        },
        "contactId" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "c00000000123"
        }
      }
    },
    "BrewerResponseDetailsList" : {
      "type" : "object",
      "required" : [ "AssetId", "BrewCount", "BrewerPartnerId", "ContactId", "DeviceType", "ErrorDescription", "ErrroCode", "Firmware", "Model", "NetworkConnection", "PlacementLocation", "RegistrationApprovalStatus", "RegistrationDate", "SerialNumber", "Status", "WarrantyEndDate", "deviceId" ],
      "properties" : {
        "Status" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Status"
        },
        "ErrroCode" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "ErrroCode"
        },
        "ErrorDescription" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "ErrorDescription"
        },
        "SerialNumber" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "SerialNumber"
        },
        "DeviceType" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "DeviceType"
        },
        "PlacementLocation" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "PlacementLocation"
        },
        "KABBusinessAccount" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "KABBusinessAccount"
        },
        "RegistrationApprovalStatus" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "RegistrationApprovalStatus"
        },
        "RegistrationDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2016-08-29T09:12:33.001Z"
        },
        "deviceId" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "deviceId"
        },
        "AssetId" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "AssetId"
        },
        "WarrantyEndDate" : {
          "type" : "string",
          "format" : "date-time",
          "example" : "2016-08-29T09:12:33.001Z"
        },
        "Model" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Model"
        },
        "Firmware" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Firmware"
        },
        "BrewCount" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "BrewCount"
        },
        "NetworkConnection" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "NetworkConnection"
        },
        "BrewerPartnerId" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "BrewerPartnerId"
        },
        "ContactId" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "ContactId"
        }
      }
    },
    "O_IOT_REQUEST" : {
      "type" : "object",
      "required" : [ "serialNum", "assetid", "deviceId_oracle", "deviceId_azure" ],
      "properties" : {
        "serialNum" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "4500.000.0000"
        },
        "assetId" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "OECAssetID"
        },
        "deviceId_oracle" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Oracle IOT ID"
        },
        "deviceId_azure" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "AZURE IOT ID"
        }
      }
    },
    "EC_KGMAssetUpdate" : {
      "type" : "object",
      "required" : [ "AMPRegistrationStatus_c" ],
      "properties" : {
        "AMPRegistrationStatus_c" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "UNINSTALLED"
        },
        "AssetCurrentAccount_c" : {
          "type" : "string",
          "format" : "uuid",
          "example" : null
        }
      }
    },
    "EC_IBAssetUpdate" : {
      "type" : "object",
      "required" : [ "IotEnabledFlag" ],
      "properties" : {
        "IotEnabledFlag" : {
          "type" : "boolean",
          "format" : "uuid",
          "example" : false
        }
      }
    },
    "InstallRequest" : {
      "type" : "object",
      "required" : [ "serialNum", "assetid", "deviceId_oracle", "deviceId_azure", "scanned", "brewerLocation", "contactId" ],
      "properties" : {
        "serialNum" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "4500.000.0000"
        },
        "assetId" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "OECAssetID"
        },
        "deviceId_oracle" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Oracle IOT ID"
        },
        "deviceId_azure" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "AZURE IOT ID"
        },
        "scanned" : {
          "type" : "boolean",
          "format" : "uuid",
          "example" : true
        },
        "brewerLocation" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Bryans Office"
        },
        "contactId" : {
          "type" : "string",
          "format" : "uuid",
          "example" : 1000958
        },
        "requestId" : {
          "type" : "string",
          "format" : "uuid",
          "example" : 10000965
        }
      }
    },
    "ServiceRequest" : {
      "type" : "object",
      "required" : [ "requestType", "serialNum", "assetId", "deviceId", "modelNum", "dataRecipeVer", "appUIVer", "requestedPartnerId", "officeAccountId", "brewerLocation", "contactId", "flgSNScanned", "requestId" ],
      "properties" : {
        "requestType" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Success"
        },
        "serialNum" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "4500.000.0000"
        },
        "assetId" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Success"
        },
        "deviceId" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Success"
        },
        "modelNum" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Success"
        },
        "dataRecipeVer" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Success"
        },
        "appUIVer" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Success"
        },
        "requestedPartnerId" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Success"
        },
        "officeAccountId" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Success"
        },
        "brewerLocation" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Success"
        },
        "contactId" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Success"
        },
        "flgSNScanned" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Success"
        },
        "requestId" : {
          "type" : "string",
          "format" : "uuid",
          "example" : "Success"
        }
      }
    }
  },
  "parameters" : {
    "requesterID" : {
      "in" : "header",
      "name" : "X-Requester-ID",
      "type" : "string",
      "required" : true,
      "description" : "pass the userId for the requester as a header variable"
    },
    "header_partnerID" : {
      "in" : "header",
      "name" : "X-Partner-ID",
      "type" : "string",
      "required" : true,
      "description" : "pass the Partner Accpunt ID of the user as a path parameter"
    },
    "query_partnerId" : {
      "in" : "query",
      "name" : "partnerId",
      "type" : "string",
      "required" : false,
      "description" : "pass the Partner Accpunt ID of the user as a query parameter"
    },
    "path_partnerId" : {
      "in" : "path",
      "name" : "partnerId",
      "type" : "string",
      "required" : true,
      "description" : "pass the Partner Accpunt ID of the user as a path parameter"
    },
    "userId" : {
      "in" : "path",
      "name" : "userId",
      "type" : "string",
      "required" : true,
      "description" : "pass the userId for the requester as a path variable"
    }
  },
  "securityDefinitions" : {
    "OAuth2" : {
      "type" : "oauth2",
      "flow" : "accessCode",
      "authorizationUrl" : "https://example.com/oauth/authorize",
      "tokenUrl" : "https://example.com/oauth/token",
      "scopes" : {
        "read" : "Grants read access",
        "write" : "Grants write access",
        "admin" : "Grants read and write access to administrative information"
      }
    },
    "basicAuth" : {
      "type" : "basic"
    }
  }
}